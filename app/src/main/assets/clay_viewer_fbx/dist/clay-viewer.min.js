!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):e.ClayViewer=t()}(this,function(){"use strict";function e(e,n,i){"object"==typeof n&&(i=n,n=null);var a,o=this;if(!(e instanceof Function)){a=[];for(var s in e)e.hasOwnProperty(s)&&a.push(s)}var u=function(n){if(o.apply(this,arguments),e instanceof Function?t(this,e.call(this,n)):r(this,e,a),this.constructor===u)for(var i=u.__initializers__,s=0;s<i.length;s++)i[s].apply(this,arguments)};u.__super__=o,o.__initializers__?u.__initializers__=o.__initializers__.slice():u.__initializers__=[],n&&u.__initializers__.push(n);var l=function(){};return l.prototype=o.prototype,u.prototype=new l,u.prototype.constructor=u,t(u.prototype,i),u.extend=o.extend,u.derive=o.extend,u}function t(e,t){if(t)for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])}function r(e,t,r){for(var n=0;n<r.length;n++){var i=r[n];e[i]=t[i]}}function n(e,t){this.action=e,this.context=t}function i(e){function t(t){var n=e.getExtension(t);n||(n=e.getExtension("MOZ_"+t)),n||(n=e.getExtension("WEBKIT_"+t)),r[t]=n}for(var r={},n={},i=0;i<St.length;i++){t(St[i])}for(var i=0;i<wt.length;i++){var a=wt[i];n[a]=e.getParameter(e[a])}this.getExtension=function(e){return e in r||t(e),r[e]},this.getParameter=function(e){return n[e]}}function a(e,t,r){return e<t?t:e>r?r:e}function o(e){return e=Math.round(e),e<0?0:e>255?255:e}function s(e){return e=Math.round(e),e<0?0:e>360?360:e}function u(e){return e<0?0:e>1?1:e}function l(e){return o(e.length&&"%"===e.charAt(e.length-1)?parseFloat(e)/100*255:parseInt(e,10))}function c(e){return u(e.length&&"%"===e.charAt(e.length-1)?parseFloat(e)/100:parseFloat(e))}function h(e,t,r){return r<0?r+=1:r>1&&(r-=1),6*r<1?e+(t-e)*r*6:2*r<1?t:3*r<2?e+(t-e)*(2/3-r)*6:e}function f(e,t,r){return e+(t-e)*r}function d(e,t,r,n,i){return e[0]=t,e[1]=r,e[2]=n,e[3]=i,e}function p(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e}function m(e,t){ir&&p(ir,t),ir=nr.put(e,ir||t.slice())}function _(e,t){var r=(parseFloat(e[0])%360+360)%360/360,n=c(e[1]),i=c(e[2]),a=i<=.5?i*(n+1):i+n-i*n,s=2*i-a;return t=t||[],d(t,o(255*h(s,a,r+1/3)),o(255*h(s,a,r)),o(255*h(s,a,r-1/3)),1),4===e.length&&(t[3]=e[3]),t}function v(e){if(e){var t,r,n=e[0]/255,i=e[1]/255,a=e[2]/255,o=Math.min(n,i,a),s=Math.max(n,i,a),u=s-o,l=(s+o)/2;if(0===u)t=0,r=0;else{r=l<.5?u/(s+o):u/(2-s-o);var c=((s-n)/6+u/2)/u,h=((s-i)/6+u/2)/u,f=((s-a)/6+u/2)/u;n===s?t=f-h:i===s?t=1/3+c-f:a===s&&(t=2/3+h-c),t<0&&(t+=1),t>1&&(t-=1)}var d=[360*t,r,l];return null!=e[3]&&d.push(e[3]),d}}function g(e){var t=Object.keys(e);t.sort();for(var r=[],n=0;n<t.length;n++){var i=t[n],a=e[i];null===a?r.push(i):r.push(i+" "+a.toString())}return r.join("\n")}function y(e,t,r){r.sort();for(var n=[],i=0;i<r.length;i++){var a=r[i];n.push(a)}var o=g(e)+"\n"+g(t)+"\n"+n.join("\n");if(or[o])return or[o];var s=bt.genGUID();return or[o]=s,s}function x(e){for(var t=e.split("\n"),r=0,n=t.length;r<n;r++)t[r]=r+1+": "+t[r];return t.join("\n")}function T(e,t,r){if(!e.getShaderParameter(t,e.COMPILE_STATUS))return[e.getShaderInfoLog(t),x(r)].join("\n")}function E(e,t,r){function n(e,r,n,a){var o="";isNaN(r)&&(r=r in t?t[r]:i[r]),isNaN(n)&&(n=n in t?t[n]:i[n]);for(var s=parseInt(r);s<parseInt(n);s++)o+="{"+a.replace(/float\s*\(\s*_idx_\s*\)/g,s.toFixed(1)).replace(/_idx_/g,s)+"}";return o}var i={};for(var a in r)i[a+"_COUNT"]=r[a];return e.replace(pr,n)}function b(e,t,r){var n=[];if(t)for(var i in t){var a=t[i];a>0&&n.push("#define "+i.toUpperCase()+"_COUNT "+a)}if(r)for(var o=0;o<r.length;o++){var s=r[o];n.push("#define "+s.toUpperCase()+"_ENABLED")}for(var s in e){var u=e[s];null===u?n.push("#define "+s):n.push("#define "+s+" "+u.toString())}return n.join("\n")}function A(e){for(var t=[],r=0;r<e.length;r++)t.push("#extension GL_"+e[r]+" : enable");return t.join("\n")}function S(e){return["precision",e,"float"].join(" ")+";\n"+["precision",e,"int"].join(" ")+";\n"+["precision",e,"sampler2D"].join(" ")+";\n"}function w(e){this._renderer=e,this._cache={}}function C(e,t){var r="vertex:"+e+"fragment:"+t;if(Cr[r])return Cr[r];var n=bt.genGUID();return Cr[r]=n,Rr[n]={vertex:e,fragment:t},n}function R(e){return e.replace(/[ \t]*\/\/.*\n/g,"").replace(/[ \t]*\/\*[\s\S]*?\*\//g,"")}function N(){console.error("Wrong uniform/attributes syntax")}function M(e,t){function r(e){e||N();var t=e.match(/\[(.*?)\]/);s=e.replace(/\[(.*?)\]/,""),l[s]={},t&&(l[s].isArray=!0,l[s].arraySize=t[1])}for(var n=/[,=\(\):]/,i=t.replace(/:\s*\[\s*(.*)\s*\]/g,"="+e+"($1)").replace(/\s+/g,"").split(/(?=[,=\(\):])/g),a=[],o=0;o<i.length;o++)i[o].match(n)?a.push(i[o].charAt(0),i[o].slice(1)):a.push(i[o]);i=a;var s,u=0,l={},c=null;r(i[0]);for(var o=1;o<i.length;o++){var h=i[o];if(h)if("="!==h)if(":"!==h)if(","!==h)if(")"!==h)if("("!==h)if(h.indexOf("vec")>=0){if(1!==u&&4!==u){N();break}u=2,c=[]}else if(1!==u)if(4!==u)r(h),u=0;else{var f=h;br.indexOf(f)>=0||Ar.indexOf(f)>=0||Sr.indexOf(f)>=0?l[s].semantic=f:"ignore"===f||"unconfigurable"===f?l[s].ignore=!0:l[s].value="bool"===e?"true"===f:parseFloat(f)}else l[s].value="bool"===e?"true"===h:parseFloat(h),c=null;else{if(2!==u){N();break}if(!(c instanceof Array)){N();break}c.push(+i[++o])}else l[s].value=new Mt.Float32Array(c),c=null,u=5;else if(2===u){if(!(c instanceof Array)){N();break}c.push(+i[++o])}else u=5;else u=4;else{if(0!==u&&3!==u){N();break}u=1}}return l}function L(e,t){"object"==typeof e&&(t=e.fragment,e=e.vertex),e=R(e),t=R(t),this._shaderID=C(e,t),this._vertexCode=L.parseImport(e),this._fragmentCode=L.parseImport(t),this.attributeSemantics={},this.matrixSemantics={},this.uniformSemantics={},this.matrixSemanticKeys=[],this.uniformTemplates={},this.attributes={},this.textures={},this.vertexDefines={},this.fragmentDefines={},this._parseAttributes(),this._parseUniforms(),this._parseDefines()}function P(e){return e.material}function D(){}function O(e,t,r){this.availableAttributes=e,this.availableAttributeSymbols=t,this.indicesBuffer=r,this.vao=null}function I(e){var t=new XMLHttpRequest;t.open("get",e.url),t.responseType=e.responseType||"text",e.onprogress&&(t.onprogress=function(t){if(t.lengthComputable){var r=t.loaded/t.total;e.onprogress(r,t.loaded,t.total)}else e.onprogress(null)}),t.onload=function(r){t.status>=400?e.onerror&&e.onerror():e.onload&&e.onload(t.response)},e.onerror&&(t.onerror=e.onerror),t.send(null)}function F(e){var t=[],r=Object.keys(e);r.sort();for(var n=0;n<r.length;n++){var i=r[n];t.push(i+" "+e[i])}var a=t.join("\n");if(_n[a])return _n[a];var o=bt.genGUID();return _n[a]=o,o}function B(){this.opaque=[],this.transparent=[],this._opaqueCount=0,this._transparentCount=0}function U(e,t){if(t.castShadow&&!e.castShadow)return!0}function k(e){return Math.pow(2,Math.round(Math.log(e)/Math.LN2))}function H(e,t){var r=k(e.width),n=k(e.height);return t=t||document.createElement("canvas"),t.width=r,t.height=n,t.getContext("2d").drawImage(e.image,0,0,r,n),t}function z(){this._pool={}}function G(e,t,r){Ln[e]={vertex:t,fragment:r}}function V(){}function W(e,t,r,n,i,a){var o=t[i],s=t[i+1],u=t[i+2];return e[0]=o+n*(r[a]-o),e[1]=s+n*(r[a+1]-s),e[2]=u+n*(r[a+2]-u),e}function j(e,t,r,n,i,a){var o,s,u,l,c,h=t[0+i],f=t[1+i],d=t[2+i],p=t[3+i],m=r[0+a],_=r[1+a],v=r[2+a],g=r[3+a];return s=h*m+f*_+d*v+p*g,s<0&&(s=-s,m=-m,_=-_,v=-v,g=-g),1-s>1e-6?(o=Math.acos(s),u=Math.sin(o),l=Math.sin((1-n)*o)/u,c=Math.sin(n*o)/u):(l=1-n,c=n),e[0]=l*h+c*m,e[1]=l*f+c*_,e[2]=l*d+c*v,e[3]=l*p+c*g,e}function X(e){return{byte:Mt.Int8Array,ubyte:Mt.Uint8Array,short:Mt.Int16Array,ushort:Mt.Uint16Array}[e]||Mt.Float32Array}function q(e){return"attr_"+e}function K(e,t,r,n){switch(this.name=e,this.type=t,this.size=r,this.semantic=n||"",this.value=null,r){case 1:this.get=function(e){return this.value[e]},this.set=function(e,t){this.value[e]=t},this.copy=function(e,t){this.value[e]=this.value[e]};break;case 2:this.get=function(e,t){var r=this.value;return t[0]=r[2*e],t[1]=r[2*e+1],t},this.set=function(e,t){var r=this.value;r[2*e]=t[0],r[2*e+1]=t[1]},this.copy=function(e,t){var r=this.value;t*=2,e*=2,r[e]=r[t],r[e+1]=r[t+1]};break;case 3:this.get=function(e,t){var r=3*e,n=this.value;return t[0]=n[r],t[1]=n[r+1],t[2]=n[r+2],t},this.set=function(e,t){var r=3*e,n=this.value;n[r]=t[0],n[r+1]=t[1],n[r+2]=t[2]},this.copy=function(e,t){var r=this.value;t*=3,e*=3,r[e]=r[t],r[e+1]=r[t+1],r[e+2]=r[t+2]};break;case 4:this.get=function(e,t){var r=this.value,n=4*e;return t[0]=r[n],t[1]=r[n+1],t[2]=r[n+2],t[3]=r[n+3],t},this.set=function(e,t){var r=this.value,n=4*e;r[n]=t[0],r[n+1]=t[1],r[n+2]=t[2],r[n+3]=t[3]},this.copy=function(e,t){var r=this.value;t*=4,e*=4,r[e]=r[t],r[e+1]=r[t+1],r[e+2]=r[t+2],r[e+3]=r[t+3]}}}function Y(e,t,r,n,i){this.name=e,this.type=t,this.buffer=r,this.size=n,this.semantic=i,this.symbol="",this.needsRemove=!1}function Z(e){this.buffer=e,this.count=0}function J(e,t,r,n){var i=e.accessors[r],a=t.bufferViews[i.bufferView],o=i.byteOffset||0,s=ni[i.componentType]||Mt.Float32Array,u=ii[i.type];null==u&&n&&(u=1);var l=new s(a,o,u*i.count),c=i.extensions&&i.extensions.WEB3D_quantized_attributes;if(c){for(var h,f,d=new Mt.Float32Array(u*i.count),p=c.decodeMatrix,h=new Array(u),f=new Array(u),m=0;m<u;m++)h[m]=p[u*(u+1)+m],f[m]=p[m*(u+1)+m];for(var _=0;_<i.count;_++)for(var m=0;m<u;m++)d[_*u+m]=l[_*u+m]*f[m]+h[m];l=d}return l}function Q(e,t){return e[t]}function $(e,t,r){e[t]=r}function ee(e,t,r){return(t-e)*r+e}function te(e,t,r,n,i){var a=e.length;if(1==i)for(var o=0;o<a;o++)n[o]=ee(e[o],t[o],r);else for(var s=e[0].length,o=0;o<a;o++)for(var u=0;u<s;u++)n[o][u]=ee(e[o][u],t[o][u],r)}function re(e){return void 0!==e&&("string"!=typeof e&&"number"==typeof e.length)}function ne(e){if(re(e)){var t=e.length;if(re(e[0])){for(var r=[],n=0;n<t;n++)r.push(oi.call(e[n]));return r}return oi.call(e)}return e}function ie(e,t,r,n,i,a,o,s,u){var l=e.length;if(1==u)for(var c=0;c<l;c++)s[c]=ae(e[c],t[c],r[c],n[c],i,a,o);else for(var h=e[0].length,c=0;c<l;c++)for(var f=0;f<h;f++)s[c][f]=ae(e[c][f],t[c][f],r[c][f],n[c][f],i,a,o)}function ae(e,t,r,n,i,a,o){var s=.5*(r-e),u=.5*(n-t);return(2*(t-r)+s+u)*o+(-3*(t-r)-2*s-u)*a+s*i+t}function oe(e,t,r){var n=e.length,i=t.length;if(n!==i){if(n>i)e.length=i;else for(var a=n;a<i;a++)e.push(1===r?t[a]:oi.call(t[a]))}for(var o=e[0]&&e[0].length,a=0;a<e.length;a++)if(1===r)isNaN(e[a])&&(e[a]=t[a]);else for(var s=0;s<o;s++)isNaN(e[a][s])&&(e[a][s]=t[a][s])}function se(e,t,r){if(e===t)return!0;var n=e.length;if(n!==t.length)return!1;if(1===r){for(var i=0;i<n;i++)if(e[i]!==t[i])return!1}else for(var a=e[0].length,i=0;i<n;i++)for(var o=0;o<a;o++)if(e[i][o]!==t[i][o])return!1;return!0}function ue(e,t,r,n,i,a,o){var s=e._getter,u=e._setter,l="spline"===t,c=n.length;if(c){var h=n[0].value,f=re(h),d=f&&re(h[0])?2:1;n.sort(function(e,t){return e.time-t.time});for(var p=[],m=[],_=[],v=n[0].value,g=!0,y=0;y<c;y++){p.push(n[y].time/o);var x=n[y].value;f&&se(x,v,d)||!f&&x===v||(g=!1),v=x,m.push(x),_.push(n[y].easing)}if(!g){for(var T=m[c-1],y=0;y<c-1;y++)f?oe(m[y],T,d):isNaN(m[y])&&!isNaN(T)&&(m[y]=T);f&&oe(s(e._target,i),T,d);var E,y,b,A,S,w,C,R=0,N=0,M=function(e,t){if(t<N){for(E=Math.min(R+1,c-1),y=E;y>=0&&!(p[y]<=t);y--);y=Math.min(y,c-2)}else{for(y=R;y<c&&!(p[y]>t);y++);y=Math.min(y-1,c-2)}R=y,N=t;var r=p[y+1]-p[y];0!==r&&(b=(t-p[y])/r,b=Math.max(Math.min(1,b),0),b=_[y+1](b),l?(S=m[y],A=m[0===y?y:y-1],w=m[y>c-2?c-1:y+1],C=m[y>c-3?c-1:y+2],a?u(e,i,a(s(e,i),A,S,w,C,b)):f?ie(A,S,w,C,b,b*b,b*b*b,s(e,i),d):u(e,i,ae(A,S,w,C,b,b*b,b*b*b))):a?u(e,i,a(s(e,i),m[y],m[y+1],b)):f?te(m[y],m[y+1],b,s(e,i),d):u(e,i,ee(m[y],m[y+1],b)))},L=new Gn({target:e._target,life:o,loop:e._loop,delay:e._delay,onframe:M,onfinish:r});return t&&"spline"!==t&&L.setEasing(t),L}}}function le(e,t,r,n,i){this._tracks={},this._target=e,this._loop=t||!1,this._getter=r||Q,this._setter=n||$,this._interpolater=i||null,this._delay=0,this._doneList=[],this._onframeList=[],this._clipList=[],this._maxTime=0,this._lastKFTime=0}function ce(e){return e}function he(e,t){var r=new di;return zr.get({url:e,responseType:t,onload:function(e){r.resolve(e)},onerror:function(e){r.reject(e)}}),r}function fe(e){return"CANVAS"===e.nodeName||"VIDEO"===e.nodeName||e.complete}function de(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}function pe(e,t,r,n){if(e[3]>0){var i=Math.pow(2,e[3]-128-8+n);t[r+0]=e[0]*i,t[r+1]=e[1]*i,t[r+2]=e[2]*i}else t[r+0]=0,t[r+1]=0,t[r+2]=0;return t[r+3]=1,t}function me(e,t,r){for(var n="",i=t;i<r;i++)n+=Ii(e[i]);return n}function _e(e,t){t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3]}function ve(e,t,r,n){for(var i=0,a=0,o=n;o>0;)if(e[a][0]=t[r++],e[a][1]=t[r++],e[a][2]=t[r++],e[a][3]=t[r++],1===e[a][0]&&1===e[a][1]&&1===e[a][2]){for(var s=e[a][3]<<i>>>0;s>0;s--)_e(e[a-1],e[a]),a++,o--;i+=8}else a++,o--,i=0;return r}function ge(e,t,r,n){if(n<Fi|n>Bi)return ve(e,t,r,n);var i=t[r++];if(2!=i)return ve(e,t,r-1,n);if(e[0][1]=t[r++],e[0][2]=t[r++],i=t[r++],(e[0][2]<<8>>>0|i)>>>0!==n)return null;for(var i=0;i<4;i++)for(var a=0;a<n;){var o=t[r++];if(o>128){o=(127&o)>>>0;for(var s=t[r++];o--;)e[a++][i]=s}else for(;o--;)e[a++][i]=t[r++]}return r}function ye(e){bt.defaultsWithPropList(e,ji,Xi),xe(e);for(var t="",r=0;r<Xi.length;r++){t+=e[Xi[r]].toString()}return t}function xe(e){var t=Te(e.width,e.height);e.format===Ct.DEPTH_COMPONENT&&(e.useMipmap=!1),t&&e.useMipmap||(e.minFilter==Ct.NEAREST_MIPMAP_NEAREST||e.minFilter==Ct.NEAREST_MIPMAP_LINEAR?e.minFilter=Ct.NEAREST:e.minFilter!=Ct.LINEAR_MIPMAP_LINEAR&&e.minFilter!=Ct.LINEAR_MIPMAP_NEAREST||(e.minFilter=Ct.LINEAR)),t||(e.wrapS=Ct.CLAMP_TO_EDGE,e.wrapT=Ct.CLAMP_TO_EDGE)}function Te(e,t){return 0==(e&e-1)&&0==(t&t-1)}function Ee(e,t){var r=new Qi;t=t||{};var n={textures:{},parameters:{}},i=function(i,a){for(var o=0;o<e.nodes.length;o++){var s=e.nodes[o],u=be(s,n,t);u&&r.addNode(u)}};for(var a in e.parameters){var o=e.parameters[a];n.parameters[a]=Ae(o)}return Se(e,n,t,function(e){n.textures=e,i()}),r}function be(e,t,r){var n,i,a,o=e.type||"filter";if("filter"===o){var s=e.shader.trim(),u=ca.exec(s);if(u?n=L.source(u[1].trim()):"#"===s.charAt(0)&&(n=t.shaders[s.substr(1)]),n||(n=s),!n)return}if(e.inputs){i={};for(var l in e.inputs)"string"==typeof e.inputs[l]?i[l]=e.inputs[l]:i[l]={node:e.inputs[l].node,pin:e.inputs[l].pin}}if(e.outputs){a={};for(var l in e.outputs){var c=e.outputs[l];a[l]={},null!=c.attachment&&(a[l].attachment=c.attachment),null!=c.keepLastFrame&&(a[l].keepLastFrame=c.keepLastFrame),null!=c.outputLastFrame&&(a[l].outputLastFrame=c.outputLastFrame),c.parameters&&(a[l].parameters=Ae(c.parameters))}}var h;if(h="scene"===o?new $i({name:e.name,scene:r.scene,camera:r.camera,outputs:a}):"texture"===o?new ea({name:e.name,outputs:a}):new ta({name:e.name,shader:n,inputs:i,outputs:a})){if(e.parameters)for(var l in e.parameters){var f=e.parameters[l];"string"==typeof f&&(f=f.trim(),"#"===f.charAt(0)?f=t.textures[f.substr(1)]:h.on("beforerender",we(l,Re(f)))),h.setParameter(l,f)}if(e.defines&&h.pass)for(var l in e.defines){var f=e.defines[l];h.pass.material.define("fragment",l,f)}}return h}function Ae(e){var t={};return e?(["type","minFilter","magFilter","wrapS","wrapT","flipY","useMipmap"].forEach(function(r){var n=e[r];null!=n&&("string"==typeof n&&(n=Qt[n]),t[r]=n)}),["width","height"].forEach(function(r){if(null!=e[r]){var n=e[r];"string"==typeof n?(n=n.trim(),t[r]=Ce(r,Re(n))):t[r]=n}}),null!=e.useMipmap&&(t.useMipmap=e.useMipmap),t):t}function Se(e,t,r,n){if(!e.textures)return void n({});var i={},a=0,o=!1,s=r.textureRootPath;bt.each(e.textures,function(e,t){var r,u=e.path,l=Ae(e.parameters);if(Array.isArray(u)&&6===u.length)s&&(u=u.map(function(e){return bt.relative2absolute(e,s)})),r=new Ti(l);else{if("string"!=typeof u)return;s&&(u=bt.relative2absolute(u,s)),r=new Nn(l)}r.load(u),a++,r.once("success",function(){i[t]=r,0===--a&&(n(i),o=!0)})}),0!==a||o||n(i)}function we(e,t){return function(r){var n=r.getDevicePixelRatio(),i=r.getWidth(),a=r.getHeight(),o=t(i,a,n);this.setParameter(e,o)}}function Ce(e,t){return function(e){var r=e.getDevicePixelRatio(),n=e.getWidth(),i=e.getHeight();return t(n,i,r)}}function Re(e){var t=/^expr\((.*)\)$/.exec(e);if(t)try{var r=new Function("width","height","dpr","return "+t[1]);return r(1,1),r}catch(e){throw new Error("Invalid expression.")}}function Ne(e,t){for(var r=0,n=1/t,i=e;i>0;)r+=n*(i%t),i=Math.floor(i/t),n/=t;return r}function Me(e){for(var t=new Uint8Array(e*e*4),r=0,n=new Ot,i=0;i<e;i++)for(var a=0;a<e;a++)n.set(2*Math.random()-1,2*Math.random()-1,0).normalize(),t[r++]=255*(.5*n.x+.5),t[r++]=255*(.5*n.y+.5),t[r++]=0,t[r++]=255;return t}function Le(e){return new Nn({pixels:Me(e),wrapS:Qt.REPEAT,wrapT:Qt.REPEAT,width:e,height:e})}function Pe(e,t,r){var n=new Float32Array(3*e);t=t||0;for(var i=0;i<e;i++){var a=Ne(i+t,2)*(r?1:2)*Math.PI,o=Ne(i+t,3)*Math.PI,s=Math.random(),u=Math.cos(a)*Math.sin(o)*s,l=Math.cos(o)*s,c=Math.sin(a)*Math.sin(o)*s;n[3*i]=u,n[3*i+1]=l,n[3*i+2]=c}return n}function De(e){e=e||{},this._ssaoPass=new Vi({fragment:L.source("ecgl.ssao.estimate")}),this._blurPass=new Vi({fragment:L.source("ecgl.ssao.blur")}),this._framebuffer=new wi,this._ssaoTexture=new Nn,this._blurTexture=new Nn,this._depthTex=e.depthTexture,this._normalTex=e.normalTexture,this.setNoiseSize(4),this.setKernelSize(e.kernelSize||12),null!=e.radius&&this.setParameter("radius",e.radius),null!=e.power&&this.setParameter("power",e.power),this._normalTex||(this._ssaoPass.material.disableTexture("normalTex"),this._blurPass.material.disableTexture("normalTex")),this._depthTex||this._blurPass.material.disableTexture("depthTex"),this._blurPass.material.setUniform("normalTex",this._normalTex),this._blurPass.material.setUniform("depthTex",this._depthTex)}function Oe(e,t,r){ha.identity();var n=new _i({widthSegments:t,heightSegments:r});switch(e){case"px":Kt.translate(ha,ha,Ot.POSITIVE_X),Kt.rotateY(ha,ha,Math.PI/2);break;case"nx":Kt.translate(ha,ha,Ot.NEGATIVE_X),Kt.rotateY(ha,ha,-Math.PI/2);break;case"py":Kt.translate(ha,ha,Ot.POSITIVE_Y),Kt.rotateX(ha,ha,-Math.PI/2);break;case"ny":Kt.translate(ha,ha,Ot.NEGATIVE_Y),Kt.rotateX(ha,ha,Math.PI/2);break;case"pz":Kt.translate(ha,ha,Ot.POSITIVE_Z);break;case"nz":Kt.translate(ha,ha,Ot.NEGATIVE_Z),Kt.rotateY(ha,ha,Math.PI)}return n.applyTransform(ha),n}function Ie(e){e=e||{},this._ssrPass=new Vi({fragment:L.source("ecgl.ssr.main"),clearColor:[0,0,0,0]}),this._blurPass1=new Vi({fragment:L.source("ecgl.ssr.blur"),clearColor:[0,0,0,0]}),this._blurPass2=new Vi({fragment:L.source("ecgl.ssr.blur"),clearColor:[0,0,0,0]}),this._blendPass=new Vi({fragment:L.source("clay.compositor.blend")}),this._blendPass.material.disableTexturesAll(),this._blendPass.material.enableTexture(["texture1","texture2"]),this._ssrPass.setUniform("gBufferTexture1",e.normalTexture),this._ssrPass.setUniform("gBufferTexture2",e.depthTexture),this._ssrPass.setUniform("gBufferTexture3",e.albedoTexture),this._blurPass1.setUniform("gBufferTexture1",e.normalTexture),this._blurPass1.setUniform("gBufferTexture2",e.depthTexture),this._blurPass2.setUniform("gBufferTexture1",e.normalTexture),this._blurPass2.setUniform("gBufferTexture2",e.depthTexture),this._blurPass2.material.define("fragment","VERTICAL"),this._blurPass2.material.define("fragment","BLEND"),this._ssrTexture=new Nn({type:Qt.HALF_FLOAT}),this._texture2=new Nn({type:Qt.HALF_FLOAT}),this._texture3=new Nn({type:Qt.HALF_FLOAT}),this._prevTexture=new Nn({type:Qt.HALF_FLOAT}),this._currentTexture=new Nn({type:Qt.HALF_FLOAT}),this._frameBuffer=new wi({depthBuffer:!1}),this._normalDistribution=null,this._totalSamples=256,this._samplePerFrame=4,this._ssrPass.material.define("fragment","SAMPLE_PER_FRAME",this._samplePerFrame),this._ssrPass.material.define("fragment","TOTAL_SAMPLES",this._totalSamples),this._downScale=1}function Fe(e){var t=document.createElement("canvas");t.width=t.height=1;var r=t.getContext("2d");return r.fillStyle=e||"#000",r.fillRect(0,0,1,1),t}function Be(e,t,r,n,i){var a=e.gl;t.setUniform(a,"1i",r,i),a.activeTexture(a.TEXTURE0+i),n.isRenderable()?n.bind(e):n.unbind(e)}function Ue(e,t,r){var n,i,a;return function(o,s,u){if(!a||a.material!==o.material){var l,c,h,f=o.material,d=o.__program,p=f.isDefined("fragment","USE_ROUGHNESS"),m=f.isDefined("fragment","DOUBLE_SIDED");p?(l=1-f.get("roughness"),c=f.get("roughnessMap"),h=f.getDefine("fragment","ROUGHNESS_CHANNEL")):(l=f.get("glossiness"),c=f.get("glossinessMap"),h=f.getDefine("fragment","GLOSSINESS_CHANNEL"));var _=!!c,v=f.get("normalMap")||t,g=f.get("uvRepeat"),y=f.get("uvOffset");c=c||r,u!==s?(s.set("glossiness",l),s.set("normalMap",v),s.set("roughGlossMap",c),s.set("useRoughGlossMap",+_),s.set("useRoughness",+p),s.set("doubleSided",+m),s.set("roughGlossChannel",+h||0),s.set("uvRepeat",g),s.set("uvOffset",y)):(d.setUniform(e,"1f","glossiness",l),n!==v&&Be(this,d,"normalMap",v,0),i!==c&&Be(this,d,"roughGlossMap",c,1),d.setUniform(e,"1i","useRoughGlossMap",+_),d.setUniform(e,"1i","useRoughness",+p),d.setUniform(e,"1i","doubleSided",+m),d.setUniform(e,"1i","roughGlossChannel",+h||0),null!=g&&d.setUniform(e,"2f","uvRepeat",g),null!=y&&d.setUniform(e,"2f","uvOffset",y)),n=v,i=c,a=o}}}function ke(e,t,r){var n,i,a;return function(o,s,u){if(!i||i.material!==o.material){var l=o.__program,c=o.material,h=c.get("color"),f=c.get("metalness")||0,d=c.get("diffuseMap"),p=c.get("metalnessMap"),m=c.get("uvRepeat"),_=c.get("uvOffset"),v=!!p;d=d||t,p=p||r,u!==s?(s.set("color",h),s.set("metalness",f),s.set("diffuseMap",d),s.set("metalnessMap",p),s.set("useMetalnessMap",+v),s.set("uvRepeat",m),s.set("uvOffset",_),s.set("linear",+c.linear||0)):(l.setUniform(e,"1f","metalness",f),l.setUniform(e,"3f","color",h),n!==d&&Be(this,l,"diffuseMap",d,0),a!==p&&Be(this,l,"metalnessMap",p,1),l.setUniform(e,"1i","useMetalnessMap",+v),l.setUniform(e,"2f","uvRepeat",m),l.setUniform(e,"2f","uvOffset",_),l.setUniform(e,"1i","linear",+c.linear||0)),n=d,a=p,i=o}}}function He(e,t){var r=e[0],n=e[1],i=e[2];return 0===t?1:1===t?r:2===t?n:3===t?i:4===t?r*i:5===t?n*i:6===t?r*n:7===t?3*i*i-1:r*r-n*n}function ze(e,t,r,n){for(var i=new Mt.Float32Array(27),a=wa.create(),o=wa.create(),s=wa.create(),u=0;u<9;u++){for(var l=wa.create(),c=0;c<Ra.length;c++){for(var h=t[Ra[c]],f=wa.create(),d=0,p=0,m=Na[Ra[c]],_=0;_<n;_++)for(var v=0;v<r;v++){a[0]=v/(r-1)*2-1,a[1]=_/(n-1)*2-1,a[2]=-1,wa.normalize(a,a),s[0]=a[m[0]]*m[3],s[1]=a[m[1]]*m[4],s[2]=a[m[2]]*m[5],o[0]=h[p++]/255,o[1]=h[p++]/255,o[2]=h[p++]/255;var g=h[p++]/255*8.12;o[0]*=g,o[1]*=g,o[2]*=g,wa.scaleAndAdd(f,f,o,He(s,u)*-a[2]),d+=-a[2]}wa.scaleAndAdd(l,l,f,1/d)}i[3*u]=l[0]/6,i[3*u+1]=l[1]/6,i[3*u+2]=l[2]/6}return i}function Ge(e){return e=Math.round(e),e<0?0:e>255?255:e}function Ve(e){return e<0?0:e>1?1:e}function We(e){return Ge(e.length&&"%"===e.charAt(e.length-1)?parseFloat(e)/100*255:parseInt(e,10))}function je(e){return Ve(e.length&&"%"===e.charAt(e.length-1)?parseFloat(e)/100:parseFloat(e))}function Xe(e,t,r){return r<0?r+=1:r>1&&(r-=1),6*r<1?e+(t-e)*r*6:2*r<1?t:3*r<2?e+(t-e)*(2/3-r)*6:e}function qe(e,t,r,n,i){return e[0]=t,e[1]=r,e[2]=n,e[3]=i,e}function Ke(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e}function Ye(e,t){Pa&&Ke(Pa,t),Pa=La.put(e,Pa||t.slice())}function Ze(e,t){if(e){t=t||[];var r=La.get(e);if(r)return Ke(t,r);e+="";var n=e.replace(/ /g,"").toLowerCase();if(n in Ma)return Ke(t,Ma[n]),Ye(e,t),t;if("#"!==n.charAt(0)){var i=n.indexOf("("),a=n.indexOf(")");if(-1!==i&&a+1===n.length){var o=n.substr(0,i),s=n.substr(i+1,a-(i+1)).split(","),u=1;switch(o){case"rgba":if(4!==s.length)return void qe(t,0,0,0,1);u=je(s.pop());case"rgb":return 3!==s.length?void qe(t,0,0,0,1):(qe(t,We(s[0]),We(s[1]),We(s[2]),u),Ye(e,t),t);case"hsla":return 4!==s.length?void qe(t,0,0,0,1):(s[3]=je(s[3]),Je(s,t),Ye(e,t),t);case"hsl":return 3!==s.length?void qe(t,0,0,0,1):(Je(s,t),Ye(e,t),t);default:return}}qe(t,0,0,0,1)}else{if(4===n.length){var l=parseInt(n.substr(1),16);return l>=0&&l<=4095?(qe(t,(3840&l)>>4|(3840&l)>>8,240&l|(240&l)>>4,15&l|(15&l)<<4,1),Ye(e,t),t):void qe(t,0,0,0,1)}if(7===n.length){var l=parseInt(n.substr(1),16);return l>=0&&l<=16777215?(qe(t,(16711680&l)>>16,(65280&l)>>8,255&l,1),Ye(e,t),t):void qe(t,0,0,0,1)}}}}function Je(e,t){var r=(parseFloat(e[0])%360+360)%360/360,n=je(e[1]),i=je(e[2]),a=i<=.5?i*(n+1):i+n-i*n,o=2*i-a;return t=t||[],qe(t,Ge(255*Xe(o,a,r+1/3)),Ge(255*Xe(o,a,r)),Ge(255*Xe(o,a,r-1/3)),1),4===e.length&&(t[3]=e[3]),t}function Qe(e,t){if(e&&e.length){var r=e[0]+","+e[1]+","+e[2];return"rgba"!==t&&"hsva"!==t&&"hsla"!==t||(r+=","+e[3]),t+"("+r+")"}}function $e(e){return!e||"none"===e}function et(e){return e instanceof HTMLCanvasElement||e instanceof HTMLImageElement||e instanceof HTMLVideoElement||e instanceof Image}function tt(){this._sourceTexture=new Nn({type:Qt.HALF_FLOAT}),this._depthTexture=new Nn({format:Qt.DEPTH_COMPONENT,type:Qt.UNSIGNED_INT}),this._framebuffer=new wi,this._framebuffer.attach(this._sourceTexture),this._framebuffer.attach(this._depthTexture,wi.DEPTH_ATTACHMENT),this._gBufferPass=new ga({renderTransparent:!0,enableTargetTexture3:!1}),this._compositor=Ee(Ia);var e=this._compositor.getNodeByName("source");e.texture=this._sourceTexture;var t=this._compositor.getNodeByName("coc");this._sourceNode=e,this._cocNode=t,this._compositeNode=this._compositor.getNodeByName("composite"),this._fxaaNode=this._compositor.getNodeByName("FXAA"),this._dofBlurNodes=["dof_far_blur","dof_near_blur","dof_coc_blur"].map(function(e){return this._compositor.getNodeByName(e)},this),this._dofBlurKernel=null,this._dofBlurKernelSize=new Float32Array(0),this._finalNodesChain=Ba.map(function(e){return this._compositor.getNodeByName(e)},this);var r={normalTexture:this._gBufferPass.getTargetTexture1(),depthTexture:this._gBufferPass.getTargetTexture2(),albedoTexture:this._gBufferPass.getTargetTexture3()};this._ssaoPass=new De(r),this._ssrPass=new Ie(r)}function rt(){for(var e=[],t=0;t<30;t++)e.push([Ne(t,2),Ne(t,3)]);this._haltonSequence=e,this._frame=0,this._sourceTex=new Nn,this._sourceFb=new wi,this._sourceFb.attach(this._sourceTex),this._prevFrameTex=new Nn,this._outputTex=new Nn;var r=this._blendPass=new Vi({fragment:L.source("clay.compositor.blend")});r.material.disableTexturesAll(),r.material.enableTexture(["texture1","texture2"]),this._blendFb=new wi({depthBuffer:!1}),this._outputPass=new Vi({fragment:L.source("clay.compositor.output"),blendWithPrevious:!0}),this._outputPass.material.define("fragment","OUTPUT_ALPHA"),this._outputPass.material.blend=function(e){e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ONE,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA)}}function nt(e,t,r){this.renderer=e,r=r||"perspective",this.scene=new vn,this.rootNode=this.scene,this.viewport={x:0,y:0,width:0,height:0},this.preZ=!1,this.setProjection(r),this._compositor=new tt,this._temporalSS=new rt,t&&(this._shadowMapPass=new Yi({lightFrustumBias:20}));for(var n=[],i=0,a=0;a<30;a++){for(var o=[],s=0;s<6;s++)o.push(4*Ne(i,2)-2),o.push(4*Ne(i,3)-2),i++;n.push(o)}this._pcfKernels=n,this._enableTemporalSS="auto",this.scene.on("beforerender",function(e,t,r){this.needsTemporalSS()&&this._temporalSS.jitterProjection(e,r)},this)}function it(e){this.setScene(e)}function at(e){if(null==e||"object"!=typeof e)return e;var t=e,r=Wa.call(e);if("[object Array]"===r){t=[];for(var n=0,i=e.length;n<i;n++)t[n]=at(e[n])}else if(Va[r]){var a=e.constructor;if(e.constructor.from)t=a.from(e);else{t=new a(e.length);for(var n=0,i=e.length;n<i;n++)t[n]=at(e[n])}}else if(!Ga[r]&&!ht(e)&&!ct(e)){t={};for(var o in e)e.hasOwnProperty(o)&&(t[o]=at(e[o]))}return t}function ot(e,t,r){if(!ut(t)||!ut(e))return r?at(t):e;for(var n in t)if(t.hasOwnProperty(n)){var i=e[n],a=t[n];!ut(a)||!ut(i)||st(a)||st(i)||ct(a)||ct(i)||lt(a)||lt(i)||ht(a)||ht(i)?!r&&n in e||(e[n]=at(t[n],!0)):ot(i,a,r)}return e}function st(e){return"[object Array]"===Wa.call(e)}function ut(e){var t=typeof e;return"function"===t||!!e&&"object"==t}function lt(e){return!!Ga[Wa.call(e)]}function ct(e){return"object"==typeof e&&"number"==typeof e.nodeType&&"object"==typeof e.ownerDocument}function ht(e){return e[ja]}function ft(e,t){for(var r=[],n=[],i=[],a=[],o=[],s=[],u=e.geometry,l=e.skeleton.getSubSkinMatrices(e.__GUID__,e.joints),c=0;c<e.joints.length;c++){a[c]=a[c]||[];for(var h=0;h<16;h++)a[c][h]=l[16*c+h]}for(var f=u.attributes.position,d=u.attributes.weight,p=u.attributes.joint,m=[1/0,1/0,1/0],_=[-1/0,-1/0,-1/0],c=0;c<u.vertexCount;c++){f.get(c,r),d.get(c,i),p.get(c,n),i[3]=1-i[0]-i[1]-i[2],Xa.set(o,0,0,0);for(var h=0;h<4;h++)n[h]>=0&&i[h]>1e-6&&(Xa.transformMat4(s,r,a[n[h]]),Xa.scaleAndAdd(o,o,s,i[h]));Xa.min(m,m,o),Xa.max(_,_,o)}t.min.setArray(m),t.max.setArray(_)}function dt(e,t){t=t||new Vt;var r=new Vt;return e.traverse(function(e){e.geometry&&(e.isSkinnedMesh()?(ft(e,r),e.geometry.boundingBox.copy(r)):(r.copy(e.geometry.boundingBox),r.applyTransform(e.worldTransform)),t.union(r))}),t}function pt(e){var t=e[1][0]-e[0][0],r=e[1][1]-e[0][1];return Math.sqrt(t*t+r*r)}function mt(e){return[(e[0][0]+e[1][0])/2,(e[0][1]+e[1][1])/2]}function _t(e){return Array.isArray(e)||(e=[e,e]),e}function vt(e,t){t=at(t),ot(t,za),this.init(e,t)}var gt={extend:e,derive:e},yt={trigger:function(e){if(this.hasOwnProperty("__handlers__")&&this.__handlers__.hasOwnProperty(e)){var t=this.__handlers__[e],r=t.length,n=-1,i=arguments;switch(i.length){case 1:for(;++n<r;)t[n].action.call(t[n].context);return;case 2:for(;++n<r;)t[n].action.call(t[n].context,i[1]);return;case 3:for(;++n<r;)t[n].action.call(t[n].context,i[1],i[2]);return;case 4:for(;++n<r;)t[n].action.call(t[n].context,i[1],i[2],i[3]);return;case 5:for(;++n<r;)t[n].action.call(t[n].context,i[1],i[2],i[3],i[4]);return;default:for(;++n<r;)t[n].action.apply(t[n].context,Array.prototype.slice.call(i,1));return}}},on:function(e,t,r){if(e&&t){var i=this.__handlers__||(this.__handlers__={});if(i[e]){if(this.has(e,t))return}else i[e]=[];var a=new n(t,r||this);return i[e].push(a),this}},once:function(e,t,r){function n(){i.off(e,n),t.apply(this,arguments)}if(e&&t){var i=this;return this.on(e,n,r)}},before:function(e,t,r){if(e&&t)return e="before"+e,this.on(e,t,r)},after:function(e,t,r){if(e&&t)return e="after"+e,this.on(e,t,r)},success:function(e,t){return this.once("success",e,t)},error:function(e,t){return this.once("error",e,t)},off:function(e,t){var r=this.__handlers__||(this.__handlers__={});if(!t)return void(r[e]=[]);if(r[e]){for(var n=r[e],i=[],a=0;a<n.length;a++)t&&n[a].action!==t&&i.push(n[a]);r[e]=i}return this},has:function(e,t){var r=this.__handlers__;if(!r||!r[e])return!1;for(var n=r[e],i=0;i<n.length;i++)if(n[i].action===t)return!0}},xt=0,Tt=Array.prototype,Et=Tt.forEach,bt={genGUID:function(){return++xt},relative2absolute:function(e,t){if(!t||e.match(/^\//))return e;for(var r=e.split("/"),n=t.split("/"),i=r[0];"."===i||".."===i;)".."===i&&n.pop(),r.shift(),i=r[0];return n.join("/")+"/"+r.join("/")},extend:function(e,t){if(t)for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);return e},defaults:function(e,t){if(t)for(var r in t)void 0===e[r]&&(e[r]=t[r]);return e},extendWithPropList:function(e,t,r){if(t)for(var n=0;n<r.length;n++){var i=r[n];e[i]=t[i]}return e},defaultsWithPropList:function(e,t,r){if(t)for(var n=0;n<r.length;n++){var i=r[n];null==e[i]&&(e[i]=t[i])}return e},each:function(e,t,r){if(e&&t)if(e.forEach&&e.forEach===Et)e.forEach(t,r);else if(e.length===+e.length)for(var n=0,i=e.length;n<i;n++)t.call(r,e[n],n,e);else for(var a in e)e.hasOwnProperty(a)&&t.call(r,e[a],a,e)},isObject:function(e){return e===Object(e)},isArray:function(e){return Array.isArray(e)},isArrayLike:function(e){return!!e&&e.length===+e.length},clone:function(e){if(bt.isObject(e)){if(bt.isArray(e))return e.slice();if(bt.isArrayLike(e)){for(var t=new e.constructor(e.length),r=0;r<e.length;r++)t[r]=e[r];return t}return bt.extend({},e)}return e}},At=function(){this.__uid__=bt.genGUID()};At.__initializers__=[function(e){bt.extend(this,e)}],bt.extend(At,gt),bt.extend(At.prototype,yt)
;var St=["OES_texture_float","OES_texture_half_float","OES_texture_float_linear","OES_texture_half_float_linear","OES_standard_derivatives","OES_vertex_array_object","OES_element_index_uint","WEBGL_compressed_texture_s3tc","WEBGL_depth_texture","EXT_texture_filter_anisotropic","EXT_shader_texture_lod","WEBGL_draw_buffers","EXT_frag_depth","EXT_sRGB"],wt=["MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE"],Ct={DEPTH_BUFFER_BIT:256,STENCIL_BUFFER_BIT:1024,COLOR_BUFFER_BIT:16384,POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6,ZERO:0,ONE:1,SRC_COLOR:768,ONE_MINUS_SRC_COLOR:769,SRC_ALPHA:770,ONE_MINUS_SRC_ALPHA:771,DST_ALPHA:772,ONE_MINUS_DST_ALPHA:773,DST_COLOR:774,ONE_MINUS_DST_COLOR:775,SRC_ALPHA_SATURATE:776,FUNC_ADD:32774,BLEND_EQUATION:32777,BLEND_EQUATION_RGB:32777,BLEND_EQUATION_ALPHA:34877,FUNC_SUBTRACT:32778,FUNC_REVERSE_SUBTRACT:32779,BLEND_DST_RGB:32968,BLEND_SRC_RGB:32969,BLEND_DST_ALPHA:32970,BLEND_SRC_ALPHA:32971,CONSTANT_COLOR:32769,ONE_MINUS_CONSTANT_COLOR:32770,CONSTANT_ALPHA:32771,ONE_MINUS_CONSTANT_ALPHA:32772,BLEND_COLOR:32773,ARRAY_BUFFER:34962,ELEMENT_ARRAY_BUFFER:34963,ARRAY_BUFFER_BINDING:34964,ELEMENT_ARRAY_BUFFER_BINDING:34965,STREAM_DRAW:35040,STATIC_DRAW:35044,DYNAMIC_DRAW:35048,BUFFER_SIZE:34660,BUFFER_USAGE:34661,CURRENT_VERTEX_ATTRIB:34342,FRONT:1028,BACK:1029,FRONT_AND_BACK:1032,CULL_FACE:2884,BLEND:3042,DITHER:3024,STENCIL_TEST:2960,DEPTH_TEST:2929,SCISSOR_TEST:3089,POLYGON_OFFSET_FILL:32823,SAMPLE_ALPHA_TO_COVERAGE:32926,SAMPLE_COVERAGE:32928,NO_ERROR:0,INVALID_ENUM:1280,INVALID_VALUE:1281,INVALID_OPERATION:1282,OUT_OF_MEMORY:1285,CW:2304,CCW:2305,LINE_WIDTH:2849,ALIASED_POINT_SIZE_RANGE:33901,ALIASED_LINE_WIDTH_RANGE:33902,CULL_FACE_MODE:2885,FRONT_FACE:2886,DEPTH_RANGE:2928,DEPTH_WRITEMASK:2930,DEPTH_CLEAR_VALUE:2931,DEPTH_FUNC:2932,STENCIL_CLEAR_VALUE:2961,STENCIL_FUNC:2962,STENCIL_FAIL:2964,STENCIL_PASS_DEPTH_FAIL:2965,STENCIL_PASS_DEPTH_PASS:2966,STENCIL_REF:2967,STENCIL_VALUE_MASK:2963,STENCIL_WRITEMASK:2968,STENCIL_BACK_FUNC:34816,STENCIL_BACK_FAIL:34817,STENCIL_BACK_PASS_DEPTH_FAIL:34818,STENCIL_BACK_PASS_DEPTH_PASS:34819,STENCIL_BACK_REF:36003,STENCIL_BACK_VALUE_MASK:36004,STENCIL_BACK_WRITEMASK:36005,VIEWPORT:2978,SCISSOR_BOX:3088,COLOR_CLEAR_VALUE:3106,COLOR_WRITEMASK:3107,UNPACK_ALIGNMENT:3317,PACK_ALIGNMENT:3333,MAX_TEXTURE_SIZE:3379,MAX_VIEWPORT_DIMS:3386,SUBPIXEL_BITS:3408,RED_BITS:3410,GREEN_BITS:3411,BLUE_BITS:3412,ALPHA_BITS:3413,DEPTH_BITS:3414,STENCIL_BITS:3415,POLYGON_OFFSET_UNITS:10752,POLYGON_OFFSET_FACTOR:32824,TEXTURE_BINDING_2D:32873,SAMPLE_BUFFERS:32936,SAMPLES:32937,SAMPLE_COVERAGE_VALUE:32938,SAMPLE_COVERAGE_INVERT:32939,COMPRESSED_TEXTURE_FORMATS:34467,DONT_CARE:4352,FASTEST:4353,NICEST:4354,GENERATE_MIPMAP_HINT:33170,BYTE:5120,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,INT:5124,UNSIGNED_INT:5125,FLOAT:5126,DEPTH_COMPONENT:6402,ALPHA:6406,RGB:6407,RGBA:6408,LUMINANCE:6409,LUMINANCE_ALPHA:6410,UNSIGNED_SHORT_4_4_4_4:32819,UNSIGNED_SHORT_5_5_5_1:32820,UNSIGNED_SHORT_5_6_5:33635,FRAGMENT_SHADER:35632,VERTEX_SHADER:35633,MAX_VERTEX_ATTRIBS:34921,MAX_VERTEX_UNIFORM_VECTORS:36347,MAX_VARYING_VECTORS:36348,MAX_COMBINED_TEXTURE_IMAGE_UNITS:35661,MAX_VERTEX_TEXTURE_IMAGE_UNITS:35660,MAX_TEXTURE_IMAGE_UNITS:34930,MAX_FRAGMENT_UNIFORM_VECTORS:36349,SHADER_TYPE:35663,DELETE_STATUS:35712,LINK_STATUS:35714,VALIDATE_STATUS:35715,ATTACHED_SHADERS:35717,ACTIVE_UNIFORMS:35718,ACTIVE_ATTRIBUTES:35721,SHADING_LANGUAGE_VERSION:35724,CURRENT_PROGRAM:35725,NEVER:512,LESS:513,EQUAL:514,LEQUAL:515,GREATER:516,NOTEQUAL:517,GEQUAL:518,ALWAYS:519,KEEP:7680,REPLACE:7681,INCR:7682,DECR:7683,INVERT:5386,INCR_WRAP:34055,DECR_WRAP:34056,VENDOR:7936,RENDERER:7937,VERSION:7938,NEAREST:9728,LINEAR:9729,NEAREST_MIPMAP_NEAREST:9984,LINEAR_MIPMAP_NEAREST:9985,NEAREST_MIPMAP_LINEAR:9986,LINEAR_MIPMAP_LINEAR:9987,TEXTURE_MAG_FILTER:10240,TEXTURE_MIN_FILTER:10241,TEXTURE_WRAP_S:10242,TEXTURE_WRAP_T:10243,TEXTURE_2D:3553,TEXTURE:5890,TEXTURE_CUBE_MAP:34067,TEXTURE_BINDING_CUBE_MAP:34068,TEXTURE_CUBE_MAP_POSITIVE_X:34069,TEXTURE_CUBE_MAP_NEGATIVE_X:34070,TEXTURE_CUBE_MAP_POSITIVE_Y:34071,TEXTURE_CUBE_MAP_NEGATIVE_Y:34072,TEXTURE_CUBE_MAP_POSITIVE_Z:34073,TEXTURE_CUBE_MAP_NEGATIVE_Z:34074,MAX_CUBE_MAP_TEXTURE_SIZE:34076,TEXTURE0:33984,TEXTURE1:33985,TEXTURE2:33986,TEXTURE3:33987,TEXTURE4:33988,TEXTURE5:33989,TEXTURE6:33990,TEXTURE7:33991,TEXTURE8:33992,TEXTURE9:33993,TEXTURE10:33994,TEXTURE11:33995,TEXTURE12:33996,TEXTURE13:33997,TEXTURE14:33998,TEXTURE15:33999,TEXTURE16:34e3,TEXTURE17:34001,TEXTURE18:34002,TEXTURE19:34003,TEXTURE20:34004,TEXTURE21:34005,TEXTURE22:34006,TEXTURE23:34007,TEXTURE24:34008,TEXTURE25:34009,TEXTURE26:34010,TEXTURE27:34011,TEXTURE28:34012,TEXTURE29:34013,TEXTURE30:34014,TEXTURE31:34015,ACTIVE_TEXTURE:34016,REPEAT:10497,CLAMP_TO_EDGE:33071,MIRRORED_REPEAT:33648,FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,INT_VEC2:35667,INT_VEC3:35668,INT_VEC4:35669,BOOL:35670,BOOL_VEC2:35671,BOOL_VEC3:35672,BOOL_VEC4:35673,FLOAT_MAT2:35674,FLOAT_MAT3:35675,FLOAT_MAT4:35676,SAMPLER_2D:35678,SAMPLER_CUBE:35680,VERTEX_ATTRIB_ARRAY_ENABLED:34338,VERTEX_ATTRIB_ARRAY_SIZE:34339,VERTEX_ATTRIB_ARRAY_STRIDE:34340,VERTEX_ATTRIB_ARRAY_TYPE:34341,VERTEX_ATTRIB_ARRAY_NORMALIZED:34922,VERTEX_ATTRIB_ARRAY_POINTER:34373,VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:34975,COMPILE_STATUS:35713,LOW_FLOAT:36336,MEDIUM_FLOAT:36337,HIGH_FLOAT:36338,LOW_INT:36339,MEDIUM_INT:36340,HIGH_INT:36341,FRAMEBUFFER:36160,RENDERBUFFER:36161,RGBA4:32854,RGB5_A1:32855,RGB565:36194,DEPTH_COMPONENT16:33189,STENCIL_INDEX:6401,STENCIL_INDEX8:36168,DEPTH_STENCIL:34041,RENDERBUFFER_WIDTH:36162,RENDERBUFFER_HEIGHT:36163,RENDERBUFFER_INTERNAL_FORMAT:36164,RENDERBUFFER_RED_SIZE:36176,RENDERBUFFER_GREEN_SIZE:36177,RENDERBUFFER_BLUE_SIZE:36178,RENDERBUFFER_ALPHA_SIZE:36179,RENDERBUFFER_DEPTH_SIZE:36180,RENDERBUFFER_STENCIL_SIZE:36181,FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE:36048,FRAMEBUFFER_ATTACHMENT_OBJECT_NAME:36049,FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL:36050,FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE:36051,COLOR_ATTACHMENT0:36064,DEPTH_ATTACHMENT:36096,STENCIL_ATTACHMENT:36128,DEPTH_STENCIL_ATTACHMENT:33306,NONE:0,FRAMEBUFFER_COMPLETE:36053,FRAMEBUFFER_INCOMPLETE_ATTACHMENT:36054,FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:36055,FRAMEBUFFER_INCOMPLETE_DIMENSIONS:36057,FRAMEBUFFER_UNSUPPORTED:36061,FRAMEBUFFER_BINDING:36006,RENDERBUFFER_BINDING:36007,MAX_RENDERBUFFER_SIZE:34024,INVALID_FRAMEBUFFER_OPERATION:1286,UNPACK_FLIP_Y_WEBGL:37440,UNPACK_PREMULTIPLY_ALPHA_WEBGL:37441,CONTEXT_LOST_WEBGL:37442,UNPACK_COLORSPACE_CONVERSION_WEBGL:37443,BROWSER_DEFAULT_WEBGL:37444},Rt=!0;try{var Nt=document.createElement("canvas");if(!(Nt.getContext("webgl")||Nt.getContext("experimental-webgl")))throw new Error}catch(e){Rt=!1}var Mt={};Mt.supportWebGL=function(){return Rt},Mt.Int8Array="undefined"==typeof Int8Array?Array:Int8Array,Mt.Uint8Array="undefined"==typeof Uint8Array?Array:Uint8Array,Mt.Uint16Array="undefined"==typeof Uint16Array?Array:Uint16Array,Mt.Uint32Array="undefined"==typeof Uint32Array?Array:Uint32Array,Mt.Int16Array="undefined"==typeof Int16Array?Array:Int16Array,Mt.Float32Array="undefined"==typeof Float32Array?Array:Float32Array,Mt.Float64Array="undefined"==typeof Float64Array?Array:Float64Array;var Lt="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{},Pt=function(e,t){return t={exports:{}},e(t,t.exports),t.exports}(function(e,t){!function(e){var r={};r.exports=t,function(e){var t="undefined"==typeof window?Lt:window,r=t.GLMAT_EPSILON;null==r&&(r=1e-6);var n=t.GLMAT_ARRAY_TYPE||Array,i=t.GLMAT_RANDOM;i||(i=Math.random);var a={};a.setMatrixArrayType=function(e){n=e},void 0!==e&&(e.glMatrix=a);var o=Math.PI/180;a.toRadian=function(e){return e*o};var s={};s.create=function(){var e=new n(2);return e[0]=0,e[1]=0,e},s.clone=function(e){var t=new n(2);return t[0]=e[0],t[1]=e[1],t},s.fromValues=function(e,t){var r=new n(2);return r[0]=e,r[1]=t,r},s.copy=function(e,t){return e[0]=t[0],e[1]=t[1],e},s.set=function(e,t,r){return e[0]=t,e[1]=r,e},s.add=function(e,t,r){return e[0]=t[0]+r[0],e[1]=t[1]+r[1],e},s.subtract=function(e,t,r){return e[0]=t[0]-r[0],e[1]=t[1]-r[1],e},s.sub=s.subtract,s.multiply=function(e,t,r){return e[0]=t[0]*r[0],e[1]=t[1]*r[1],e},s.mul=s.multiply,s.divide=function(e,t,r){return e[0]=t[0]/r[0],e[1]=t[1]/r[1],e},s.div=s.divide,s.min=function(e,t,r){return e[0]=Math.min(t[0],r[0]),e[1]=Math.min(t[1],r[1]),e},s.max=function(e,t,r){return e[0]=Math.max(t[0],r[0]),e[1]=Math.max(t[1],r[1]),e},s.scale=function(e,t,r){return e[0]=t[0]*r,e[1]=t[1]*r,e},s.scaleAndAdd=function(e,t,r,n){return e[0]=t[0]+r[0]*n,e[1]=t[1]+r[1]*n,e},s.distance=function(e,t){var r=t[0]-e[0],n=t[1]-e[1];return Math.sqrt(r*r+n*n)},s.dist=s.distance,s.squaredDistance=function(e,t){var r=t[0]-e[0],n=t[1]-e[1];return r*r+n*n},s.sqrDist=s.squaredDistance,s.length=function(e){var t=e[0],r=e[1];return Math.sqrt(t*t+r*r)},s.len=s.length,s.squaredLength=function(e){var t=e[0],r=e[1];return t*t+r*r},s.sqrLen=s.squaredLength,s.negate=function(e,t){return e[0]=-t[0],e[1]=-t[1],e},s.inverse=function(e,t){return e[0]=1/t[0],e[1]=1/t[1],e},s.normalize=function(e,t){var r=t[0],n=t[1],i=r*r+n*n;return i>0&&(i=1/Math.sqrt(i),e[0]=t[0]*i,e[1]=t[1]*i),e},s.dot=function(e,t){return e[0]*t[0]+e[1]*t[1]},s.cross=function(e,t,r){var n=t[0]*r[1]-t[1]*r[0];return e[0]=e[1]=0,e[2]=n,e},s.lerp=function(e,t,r,n){var i=t[0],a=t[1];return e[0]=i+n*(r[0]-i),e[1]=a+n*(r[1]-a),e},s.random=function(e,t){t=t||1;var r=2*i()*Math.PI;return e[0]=Math.cos(r)*t,e[1]=Math.sin(r)*t,e},s.transformMat2=function(e,t,r){var n=t[0],i=t[1];return e[0]=r[0]*n+r[2]*i,e[1]=r[1]*n+r[3]*i,e},s.transformMat2d=function(e,t,r){var n=t[0],i=t[1];return e[0]=r[0]*n+r[2]*i+r[4],e[1]=r[1]*n+r[3]*i+r[5],e},s.transformMat3=function(e,t,r){var n=t[0],i=t[1];return e[0]=r[0]*n+r[3]*i+r[6],e[1]=r[1]*n+r[4]*i+r[7],e},s.transformMat4=function(e,t,r){var n=t[0],i=t[1];return e[0]=r[0]*n+r[4]*i+r[12],e[1]=r[1]*n+r[5]*i+r[13],e},s.forEach=function(){var e=s.create();return function(t,r,n,i,a,o){var s,u;for(r||(r=2),n||(n=0),u=i?Math.min(i*r+n,t.length):t.length,s=n;s<u;s+=r)e[0]=t[s],e[1]=t[s+1],a(e,e,o),t[s]=e[0],t[s+1]=e[1];return t}}(),s.str=function(e){return"vec2("+e[0]+", "+e[1]+")"},void 0!==e&&(e.vec2=s);var u={};u.create=function(){var e=new n(3);return e[0]=0,e[1]=0,e[2]=0,e},u.clone=function(e){var t=new n(3);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t},u.fromValues=function(e,t,r){var i=new n(3);return i[0]=e,i[1]=t,i[2]=r,i},u.copy=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e},u.set=function(e,t,r,n){return e[0]=t,e[1]=r,e[2]=n,e},u.add=function(e,t,r){return e[0]=t[0]+r[0],e[1]=t[1]+r[1],e[2]=t[2]+r[2],e},u.subtract=function(e,t,r){return e[0]=t[0]-r[0],e[1]=t[1]-r[1],e[2]=t[2]-r[2],e},u.sub=u.subtract,u.multiply=function(e,t,r){return e[0]=t[0]*r[0],e[1]=t[1]*r[1],e[2]=t[2]*r[2],e},u.mul=u.multiply,u.divide=function(e,t,r){return e[0]=t[0]/r[0],e[1]=t[1]/r[1],e[2]=t[2]/r[2],e},u.div=u.divide,u.min=function(e,t,r){return e[0]=Math.min(t[0],r[0]),e[1]=Math.min(t[1],r[1]),e[2]=Math.min(t[2],r[2]),e},u.max=function(e,t,r){return e[0]=Math.max(t[0],r[0]),e[1]=Math.max(t[1],r[1]),e[2]=Math.max(t[2],r[2]),e},u.scale=function(e,t,r){return e[0]=t[0]*r,e[1]=t[1]*r,e[2]=t[2]*r,e},u.scaleAndAdd=function(e,t,r,n){return e[0]=t[0]+r[0]*n,e[1]=t[1]+r[1]*n,e[2]=t[2]+r[2]*n,e},u.distance=function(e,t){var r=t[0]-e[0],n=t[1]-e[1],i=t[2]-e[2];return Math.sqrt(r*r+n*n+i*i)},u.dist=u.distance,u.squaredDistance=function(e,t){var r=t[0]-e[0],n=t[1]-e[1],i=t[2]-e[2];return r*r+n*n+i*i},u.sqrDist=u.squaredDistance,u.length=function(e){var t=e[0],r=e[1],n=e[2];return Math.sqrt(t*t+r*r+n*n)},u.len=u.length,u.squaredLength=function(e){var t=e[0],r=e[1],n=e[2];return t*t+r*r+n*n},u.sqrLen=u.squaredLength,u.negate=function(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e},u.inverse=function(e,t){return e[0]=1/t[0],e[1]=1/t[1],e[2]=1/t[2],e},u.normalize=function(e,t){var r=t[0],n=t[1],i=t[2],a=r*r+n*n+i*i;return a>0&&(a=1/Math.sqrt(a),e[0]=t[0]*a,e[1]=t[1]*a,e[2]=t[2]*a),e},u.dot=function(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]},u.cross=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=r[0],s=r[1],u=r[2];return e[0]=i*u-a*s,e[1]=a*o-n*u,e[2]=n*s-i*o,e},u.lerp=function(e,t,r,n){var i=t[0],a=t[1],o=t[2];return e[0]=i+n*(r[0]-i),e[1]=a+n*(r[1]-a),e[2]=o+n*(r[2]-o),e},u.random=function(e,t){t=t||1;var r=2*i()*Math.PI,n=2*i()-1,a=Math.sqrt(1-n*n)*t;return e[0]=Math.cos(r)*a,e[1]=Math.sin(r)*a,e[2]=n*t,e},u.transformMat4=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=r[3]*n+r[7]*i+r[11]*a+r[15];return o=o||1,e[0]=(r[0]*n+r[4]*i+r[8]*a+r[12])/o,e[1]=(r[1]*n+r[5]*i+r[9]*a+r[13])/o,e[2]=(r[2]*n+r[6]*i+r[10]*a+r[14])/o,e},u.transformMat3=function(e,t,r){var n=t[0],i=t[1],a=t[2];return e[0]=n*r[0]+i*r[3]+a*r[6],e[1]=n*r[1]+i*r[4]+a*r[7],e[2]=n*r[2]+i*r[5]+a*r[8],e},u.transformQuat=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=r[0],s=r[1],u=r[2],l=r[3],c=l*n+s*a-u*i,h=l*i+u*n-o*a,f=l*a+o*i-s*n,d=-o*n-s*i-u*a;return e[0]=c*l+d*-o+h*-u-f*-s,e[1]=h*l+d*-s+f*-o-c*-u,e[2]=f*l+d*-u+c*-s-h*-o,e},u.rotateX=function(e,t,r,n){var i=[],a=[];return i[0]=t[0]-r[0],i[1]=t[1]-r[1],i[2]=t[2]-r[2],a[0]=i[0],a[1]=i[1]*Math.cos(n)-i[2]*Math.sin(n),a[2]=i[1]*Math.sin(n)+i[2]*Math.cos(n),e[0]=a[0]+r[0],e[1]=a[1]+r[1],e[2]=a[2]+r[2],e},u.rotateY=function(e,t,r,n){var i=[],a=[];return i[0]=t[0]-r[0],i[1]=t[1]-r[1],i[2]=t[2]-r[2],a[0]=i[2]*Math.sin(n)+i[0]*Math.cos(n),a[1]=i[1],a[2]=i[2]*Math.cos(n)-i[0]*Math.sin(n),e[0]=a[0]+r[0],e[1]=a[1]+r[1],e[2]=a[2]+r[2],e},u.rotateZ=function(e,t,r,n){var i=[],a=[];return i[0]=t[0]-r[0],i[1]=t[1]-r[1],i[2]=t[2]-r[2],a[0]=i[0]*Math.cos(n)-i[1]*Math.sin(n),a[1]=i[0]*Math.sin(n)+i[1]*Math.cos(n),a[2]=i[2],e[0]=a[0]+r[0],e[1]=a[1]+r[1],e[2]=a[2]+r[2],e},u.forEach=function(){var e=u.create();return function(t,r,n,i,a,o){var s,u;for(r||(r=3),n||(n=0),u=i?Math.min(i*r+n,t.length):t.length,s=n;s<u;s+=r)e[0]=t[s],e[1]=t[s+1],e[2]=t[s+2],a(e,e,o),t[s]=e[0],t[s+1]=e[1],t[s+2]=e[2];return t}}(),u.angle=function(e,t){var r=u.fromValues(e[0],e[1],e[2]),n=u.fromValues(t[0],t[1],t[2]);u.normalize(r,r),u.normalize(n,n);var i=u.dot(r,n);return i>1?0:Math.acos(i)},u.str=function(e){return"vec3("+e[0]+", "+e[1]+", "+e[2]+")"},void 0!==e&&(e.vec3=u);var l={};l.create=function(){var e=new n(4);return e[0]=0,e[1]=0,e[2]=0,e[3]=0,e},l.clone=function(e){var t=new n(4);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t},l.fromValues=function(e,t,r,i){var a=new n(4);return a[0]=e,a[1]=t,a[2]=r,a[3]=i,a},l.copy=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e},l.set=function(e,t,r,n,i){return e[0]=t,e[1]=r,e[2]=n,e[3]=i,e},l.add=function(e,t,r){return e[0]=t[0]+r[0],e[1]=t[1]+r[1],e[2]=t[2]+r[2],e[3]=t[3]+r[3],e},l.subtract=function(e,t,r){return e[0]=t[0]-r[0],e[1]=t[1]-r[1],e[2]=t[2]-r[2],e[3]=t[3]-r[3],e},l.sub=l.subtract,l.multiply=function(e,t,r){return e[0]=t[0]*r[0],e[1]=t[1]*r[1],e[2]=t[2]*r[2],e[3]=t[3]*r[3],e},l.mul=l.multiply,l.divide=function(e,t,r){return e[0]=t[0]/r[0],e[1]=t[1]/r[1],e[2]=t[2]/r[2],e[3]=t[3]/r[3],e},l.div=l.divide,l.min=function(e,t,r){return e[0]=Math.min(t[0],r[0]),e[1]=Math.min(t[1],r[1]),e[2]=Math.min(t[2],r[2]),e[3]=Math.min(t[3],r[3]),e},l.max=function(e,t,r){return e[0]=Math.max(t[0],r[0]),e[1]=Math.max(t[1],r[1]),e[2]=Math.max(t[2],r[2]),e[3]=Math.max(t[3],r[3]),e},l.scale=function(e,t,r){return e[0]=t[0]*r,e[1]=t[1]*r,e[2]=t[2]*r,e[3]=t[3]*r,e},l.scaleAndAdd=function(e,t,r,n){return e[0]=t[0]+r[0]*n,e[1]=t[1]+r[1]*n,e[2]=t[2]+r[2]*n,e[3]=t[3]+r[3]*n,e},l.distance=function(e,t){var r=t[0]-e[0],n=t[1]-e[1],i=t[2]-e[2],a=t[3]-e[3];return Math.sqrt(r*r+n*n+i*i+a*a)},l.dist=l.distance,l.squaredDistance=function(e,t){var r=t[0]-e[0],n=t[1]-e[1],i=t[2]-e[2],a=t[3]-e[3];return r*r+n*n+i*i+a*a},l.sqrDist=l.squaredDistance,l.length=function(e){var t=e[0],r=e[1],n=e[2],i=e[3];return Math.sqrt(t*t+r*r+n*n+i*i)},l.len=l.length,l.squaredLength=function(e){var t=e[0],r=e[1],n=e[2],i=e[3];return t*t+r*r+n*n+i*i},l.sqrLen=l.squaredLength,l.negate=function(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e[3]=-t[3],e},l.inverse=function(e,t){return e[0]=1/t[0],e[1]=1/t[1],e[2]=1/t[2],e[3]=1/t[3],e},l.normalize=function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=r*r+n*n+i*i+a*a;return o>0&&(o=1/Math.sqrt(o),e[0]=t[0]*o,e[1]=t[1]*o,e[2]=t[2]*o,e[3]=t[3]*o),e},l.dot=function(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]+e[3]*t[3]},l.lerp=function(e,t,r,n){var i=t[0],a=t[1],o=t[2],s=t[3];return e[0]=i+n*(r[0]-i),e[1]=a+n*(r[1]-a),e[2]=o+n*(r[2]-o),e[3]=s+n*(r[3]-s),e},l.random=function(e,t){return t=t||1,e[0]=i(),e[1]=i(),e[2]=i(),e[3]=i(),l.normalize(e,e),l.scale(e,e,t),e},l.transformMat4=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3];return e[0]=r[0]*n+r[4]*i+r[8]*a+r[12]*o,e[1]=r[1]*n+r[5]*i+r[9]*a+r[13]*o,e[2]=r[2]*n+r[6]*i+r[10]*a+r[14]*o,e[3]=r[3]*n+r[7]*i+r[11]*a+r[15]*o,e},l.transformQuat=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=r[0],s=r[1],u=r[2],l=r[3],c=l*n+s*a-u*i,h=l*i+u*n-o*a,f=l*a+o*i-s*n,d=-o*n-s*i-u*a;return e[0]=c*l+d*-o+h*-u-f*-s,e[1]=h*l+d*-s+f*-o-c*-u,e[2]=f*l+d*-u+c*-s-h*-o,e},l.forEach=function(){var e=l.create();return function(t,r,n,i,a,o){var s,u;for(r||(r=4),n||(n=0),u=i?Math.min(i*r+n,t.length):t.length,s=n;s<u;s+=r)e[0]=t[s],e[1]=t[s+1],e[2]=t[s+2],e[3]=t[s+3],a(e,e,o),t[s]=e[0],t[s+1]=e[1],t[s+2]=e[2],t[s+3]=e[3];return t}}(),l.str=function(e){return"vec4("+e[0]+", "+e[1]+", "+e[2]+", "+e[3]+")"},void 0!==e&&(e.vec4=l);var c={};c.create=function(){var e=new n(4);return e[0]=1,e[1]=0,e[2]=0,e[3]=1,e},c.clone=function(e){var t=new n(4);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t},c.copy=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e},c.identity=function(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=1,e},c.transpose=function(e,t){if(e===t){var r=t[1];e[1]=t[2],e[2]=r}else e[0]=t[0],e[1]=t[2],e[2]=t[1],e[3]=t[3];return e},c.invert=function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=r*a-i*n;return o?(o=1/o,e[0]=a*o,e[1]=-n*o,e[2]=-i*o,e[3]=r*o,e):null},c.adjoint=function(e,t){var r=t[0];return e[0]=t[3],e[1]=-t[1],e[2]=-t[2],e[3]=r,e},c.determinant=function(e){return e[0]*e[3]-e[2]*e[1]},c.multiply=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=r[0],u=r[1],l=r[2],c=r[3];return e[0]=n*s+a*u,e[1]=i*s+o*u,e[2]=n*l+a*c,e[3]=i*l+o*c,e},c.mul=c.multiply,c.rotate=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=Math.sin(r),u=Math.cos(r);return e[0]=n*u+a*s,e[1]=i*u+o*s,e[2]=n*-s+a*u,e[3]=i*-s+o*u,e},c.scale=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=r[0],u=r[1];return e[0]=n*s,e[1]=i*s,e[2]=a*u,e[3]=o*u,e},c.str=function(e){return"mat2("+e[0]+", "+e[1]+", "+e[2]+", "+e[3]+")"},c.frob=function(e){return Math.sqrt(Math.pow(e[0],2)+Math.pow(e[1],2)+Math.pow(e[2],2)+Math.pow(e[3],2))},c.LDU=function(e,t,r,n){return e[2]=n[2]/n[0],r[0]=n[0],r[1]=n[1],r[3]=n[3]-e[2]*r[1],[e,t,r]},void 0!==e&&(e.mat2=c);var h={};h.create=function(){var e=new n(6);return e[0]=1,e[1]=0,e[2]=0,e[3]=1,e[4]=0,e[5]=0,e},h.clone=function(e){var t=new n(6);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t},h.copy=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e},h.identity=function(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=1,e[4]=0,e[5]=0,e},h.invert=function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=t[4],s=t[5],u=r*a-n*i;return u?(u=1/u,e[0]=a*u,e[1]=-n*u,e[2]=-i*u,e[3]=r*u,e[4]=(i*s-a*o)*u,e[5]=(n*o-r*s)*u,e):null},h.determinant=function(e){return e[0]*e[3]-e[1]*e[2]},h.multiply=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=t[4],u=t[5],l=r[0],c=r[1],h=r[2],f=r[3],d=r[4],p=r[5];return e[0]=n*l+a*c,e[1]=i*l+o*c,e[2]=n*h+a*f,e[3]=i*h+o*f,e[4]=n*d+a*p+s,e[5]=i*d+o*p+u,e},h.mul=h.multiply,h.rotate=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=t[4],u=t[5],l=Math.sin(r),c=Math.cos(r);return e[0]=n*c+a*l,e[1]=i*c+o*l,e[2]=n*-l+a*c,e[3]=i*-l+o*c,e[4]=s,e[5]=u,e},h.scale=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=t[4],u=t[5],l=r[0],c=r[1];return e[0]=n*l,e[1]=i*l,e[2]=a*c,e[3]=o*c,e[4]=s,e[5]=u,e},h.translate=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=t[4],u=t[5],l=r[0],c=r[1];return e[0]=n,e[1]=i,e[2]=a,e[3]=o,e[4]=n*l+a*c+s,e[5]=i*l+o*c+u,e},h.str=function(e){return"mat2d("+e[0]+", "+e[1]+", "+e[2]+", "+e[3]+", "+e[4]+", "+e[5]+")"},h.frob=function(e){return Math.sqrt(Math.pow(e[0],2)+Math.pow(e[1],2)+Math.pow(e[2],2)+Math.pow(e[3],2)+Math.pow(e[4],2)+Math.pow(e[5],2)+1)},void 0!==e&&(e.mat2d=h);var f={};f.create=function(){var e=new n(9);return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=0,e[7]=0,e[8]=1,e},f.fromMat4=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[4],e[4]=t[5],e[5]=t[6],e[6]=t[8],e[7]=t[9],e[8]=t[10],e},f.clone=function(e){var t=new n(9);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t},f.copy=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e},f.identity=function(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=0,e[7]=0,e[8]=1,e},f.transpose=function(e,t){if(e===t){var r=t[1],n=t[2],i=t[5];e[1]=t[3],e[2]=t[6],e[3]=r,e[5]=t[7],e[6]=n,e[7]=i}else e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8];return e},f.invert=function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=t[4],s=t[5],u=t[6],l=t[7],c=t[8],h=c*o-s*l,f=-c*a+s*u,d=l*a-o*u,p=r*h+n*f+i*d;return p?(p=1/p,e[0]=h*p,e[1]=(-c*n+i*l)*p,e[2]=(s*n-i*o)*p,e[3]=f*p,e[4]=(c*r-i*u)*p,e[5]=(-s*r+i*a)*p,e[6]=d*p,e[7]=(-l*r+n*u)*p,e[8]=(o*r-n*a)*p,e):null},f.adjoint=function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=t[4],s=t[5],u=t[6],l=t[7],c=t[8];return e[0]=o*c-s*l,e[1]=i*l-n*c,e[2]=n*s-i*o,e[3]=s*u-a*c,e[4]=r*c-i*u,e[5]=i*a-r*s,e[6]=a*l-o*u,e[7]=n*u-r*l,e[8]=r*o-n*a,e},f.determinant=function(e){var t=e[0],r=e[1],n=e[2],i=e[3],a=e[4],o=e[5],s=e[6],u=e[7],l=e[8];return t*(l*a-o*u)+r*(-l*i+o*s)+n*(u*i-a*s)},f.multiply=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=t[4],u=t[5],l=t[6],c=t[7],h=t[8],f=r[0],d=r[1],p=r[2],m=r[3],_=r[4],v=r[5],g=r[6],y=r[7],x=r[8];return e[0]=f*n+d*o+p*l,e[1]=f*i+d*s+p*c,e[2]=f*a+d*u+p*h,e[3]=m*n+_*o+v*l,e[4]=m*i+_*s+v*c,e[5]=m*a+_*u+v*h,e[6]=g*n+y*o+x*l,e[7]=g*i+y*s+x*c,e[8]=g*a+y*u+x*h,e},f.mul=f.multiply,f.translate=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=t[4],u=t[5],l=t[6],c=t[7],h=t[8],f=r[0],d=r[1];return e[0]=n,e[1]=i,e[2]=a,e[3]=o,e[4]=s,e[5]=u,e[6]=f*n+d*o+l,e[7]=f*i+d*s+c,e[8]=f*a+d*u+h,e},f.rotate=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=t[4],u=t[5],l=t[6],c=t[7],h=t[8],f=Math.sin(r),d=Math.cos(r);return e[0]=d*n+f*o,e[1]=d*i+f*s,e[2]=d*a+f*u,e[3]=d*o-f*n,e[4]=d*s-f*i,e[5]=d*u-f*a,e[6]=l,e[7]=c,e[8]=h,e},f.scale=function(e,t,r){var n=r[0],i=r[1];return e[0]=n*t[0],e[1]=n*t[1],e[2]=n*t[2],e[3]=i*t[3],e[4]=i*t[4],e[5]=i*t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e},f.fromMat2d=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=0,e[3]=t[2],e[4]=t[3],e[5]=0,e[6]=t[4],e[7]=t[5],e[8]=1,e},f.fromQuat=function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=r+r,s=n+n,u=i+i,l=r*o,c=n*o,h=n*s,f=i*o,d=i*s,p=i*u,m=a*o,_=a*s,v=a*u;return e[0]=1-h-p,e[3]=c-v,e[6]=f+_,e[1]=c+v,e[4]=1-l-p,e[7]=d-m,e[2]=f-_,e[5]=d+m,e[8]=1-l-h,e},f.normalFromMat4=function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=t[4],s=t[5],u=t[6],l=t[7],c=t[8],h=t[9],f=t[10],d=t[11],p=t[12],m=t[13],_=t[14],v=t[15],g=r*s-n*o,y=r*u-i*o,x=r*l-a*o,T=n*u-i*s,E=n*l-a*s,b=i*l-a*u,A=c*m-h*p,S=c*_-f*p,w=c*v-d*p,C=h*_-f*m,R=h*v-d*m,N=f*v-d*_,M=g*N-y*R+x*C+T*w-E*S+b*A;return M?(M=1/M,e[0]=(s*N-u*R+l*C)*M,e[1]=(u*w-o*N-l*S)*M,e[2]=(o*R-s*w+l*A)*M,e[3]=(i*R-n*N-a*C)*M,e[4]=(r*N-i*w+a*S)*M,e[5]=(n*w-r*R-a*A)*M,e[6]=(m*b-_*E+v*T)*M,e[7]=(_*x-p*b-v*y)*M,e[8]=(p*E-m*x+v*g)*M,e):null},f.str=function(e){return"mat3("+e[0]+", "+e[1]+", "+e[2]+", "+e[3]+", "+e[4]+", "+e[5]+", "+e[6]+", "+e[7]+", "+e[8]+")"},f.frob=function(e){return Math.sqrt(Math.pow(e[0],2)+Math.pow(e[1],2)+Math.pow(e[2],2)+Math.pow(e[3],2)+Math.pow(e[4],2)+Math.pow(e[5],2)+Math.pow(e[6],2)+Math.pow(e[7],2)+Math.pow(e[8],2))},void 0!==e&&(e.mat3=f);var d={};d.create=function(){var e=new n(16);return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e},d.clone=function(e){var t=new n(16);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t},d.copy=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e},d.identity=function(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e},d.transpose=function(e,t){if(e===t){var r=t[1],n=t[2],i=t[3],a=t[6],o=t[7],s=t[11];e[1]=t[4],e[2]=t[8],e[3]=t[12],e[4]=r,e[6]=t[9],e[7]=t[13],e[8]=n,e[9]=a,e[11]=t[14],e[12]=i,e[13]=o,e[14]=s}else e[0]=t[0],e[1]=t[4],e[2]=t[8],e[3]=t[12],e[4]=t[1],e[5]=t[5],e[6]=t[9],e[7]=t[13],e[8]=t[2],e[9]=t[6],e[10]=t[10],e[11]=t[14],e[12]=t[3],e[13]=t[7],e[14]=t[11],e[15]=t[15];return e},d.invert=function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=t[4],s=t[5],u=t[6],l=t[7],c=t[8],h=t[9],f=t[10],d=t[11],p=t[12],m=t[13],_=t[14],v=t[15],g=r*s-n*o,y=r*u-i*o,x=r*l-a*o,T=n*u-i*s,E=n*l-a*s,b=i*l-a*u,A=c*m-h*p,S=c*_-f*p,w=c*v-d*p,C=h*_-f*m,R=h*v-d*m,N=f*v-d*_,M=g*N-y*R+x*C+T*w-E*S+b*A;return M?(M=1/M,e[0]=(s*N-u*R+l*C)*M,e[1]=(i*R-n*N-a*C)*M,e[2]=(m*b-_*E+v*T)*M,e[3]=(f*E-h*b-d*T)*M,e[4]=(u*w-o*N-l*S)*M,e[5]=(r*N-i*w+a*S)*M,e[6]=(_*x-p*b-v*y)*M,e[7]=(c*b-f*x+d*y)*M,e[8]=(o*R-s*w+l*A)*M,e[9]=(n*w-r*R-a*A)*M,e[10]=(p*E-m*x+v*g)*M,e[11]=(h*x-c*E-d*g)*M,e[12]=(s*S-o*C-u*A)*M,e[13]=(r*C-n*S+i*A)*M,e[14]=(m*y-p*T-_*g)*M,e[15]=(c*T-h*y+f*g)*M,e):null},d.adjoint=function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=t[4],s=t[5],u=t[6],l=t[7],c=t[8],h=t[9],f=t[10],d=t[11],p=t[12],m=t[13],_=t[14],v=t[15];return e[0]=s*(f*v-d*_)-h*(u*v-l*_)+m*(u*d-l*f),e[1]=-(n*(f*v-d*_)-h*(i*v-a*_)+m*(i*d-a*f)),e[2]=n*(u*v-l*_)-s*(i*v-a*_)+m*(i*l-a*u),e[3]=-(n*(u*d-l*f)-s*(i*d-a*f)+h*(i*l-a*u)),e[4]=-(o*(f*v-d*_)-c*(u*v-l*_)+p*(u*d-l*f)),e[5]=r*(f*v-d*_)-c*(i*v-a*_)+p*(i*d-a*f),e[6]=-(r*(u*v-l*_)-o*(i*v-a*_)+p*(i*l-a*u)),e[7]=r*(u*d-l*f)-o*(i*d-a*f)+c*(i*l-a*u),e[8]=o*(h*v-d*m)-c*(s*v-l*m)+p*(s*d-l*h),e[9]=-(r*(h*v-d*m)-c*(n*v-a*m)+p*(n*d-a*h)),e[10]=r*(s*v-l*m)-o*(n*v-a*m)+p*(n*l-a*s),e[11]=-(r*(s*d-l*h)-o*(n*d-a*h)+c*(n*l-a*s)),e[12]=-(o*(h*_-f*m)-c*(s*_-u*m)+p*(s*f-u*h)),e[13]=r*(h*_-f*m)-c*(n*_-i*m)+p*(n*f-i*h),e[14]=-(r*(s*_-u*m)-o*(n*_-i*m)+p*(n*u-i*s)),e[15]=r*(s*f-u*h)-o*(n*f-i*h)+c*(n*u-i*s),e},d.determinant=function(e){var t=e[0],r=e[1],n=e[2],i=e[3],a=e[4],o=e[5],s=e[6],u=e[7],l=e[8],c=e[9],h=e[10],f=e[11],d=e[12],p=e[13],m=e[14],_=e[15];return(t*o-r*a)*(h*_-f*m)-(t*s-n*a)*(c*_-f*p)+(t*u-i*a)*(c*m-h*p)+(r*s-n*o)*(l*_-f*d)-(r*u-i*o)*(l*m-h*d)+(n*u-i*s)*(l*p-c*d)},d.multiply=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=t[4],u=t[5],l=t[6],c=t[7],h=t[8],f=t[9],d=t[10],p=t[11],m=t[12],_=t[13],v=t[14],g=t[15],y=r[0],x=r[1],T=r[2],E=r[3];return e[0]=y*n+x*s+T*h+E*m,e[1]=y*i+x*u+T*f+E*_,e[2]=y*a+x*l+T*d+E*v,e[3]=y*o+x*c+T*p+E*g,y=r[4],x=r[5],T=r[6],E=r[7],e[4]=y*n+x*s+T*h+E*m,e[5]=y*i+x*u+T*f+E*_,e[6]=y*a+x*l+T*d+E*v,e[7]=y*o+x*c+T*p+E*g,y=r[8],x=r[9],T=r[10],E=r[11],e[8]=y*n+x*s+T*h+E*m,e[9]=y*i+x*u+T*f+E*_,e[10]=y*a+x*l+T*d+E*v,e[11]=y*o+x*c+T*p+E*g,y=r[12],x=r[13],T=r[14],E=r[15],e[12]=y*n+x*s+T*h+E*m,e[13]=y*i+x*u+T*f+E*_,e[14]=y*a+x*l+T*d+E*v,e[15]=y*o+x*c+T*p+E*g,e},d.multiplyAffine=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[4],s=t[5],u=t[6],l=t[8],c=t[9],h=t[10],f=t[12],d=t[13],p=t[14],m=r[0],_=r[1],v=r[2];return e[0]=m*n+_*o+v*l,e[1]=m*i+_*s+v*c,e[2]=m*a+_*u+v*h,m=r[4],_=r[5],v=r[6],e[4]=m*n+_*o+v*l,e[5]=m*i+_*s+v*c,e[6]=m*a+_*u+v*h,m=r[8],_=r[9],v=r[10],e[8]=m*n+_*o+v*l,e[9]=m*i+_*s+v*c,e[10]=m*a+_*u+v*h,m=r[12],_=r[13],v=r[14],e[12]=m*n+_*o+v*l+f,e[13]=m*i+_*s+v*c+d,e[14]=m*a+_*u+v*h+p,e},d.mul=d.multiply,d.mulAffine=d.multiplyAffine,d.translate=function(e,t,r){var n,i,a,o,s,u,l,c,h,f,d,p,m=r[0],_=r[1],v=r[2];return t===e?(e[12]=t[0]*m+t[4]*_+t[8]*v+t[12],e[13]=t[1]*m+t[5]*_+t[9]*v+t[13],e[14]=t[2]*m+t[6]*_+t[10]*v+t[14],e[15]=t[3]*m+t[7]*_+t[11]*v+t[15]):(n=t[0],i=t[1],a=t[2],o=t[3],s=t[4],u=t[5],l=t[6],c=t[7],h=t[8],f=t[9],d=t[10],p=t[11],e[0]=n,e[1]=i,e[2]=a,e[3]=o,e[4]=s,e[5]=u,e[6]=l,e[7]=c,e[8]=h,e[9]=f,e[10]=d,e[11]=p,e[12]=n*m+s*_+h*v+t[12],e[13]=i*m+u*_+f*v+t[13],e[14]=a*m+l*_+d*v+t[14],e[15]=o*m+c*_+p*v+t[15]),e},d.scale=function(e,t,r){var n=r[0],i=r[1],a=r[2];return e[0]=t[0]*n,e[1]=t[1]*n,e[2]=t[2]*n,e[3]=t[3]*n,e[4]=t[4]*i,e[5]=t[5]*i,e[6]=t[6]*i,e[7]=t[7]*i,e[8]=t[8]*a,e[9]=t[9]*a,e[10]=t[10]*a,e[11]=t[11]*a,e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e},d.rotate=function(e,t,n,i){var a,o,s,u,l,c,h,f,d,p,m,_,v,g,y,x,T,E,b,A,S,w,C,R,N=i[0],M=i[1],L=i[2],P=Math.sqrt(N*N+M*M+L*L);return Math.abs(P)<r?null:(P=1/P,N*=P,M*=P,L*=P,a=Math.sin(n),o=Math.cos(n),s=1-o,u=t[0],l=t[1],c=t[2],h=t[3],f=t[4],d=t[5],p=t[6],m=t[7],_=t[8],v=t[9],g=t[10],y=t[11],x=N*N*s+o,T=M*N*s+L*a,E=L*N*s-M*a,b=N*M*s-L*a,A=M*M*s+o,S=L*M*s+N*a,w=N*L*s+M*a,C=M*L*s-N*a,R=L*L*s+o,e[0]=u*x+f*T+_*E,e[1]=l*x+d*T+v*E,e[2]=c*x+p*T+g*E,e[3]=h*x+m*T+y*E,e[4]=u*b+f*A+_*S,e[5]=l*b+d*A+v*S,e[6]=c*b+p*A+g*S,e[7]=h*b+m*A+y*S,e[8]=u*w+f*C+_*R,e[9]=l*w+d*C+v*R,e[10]=c*w+p*C+g*R,e[11]=h*w+m*C+y*R,t!==e&&(e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e)},d.rotateX=function(e,t,r){var n=Math.sin(r),i=Math.cos(r),a=t[4],o=t[5],s=t[6],u=t[7],l=t[8],c=t[9],h=t[10],f=t[11];return t!==e&&(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[4]=a*i+l*n,e[5]=o*i+c*n,e[6]=s*i+h*n,e[7]=u*i+f*n,e[8]=l*i-a*n,e[9]=c*i-o*n,e[10]=h*i-s*n,e[11]=f*i-u*n,e},d.rotateY=function(e,t,r){var n=Math.sin(r),i=Math.cos(r),a=t[0],o=t[1],s=t[2],u=t[3],l=t[8],c=t[9],h=t[10],f=t[11];return t!==e&&(e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=a*i-l*n,e[1]=o*i-c*n,e[2]=s*i-h*n,e[3]=u*i-f*n,e[8]=a*n+l*i,e[9]=o*n+c*i,e[10]=s*n+h*i,e[11]=u*n+f*i,e},d.rotateZ=function(e,t,r){var n=Math.sin(r),i=Math.cos(r),a=t[0],o=t[1],s=t[2],u=t[3],l=t[4],c=t[5],h=t[6],f=t[7];return t!==e&&(e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=a*i+l*n,e[1]=o*i+c*n,e[2]=s*i+h*n,e[3]=u*i+f*n,e[4]=l*i-a*n,e[5]=c*i-o*n,e[6]=h*i-s*n,e[7]=f*i-u*n,e},d.fromRotationTranslation=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=n+n,u=i+i,l=a+a,c=n*s,h=n*u,f=n*l,d=i*u,p=i*l,m=a*l,_=o*s,v=o*u,g=o*l;return e[0]=1-(d+m),e[1]=h+g,e[2]=f-v,e[3]=0,e[4]=h-g,e[5]=1-(c+m),e[6]=p+_,e[7]=0,e[8]=f+v,e[9]=p-_,e[10]=1-(c+d),e[11]=0,e[12]=r[0],e[13]=r[1],e[14]=r[2],e[15]=1,e},d.fromQuat=function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=r+r,s=n+n,u=i+i,l=r*o,c=n*o,h=n*s,f=i*o,d=i*s,p=i*u,m=a*o,_=a*s,v=a*u;return e[0]=1-h-p,e[1]=c+v,e[2]=f-_,e[3]=0,e[4]=c-v,e[5]=1-l-p,e[6]=d+m,e[7]=0,e[8]=f+_,e[9]=d-m,e[10]=1-l-h,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e},d.frustum=function(e,t,r,n,i,a,o){var s=1/(r-t),u=1/(i-n),l=1/(a-o);return e[0]=2*a*s,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=2*a*u,e[6]=0,e[7]=0,e[8]=(r+t)*s,e[9]=(i+n)*u,e[10]=(o+a)*l,e[11]=-1,e[12]=0,e[13]=0,e[14]=o*a*2*l,e[15]=0,e},d.perspective=function(e,t,r,n,i){var a=1/Math.tan(t/2),o=1/(n-i);return e[0]=a/r,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=a,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=(i+n)*o,e[11]=-1,e[12]=0,e[13]=0,e[14]=2*i*n*o,e[15]=0,e},d.ortho=function(e,t,r,n,i,a,o){var s=1/(t-r),u=1/(n-i),l=1/(a-o);return e[0]=-2*s,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=-2*u,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=2*l,e[11]=0,e[12]=(t+r)*s,e[13]=(i+n)*u,e[14]=(o+a)*l,e[15]=1,e},d.lookAt=function(e,t,n,i){var a,o,s,u,l,c,h,f,p,m,_=t[0],v=t[1],g=t[2],y=i[0],x=i[1],T=i[2],E=n[0],b=n[1],A=n[2];return Math.abs(_-E)<r&&Math.abs(v-b)<r&&Math.abs(g-A)<r?d.identity(e):(h=_-E,f=v-b,p=g-A,m=1/Math.sqrt(h*h+f*f+p*p),h*=m,f*=m,p*=m,a=x*p-T*f,o=T*h-y*p,s=y*f-x*h,m=Math.sqrt(a*a+o*o+s*s),m?(m=1/m,a*=m,o*=m,s*=m):(a=0,o=0,s=0),u=f*s-p*o,l=p*a-h*s,
c=h*o-f*a,m=Math.sqrt(u*u+l*l+c*c),m?(m=1/m,u*=m,l*=m,c*=m):(u=0,l=0,c=0),e[0]=a,e[1]=u,e[2]=h,e[3]=0,e[4]=o,e[5]=l,e[6]=f,e[7]=0,e[8]=s,e[9]=c,e[10]=p,e[11]=0,e[12]=-(a*_+o*v+s*g),e[13]=-(u*_+l*v+c*g),e[14]=-(h*_+f*v+p*g),e[15]=1,e)},d.str=function(e){return"mat4("+e[0]+", "+e[1]+", "+e[2]+", "+e[3]+", "+e[4]+", "+e[5]+", "+e[6]+", "+e[7]+", "+e[8]+", "+e[9]+", "+e[10]+", "+e[11]+", "+e[12]+", "+e[13]+", "+e[14]+", "+e[15]+")"},d.frob=function(e){return Math.sqrt(Math.pow(e[0],2)+Math.pow(e[1],2)+Math.pow(e[2],2)+Math.pow(e[3],2)+Math.pow(e[4],2)+Math.pow(e[5],2)+Math.pow(e[6],2)+Math.pow(e[7],2)+Math.pow(e[8],2)+Math.pow(e[9],2)+Math.pow(e[10],2)+Math.pow(e[11],2)+Math.pow(e[12],2)+Math.pow(e[13],2)+Math.pow(e[14],2)+Math.pow(e[15],2))},void 0!==e&&(e.mat4=d);var p={};p.create=function(){var e=new n(4);return e[0]=0,e[1]=0,e[2]=0,e[3]=1,e},p.rotationTo=function(){var e=u.create(),t=u.fromValues(1,0,0),r=u.fromValues(0,1,0);return function(n,i,a){var o=u.dot(i,a);return o<-.999999?(u.cross(e,t,i),u.length(e)<1e-6&&u.cross(e,r,i),u.normalize(e,e),p.setAxisAngle(n,e,Math.PI),n):o>.999999?(n[0]=0,n[1]=0,n[2]=0,n[3]=1,n):(u.cross(e,i,a),n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=1+o,p.normalize(n,n))}}(),p.setAxes=function(){var e=f.create();return function(t,r,n,i){return e[0]=n[0],e[3]=n[1],e[6]=n[2],e[1]=i[0],e[4]=i[1],e[7]=i[2],e[2]=-r[0],e[5]=-r[1],e[8]=-r[2],p.normalize(t,p.fromMat3(t,e))}}(),p.clone=l.clone,p.fromValues=l.fromValues,p.copy=l.copy,p.set=l.set,p.identity=function(e){return e[0]=0,e[1]=0,e[2]=0,e[3]=1,e},p.setAxisAngle=function(e,t,r){r*=.5;var n=Math.sin(r);return e[0]=n*t[0],e[1]=n*t[1],e[2]=n*t[2],e[3]=Math.cos(r),e},p.add=l.add,p.multiply=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=r[0],u=r[1],l=r[2],c=r[3];return e[0]=n*c+o*s+i*l-a*u,e[1]=i*c+o*u+a*s-n*l,e[2]=a*c+o*l+n*u-i*s,e[3]=o*c-n*s-i*u-a*l,e},p.mul=p.multiply,p.scale=l.scale,p.rotateX=function(e,t,r){r*=.5;var n=t[0],i=t[1],a=t[2],o=t[3],s=Math.sin(r),u=Math.cos(r);return e[0]=n*u+o*s,e[1]=i*u+a*s,e[2]=a*u-i*s,e[3]=o*u-n*s,e},p.rotateY=function(e,t,r){r*=.5;var n=t[0],i=t[1],a=t[2],o=t[3],s=Math.sin(r),u=Math.cos(r);return e[0]=n*u-a*s,e[1]=i*u+o*s,e[2]=a*u+n*s,e[3]=o*u-i*s,e},p.rotateZ=function(e,t,r){r*=.5;var n=t[0],i=t[1],a=t[2],o=t[3],s=Math.sin(r),u=Math.cos(r);return e[0]=n*u+i*s,e[1]=i*u-n*s,e[2]=a*u+o*s,e[3]=o*u-a*s,e},p.calculateW=function(e,t){var r=t[0],n=t[1],i=t[2];return e[0]=r,e[1]=n,e[2]=i,e[3]=Math.sqrt(Math.abs(1-r*r-n*n-i*i)),e},p.dot=l.dot,p.lerp=l.lerp,p.slerp=function(e,t,r,n){var i,a,o,s,u,l=t[0],c=t[1],h=t[2],f=t[3],d=r[0],p=r[1],m=r[2],_=r[3];return a=l*d+c*p+h*m+f*_,a<0&&(a=-a,d=-d,p=-p,m=-m,_=-_),1-a>1e-6?(i=Math.acos(a),o=Math.sin(i),s=Math.sin((1-n)*i)/o,u=Math.sin(n*i)/o):(s=1-n,u=n),e[0]=s*l+u*d,e[1]=s*c+u*p,e[2]=s*h+u*m,e[3]=s*f+u*_,e},p.invert=function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=r*r+n*n+i*i+a*a,s=o?1/o:0;return e[0]=-r*s,e[1]=-n*s,e[2]=-i*s,e[3]=a*s,e},p.conjugate=function(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e[3]=t[3],e},p.length=l.length,p.len=p.length,p.squaredLength=l.squaredLength,p.sqrLen=p.squaredLength,p.normalize=l.normalize,p.fromMat3=function(e,t){var r,n=t[0]+t[4]+t[8];if(n>0)r=Math.sqrt(n+1),e[3]=.5*r,r=.5/r,e[0]=(t[5]-t[7])*r,e[1]=(t[6]-t[2])*r,e[2]=(t[1]-t[3])*r;else{var i=0;t[4]>t[0]&&(i=1),t[8]>t[3*i+i]&&(i=2);var a=(i+1)%3,o=(i+2)%3;r=Math.sqrt(t[3*i+i]-t[3*a+a]-t[3*o+o]+1),e[i]=.5*r,r=.5/r,e[3]=(t[3*a+o]-t[3*o+a])*r,e[a]=(t[3*a+i]+t[3*i+a])*r,e[o]=(t[3*o+i]+t[3*i+o])*r}return e},p.str=function(e){return"quat("+e[0]+", "+e[1]+", "+e[2]+", "+e[3]+")"},void 0!==e&&(e.quat=p)}(r.exports)}()}),Dt=Pt.vec3,Ot=function(e,t,r){e=e||0,t=t||0,r=r||0,this.array=Dt.fromValues(e,t,r),this._dirty=!0};Ot.prototype={constructor:Ot,add:function(e){return Dt.add(this.array,this.array,e.array),this._dirty=!0,this},set:function(e,t,r){return this.array[0]=e,this.array[1]=t,this.array[2]=r,this._dirty=!0,this},setArray:function(e){return this.array[0]=e[0],this.array[1]=e[1],this.array[2]=e[2],this._dirty=!0,this},clone:function(){return new Ot(this.x,this.y,this.z)},copy:function(e){return Dt.copy(this.array,e.array),this._dirty=!0,this},cross:function(e,t){return Dt.cross(this.array,e.array,t.array),this._dirty=!0,this},dist:function(e){return Dt.dist(this.array,e.array)},distance:function(e){return Dt.distance(this.array,e.array)},div:function(e){return Dt.div(this.array,this.array,e.array),this._dirty=!0,this},divide:function(e){return Dt.divide(this.array,this.array,e.array),this._dirty=!0,this},dot:function(e){return Dt.dot(this.array,e.array)},len:function(){return Dt.len(this.array)},length:function(){return Dt.length(this.array)},lerp:function(e,t,r){return Dt.lerp(this.array,e.array,t.array,r),this._dirty=!0,this},min:function(e){return Dt.min(this.array,this.array,e.array),this._dirty=!0,this},max:function(e){return Dt.max(this.array,this.array,e.array),this._dirty=!0,this},mul:function(e){return Dt.mul(this.array,this.array,e.array),this._dirty=!0,this},multiply:function(e){return Dt.multiply(this.array,this.array,e.array),this._dirty=!0,this},negate:function(){return Dt.negate(this.array,this.array),this._dirty=!0,this},normalize:function(){return Dt.normalize(this.array,this.array),this._dirty=!0,this},random:function(e){return Dt.random(this.array,e),this._dirty=!0,this},scale:function(e){return Dt.scale(this.array,this.array,e),this._dirty=!0,this},scaleAndAdd:function(e,t){return Dt.scaleAndAdd(this.array,this.array,e.array,t),this._dirty=!0,this},sqrDist:function(e){return Dt.sqrDist(this.array,e.array)},squaredDistance:function(e){return Dt.squaredDistance(this.array,e.array)},sqrLen:function(){return Dt.sqrLen(this.array)},squaredLength:function(){return Dt.squaredLength(this.array)},sub:function(e){return Dt.sub(this.array,this.array,e.array),this._dirty=!0,this},subtract:function(e){return Dt.subtract(this.array,this.array,e.array),this._dirty=!0,this},transformMat3:function(e){return Dt.transformMat3(this.array,this.array,e.array),this._dirty=!0,this},transformMat4:function(e){return Dt.transformMat4(this.array,this.array,e.array),this._dirty=!0,this},transformQuat:function(e){return Dt.transformQuat(this.array,this.array,e.array),this._dirty=!0,this},applyProjection:function(e){var t=this.array;if(e=e.array,0===e[15]){var r=-1/t[2];t[0]=e[0]*t[0]*r,t[1]=e[5]*t[1]*r,t[2]=(e[10]*t[2]+e[14])*r}else t[0]=e[0]*t[0]+e[12],t[1]=e[5]*t[1]+e[13],t[2]=e[10]*t[2]+e[14];return this._dirty=!0,this},eulerFromQuat:function(e,t){Ot.eulerFromQuat(this,e,t)},eulerFromMat3:function(e,t){Ot.eulerFromMat3(this,e,t)},toString:function(){return"["+Array.prototype.join.call(this.array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this.array)}};var It=Object.defineProperty;if(It){var Ft=Ot.prototype;It(Ft,"x",{get:function(){return this.array[0]},set:function(e){this.array[0]=e,this._dirty=!0}}),It(Ft,"y",{get:function(){return this.array[1]},set:function(e){this.array[1]=e,this._dirty=!0}}),It(Ft,"z",{get:function(){return this.array[2]},set:function(e){this.array[2]=e,this._dirty=!0}})}Ot.add=function(e,t,r){return Dt.add(e.array,t.array,r.array),e._dirty=!0,e},Ot.set=function(e,t,r,n){Dt.set(e.array,t,r,n),e._dirty=!0},Ot.copy=function(e,t){return Dt.copy(e.array,t.array),e._dirty=!0,e},Ot.cross=function(e,t,r){return Dt.cross(e.array,t.array,r.array),e._dirty=!0,e},Ot.dist=function(e,t){return Dt.distance(e.array,t.array)},Ot.distance=Ot.dist,Ot.div=function(e,t,r){return Dt.divide(e.array,t.array,r.array),e._dirty=!0,e},Ot.divide=Ot.div,Ot.dot=function(e,t){return Dt.dot(e.array,t.array)},Ot.len=function(e){return Dt.length(e.array)},Ot.lerp=function(e,t,r,n){return Dt.lerp(e.array,t.array,r.array,n),e._dirty=!0,e},Ot.min=function(e,t,r){return Dt.min(e.array,t.array,r.array),e._dirty=!0,e},Ot.max=function(e,t,r){return Dt.max(e.array,t.array,r.array),e._dirty=!0,e},Ot.mul=function(e,t,r){return Dt.multiply(e.array,t.array,r.array),e._dirty=!0,e},Ot.multiply=Ot.mul,Ot.negate=function(e,t){return Dt.negate(e.array,t.array),e._dirty=!0,e},Ot.normalize=function(e,t){return Dt.normalize(e.array,t.array),e._dirty=!0,e},Ot.random=function(e,t){return Dt.random(e.array,t),e._dirty=!0,e},Ot.scale=function(e,t,r){return Dt.scale(e.array,t.array,r),e._dirty=!0,e},Ot.scaleAndAdd=function(e,t,r,n){return Dt.scaleAndAdd(e.array,t.array,r.array,n),e._dirty=!0,e},Ot.sqrDist=function(e,t){return Dt.sqrDist(e.array,t.array)},Ot.squaredDistance=Ot.sqrDist,Ot.sqrLen=function(e){return Dt.sqrLen(e.array)},Ot.squaredLength=Ot.sqrLen,Ot.sub=function(e,t,r){return Dt.subtract(e.array,t.array,r.array),e._dirty=!0,e},Ot.subtract=Ot.sub,Ot.transformMat3=function(e,t,r){return Dt.transformMat3(e.array,t.array,r.array),e._dirty=!0,e},Ot.transformMat4=function(e,t,r){return Dt.transformMat4(e.array,t.array,r.array),e._dirty=!0,e},Ot.transformQuat=function(e,t,r){return Dt.transformQuat(e.array,t.array,r.array),e._dirty=!0,e};var Bt=Math.atan2,Ut=Math.asin,kt=Math.abs;Ot.eulerFromQuat=function(e,t,r){e._dirty=!0,t=t.array;var n=e.array,i=t[0],o=t[1],s=t[2],u=t[3],l=i*i,c=o*o,h=s*s,f=u*u,r=(r||"XYZ").toUpperCase();switch(r){case"XYZ":n[0]=Bt(2*(i*u-o*s),f-l-c+h),n[1]=Ut(a(2*(i*s+o*u),-1,1)),n[2]=Bt(2*(s*u-i*o),f+l-c-h);break;case"YXZ":n[0]=Ut(a(2*(i*u-o*s),-1,1)),n[1]=Bt(2*(i*s+o*u),f-l-c+h),n[2]=Bt(2*(i*o+s*u),f-l+c-h);break;case"ZXY":n[0]=Ut(a(2*(i*u+o*s),-1,1)),n[1]=Bt(2*(o*u-s*i),f-l-c+h),n[2]=Bt(2*(s*u-i*o),f-l+c-h);break;case"ZYX":n[0]=Bt(2*(i*u+s*o),f-l-c+h),n[1]=Ut(a(2*(o*u-i*s),-1,1)),n[2]=Bt(2*(i*o+s*u),f+l-c-h);break;case"YZX":n[0]=Bt(2*(i*u-s*o),f-l+c-h),n[1]=Bt(2*(o*u-i*s),f+l-c-h),n[2]=Ut(a(2*(i*o+s*u),-1,1));break;case"XZY":n[0]=Bt(2*(i*u+o*s),f-l+c-h),n[1]=Bt(2*(i*s+o*u),f+l-c-h),n[2]=Ut(a(2*(s*u-i*o),-1,1));break;default:console.warn("Unkown order: "+r)}return e},Ot.eulerFromMat3=function(e,t,r){var n=t.array,i=n[0],o=n[3],s=n[6],u=n[1],l=n[4],c=n[7],h=n[2],f=n[5],d=n[8],p=e.array,r=(r||"XYZ").toUpperCase();switch(r){case"XYZ":p[1]=Ut(a(s,-1,1)),kt(s)<.99999?(p[0]=Bt(-c,d),p[2]=Bt(-o,i)):(p[0]=Bt(f,l),p[2]=0);break;case"YXZ":p[0]=Ut(-a(c,-1,1)),kt(c)<.99999?(p[1]=Bt(s,d),p[2]=Bt(u,l)):(p[1]=Bt(-h,i),p[2]=0);break;case"ZXY":p[0]=Ut(a(f,-1,1)),kt(f)<.99999?(p[1]=Bt(-h,d),p[2]=Bt(-o,l)):(p[1]=0,p[2]=Bt(u,i));break;case"ZYX":p[1]=Ut(-a(h,-1,1)),kt(h)<.99999?(p[0]=Bt(f,d),p[2]=Bt(u,i)):(p[0]=0,p[2]=Bt(-o,l));break;case"YZX":p[2]=Ut(a(u,-1,1)),kt(u)<.99999?(p[0]=Bt(-c,l),p[1]=Bt(-h,i)):(p[0]=0,p[1]=Bt(s,d));break;case"XZY":p[2]=Ut(-a(o,-1,1)),kt(o)<.99999?(p[0]=Bt(f,l),p[1]=Bt(s,i)):(p[0]=Bt(-c,d),p[1]=0);break;default:console.warn("Unkown order: "+r)}return e._dirty=!0,e},Ot.POSITIVE_X=new Ot(1,0,0),Ot.NEGATIVE_X=new Ot(-1,0,0),Ot.POSITIVE_Y=new Ot(0,1,0),Ot.NEGATIVE_Y=new Ot(0,-1,0),Ot.POSITIVE_Z=new Ot(0,0,1),Ot.NEGATIVE_Z=new Ot(0,0,-1),Ot.UP=new Ot(0,1,0),Ot.ZERO=new Ot(0,0,0);var Ht=Pt.vec3,zt=Ht.copy,Gt=Ht.set,Vt=function(e,t){this.min=e||new Ot(1/0,1/0,1/0),this.max=t||new Ot(-1/0,-1/0,-1/0),this.vertices=null};Vt.prototype={constructor:Vt,updateFromVertices:function(e){if(e.length>0){var t=this.min,r=this.max,n=t.array,i=r.array;zt(n,e[0]),zt(i,e[0]);for(var a=1;a<e.length;a++){var o=e[a];o[0]<n[0]&&(n[0]=o[0]),o[1]<n[1]&&(n[1]=o[1]),o[2]<n[2]&&(n[2]=o[2]),o[0]>i[0]&&(i[0]=o[0]),o[1]>i[1]&&(i[1]=o[1]),o[2]>i[2]&&(i[2]=o[2])}t._dirty=!0,r._dirty=!0}},union:function(e){var t=this.min,r=this.max;return Ht.min(t.array,t.array,e.min.array),Ht.max(r.array,r.array,e.max.array),t._dirty=!0,r._dirty=!0,this},intersection:function(e){var t=this.min,r=this.max;return Ht.max(t.array,t.array,e.min.array),Ht.min(r.array,r.array,e.max.array),t._dirty=!0,r._dirty=!0,this},intersectBoundingBox:function(e){var t=this.min.array,r=this.max.array,n=e.min.array,i=e.max.array;return!(t[0]>i[0]||t[1]>i[1]||t[2]>i[2]||r[0]<n[0]||r[1]<n[1]||r[2]<n[2])},containBoundingBox:function(e){var t=this.min.array,r=this.max.array,n=e.min.array,i=e.max.array;return t[0]<=n[0]&&t[1]<=n[1]&&t[2]<=n[2]&&r[0]>=i[0]&&r[1]>=i[1]&&r[2]>=i[2]},containPoint:function(e){var t=this.min.array,r=this.max.array,n=e.array;return t[0]<=n[0]&&t[1]<=n[1]&&t[2]<=n[2]&&r[0]>=n[0]&&r[1]>=n[1]&&r[2]>=n[2]},isFinite:function(){var e=this.min.array,t=this.max.array;return isFinite(e[0])&&isFinite(e[1])&&isFinite(e[2])&&isFinite(t[0])&&isFinite(t[1])&&isFinite(t[2])},applyTransform:function(e){this.transformFrom(this,e)},transformFrom:function(){var e=Ht.create(),t=Ht.create(),r=Ht.create(),n=Ht.create(),i=Ht.create(),a=Ht.create();return function(o,s){var u=o.min.array,l=o.max.array,c=s.array;return e[0]=c[0]*u[0],e[1]=c[1]*u[0],e[2]=c[2]*u[0],t[0]=c[0]*l[0],t[1]=c[1]*l[0],t[2]=c[2]*l[0],r[0]=c[4]*u[1],r[1]=c[5]*u[1],r[2]=c[6]*u[1],n[0]=c[4]*l[1],n[1]=c[5]*l[1],n[2]=c[6]*l[1],i[0]=c[8]*u[2],i[1]=c[9]*u[2],i[2]=c[10]*u[2],a[0]=c[8]*l[2],a[1]=c[9]*l[2],a[2]=c[10]*l[2],u=this.min.array,l=this.max.array,u[0]=Math.min(e[0],t[0])+Math.min(r[0],n[0])+Math.min(i[0],a[0])+c[12],u[1]=Math.min(e[1],t[1])+Math.min(r[1],n[1])+Math.min(i[1],a[1])+c[13],u[2]=Math.min(e[2],t[2])+Math.min(r[2],n[2])+Math.min(i[2],a[2])+c[14],l[0]=Math.max(e[0],t[0])+Math.max(r[0],n[0])+Math.max(i[0],a[0])+c[12],l[1]=Math.max(e[1],t[1])+Math.max(r[1],n[1])+Math.max(i[1],a[1])+c[13],l[2]=Math.max(e[2],t[2])+Math.max(r[2],n[2])+Math.max(i[2],a[2])+c[14],this.min._dirty=!0,this.max._dirty=!0,this}}(),applyProjection:function(e){var t=this.min.array,r=this.max.array,n=e.array,i=t[0],a=t[1],o=t[2],s=r[0],u=r[1],l=t[2],c=r[0],h=r[1],f=r[2];if(1===n[15])t[0]=n[0]*i+n[12],t[1]=n[5]*a+n[13],r[2]=n[10]*o+n[14],r[0]=n[0]*c+n[12],r[1]=n[5]*h+n[13],t[2]=n[10]*f+n[14];else{var d=-1/o;t[0]=n[0]*i*d,t[1]=n[5]*a*d,r[2]=(n[10]*o+n[14])*d,d=-1/l,r[0]=n[0]*s*d,r[1]=n[5]*u*d,d=-1/f,t[2]=(n[10]*f+n[14])*d}return this.min._dirty=!0,this.max._dirty=!0,this},updateVertices:function(){var e=this.vertices;if(!e){e=[];for(var t=0;t<8;t++)e[t]=Ht.fromValues(0,0,0);this.vertices=e}var r=this.min.array,n=this.max.array;return Gt(e[0],r[0],r[1],r[2]),Gt(e[1],r[0],n[1],r[2]),Gt(e[2],n[0],r[1],r[2]),Gt(e[3],n[0],n[1],r[2]),Gt(e[4],r[0],r[1],n[2]),Gt(e[5],r[0],n[1],n[2]),Gt(e[6],n[0],r[1],n[2]),Gt(e[7],n[0],n[1],n[2]),this},copy:function(e){var t=this.min,r=this.max;return zt(t.array,e.min.array),zt(r.array,e.max.array),t._dirty=!0,r._dirty=!0,this},clone:function(){var e=new Vt;return e.copy(this),e}};var Wt=Pt.mat4,jt=Pt.vec3,Xt=Pt.mat3,qt=Pt.quat,Kt=function(){this._axisX=new Ot,this._axisY=new Ot,this._axisZ=new Ot,this.array=Wt.create(),this._dirty=!0};Kt.prototype={constructor:Kt,setArray:function(e){for(var t=0;t<this.array.length;t++)this.array[t]=e[t];return this._dirty=!0,this},adjoint:function(){return Wt.adjoint(this.array,this.array),this._dirty=!0,this},clone:function(){return(new Kt).copy(this)},copy:function(e){return Wt.copy(this.array,e.array),this._dirty=!0,this},determinant:function(){return Wt.determinant(this.array)},fromQuat:function(e){return Wt.fromQuat(this.array,e.array),this._dirty=!0,this},fromRotationTranslation:function(e,t){return Wt.fromRotationTranslation(this.array,e.array,t.array),this._dirty=!0,this},fromMat2d:function(e){return Kt.fromMat2d(this,e),this},frustum:function(e,t,r,n,i,a){return Wt.frustum(this.array,e,t,r,n,i,a),this._dirty=!0,this},identity:function(){return Wt.identity(this.array),this._dirty=!0,this},invert:function(){return Wt.invert(this.array,this.array),this._dirty=!0,this},lookAt:function(e,t,r){return Wt.lookAt(this.array,e.array,t.array,r.array),this._dirty=!0,this},mul:function(e){return Wt.mul(this.array,this.array,e.array),this._dirty=!0,this},mulLeft:function(e){return Wt.mul(this.array,e.array,this.array),this._dirty=!0,this},multiply:function(e){return Wt.multiply(this.array,this.array,e.array),this._dirty=!0,this},multiplyLeft:function(e){return Wt.multiply(this.array,e.array,this.array),this._dirty=!0,this},ortho:function(e,t,r,n,i,a){return Wt.ortho(this.array,e,t,r,n,i,a),this._dirty=!0,this},perspective:function(e,t,r,n){return Wt.perspective(this.array,e,t,r,n),this._dirty=!0,this},rotate:function(e,t){return Wt.rotate(this.array,this.array,e,t.array),this._dirty=!0,this},rotateX:function(e){return Wt.rotateX(this.array,this.array,e),this._dirty=!0,this},rotateY:function(e){return Wt.rotateY(this.array,this.array,e),this._dirty=!0,this},rotateZ:function(e){return Wt.rotateZ(this.array,this.array,e),this._dirty=!0,this},scale:function(e){return Wt.scale(this.array,this.array,e.array),this._dirty=!0,this},translate:function(e){return Wt.translate(this.array,this.array,e.array),this._dirty=!0,this},transpose:function(){return Wt.transpose(this.array,this.array),this._dirty=!0,this},decomposeMatrix:function(){var e=jt.create(),t=jt.create(),r=jt.create(),n=Xt.create();return function(i,a,o){var s=this.array;jt.set(e,s[0],s[1],s[2]),jt.set(t,s[4],s[5],s[6]),jt.set(r,s[8],s[9],s[10]);var u=jt.length(e),l=jt.length(t),c=jt.length(r);this.determinant()<0&&(u=-u),i&&i.set(u,l,c),o.set(s[12],s[13],s[14]),Xt.fromMat4(n,s),n[0]/=u,n[1]/=u,n[2]/=u,n[3]/=l,n[4]/=l,n[5]/=l,n[6]/=c,n[7]/=c,n[8]/=c,qt.fromMat3(a.array,n),qt.normalize(a.array,a.array),a._dirty=!0,o._dirty=!0}}(),toString:function(){return"["+Array.prototype.join.call(this.array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this.array)}};var Yt=Object.defineProperty;if(Yt){var Zt=Kt.prototype;Yt(Zt,"z",{get:function(){var e=this.array;return this._axisZ.set(e[8],e[9],e[10]),this._axisZ},set:function(e){var t=this.array;e=e.array,t[8]=e[0],t[9]=e[1],t[10]=e[2],this._dirty=!0}}),Yt(Zt,"y",{get:function(){var e=this.array;return this._axisY.set(e[4],e[5],e[6]),this._axisY},set:function(e){var t=this.array;e=e.array,t[4]=e[0],t[5]=e[1],t[6]=e[2],this._dirty=!0}}),Yt(Zt,"x",{get:function(){var e=this.array;return this._axisX.set(e[0],e[1],e[2]),this._axisX},set:function(e){var t=this.array;e=e.array,t[0]=e[0],t[1]=e[1],t[2]=e[2],this._dirty=!0}})}Kt.adjoint=function(e,t){return Wt.adjoint(e.array,t.array),e._dirty=!0,e},Kt.copy=function(e,t){return Wt.copy(e.array,t.array),e._dirty=!0,e},Kt.determinant=function(e){return Wt.determinant(e.array)},Kt.identity=function(e){return Wt.identity(e.array),e._dirty=!0,e},Kt.ortho=function(e,t,r,n,i,a,o){return Wt.ortho(e.array,t,r,n,i,a,o),e._dirty=!0,e},Kt.perspective=function(e,t,r,n,i){return Wt.perspective(e.array,t,r,n,i),e._dirty=!0,e},Kt.lookAt=function(e,t,r,n){return Wt.lookAt(e.array,t.array,r.array,n.array),e._dirty=!0,e},Kt.invert=function(e,t){return Wt.invert(e.array,t.array),e._dirty=!0,e},Kt.mul=function(e,t,r){return Wt.mul(e.array,t.array,r.array),e._dirty=!0,e},Kt.multiply=Kt.mul,Kt.fromQuat=function(e,t){return Wt.fromQuat(e.array,t.array),e._dirty=!0,e},Kt.fromRotationTranslation=function(e,t,r){return Wt.fromRotationTranslation(e.array,t.array,r.array),e._dirty=!0,e},Kt.fromMat2d=function(e,t){e._dirty=!0;var t=t.array,e=e.array;return e[0]=t[0],e[4]=t[2],e[12]=t[4],e[1]=t[1],e[5]=t[3],e[13]=t[5],e},Kt.rotate=function(e,t,r,n){return Wt.rotate(e.array,t.array,r,n.array),e._dirty=!0,e},Kt.rotateX=function(e,t,r){return Wt.rotateX(e.array,t.array,r),e._dirty=!0,e},Kt.rotateY=function(e,t,r){return Wt.rotateY(e.array,t.array,r),e._dirty=!0,e},Kt.rotateZ=function(e,t,r){return Wt.rotateZ(e.array,t.array,r),e._dirty=!0,e},Kt.scale=function(e,t,r){return Wt.scale(e.array,t.array,r.array),e._dirty=!0,e},Kt.transpose=function(e,t){return Wt.transpose(e.array,t.array),e._dirty=!0,e},Kt.translate=function(e,t,r){return Wt.translate(e.array,t.array,r.array),e._dirty=!0,e};var Jt=function(){this._contextId=0,this._caches=[],this._context={}};Jt.prototype={use:function(e,t){var r=this._caches;r[e]||(r[e]={},t&&(r[e]=t())),this._contextId=e,this._context=r[e]},put:function(e,t){this._context[e]=t},get:function(e){return this._context[e]},dirty:function(e){e=e||"";var t="__dt__"+e;this.put(t,!0)},dirtyAll:function(e){e=e||"";for(var t="__dt__"+e,r=this._caches,n=0;n<r.length;n++)r[n]&&(r[n][t]=!0)},fresh:function(e){e=e||"";var t="__dt__"+e;this.put(t,!1)},freshAll:function(e){e=e||"";for(var t="__dt__"+e,r=this._caches,n=0;n<r.length;n++)r[n]&&(r[n][t]=!1)},isDirty:function(e){e=e||"";var t="__dt__"+e,r=this._context;return!r.hasOwnProperty(t)||!0===r[t]},deleteContext:function(e){delete this._caches[e],this._context={}},delete:function(e){delete this._context[e]},clearAll:function(){this._caches={}},getContext:function(){return this._context},eachContext:function(e,t){Object.keys(this._caches).forEach(function(r){e&&e.call(t,r)})},miss:function(e){return!this._context.hasOwnProperty(e)}},Jt.prototype.constructor=Jt;var Qt=At.extend({width:512,height:512,type:Ct.UNSIGNED_BYTE,format:Ct.RGBA,wrapS:Ct.REPEAT,wrapT:Ct.REPEAT,minFilter:Ct.LINEAR_MIPMAP_LINEAR,magFilter:Ct.LINEAR,useMipmap:!0,anisotropic:1,flipY:!0,sRGB:!0,unpackAlignment:4,premultiplyAlpha:!1,dynamic:!1,NPOT:!1,__used:0},function(){this._cache=new Jt},{getWebGLTexture:function(e){var t=e.gl,r=this._cache;return r.use(e.__uid__),r.miss("webgl_texture")&&r.put("webgl_texture",t.createTexture()),this.dynamic?this.update(e):r.isDirty()&&(this.update(e),r.fresh()),r.get("webgl_texture")},bind:function(){},unbind:function(){},dirty:function(){this._cache&&this._cache.dirtyAll()},update:function(e){},updateCommon:function(e){var t=e.gl;t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,this.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,this.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,this.unpackAlignment),this.format===Ct.DEPTH_COMPONENT&&(this.useMipmap=!1);var r=e.getGLExtension("EXT_sRGB");this.format!==Qt.SRGB||r||(this.format=Qt.RGB),this.format!==Qt.SRGB_ALPHA||r||(this.format=Qt.RGBA),this.NPOT=!this.isPowerOfTwo()},getAvailableWrapS:function(){return this.NPOT?Ct.CLAMP_TO_EDGE:this.wrapS},getAvailableWrapT:function(){return this.NPOT?Ct.CLAMP_TO_EDGE:this.wrapT},getAvailableMinFilter:function(){var e=this.minFilter;return this.NPOT||!this.useMipmap?e===Ct.NEAREST_MIPMAP_NEAREST||e===Ct.NEAREST_MIPMAP_LINEAR?Ct.NEAREST:e===Ct.LINEAR_MIPMAP_LINEAR||e===Ct.LINEAR_MIPMAP_NEAREST?Ct.LINEAR:e:e},getAvailableMagFilter:function(){return this.magFilter},nextHighestPowerOfTwo:function(e){--e;for(var t=1;t<32;t<<=1)e|=e>>t;return e+1},dispose:function(e){var t=this._cache;t.use(e.__uid__);var r=t.get("webgl_texture");r&&e.gl.deleteTexture(r),t.deleteContext(e.__uid__)},isRenderable:function(){},isPowerOfTwo:function(){}});Object.defineProperty(Qt.prototype,"width",{get:function(){return this._width},set:function(e){this._width=e}}),Object.defineProperty(Qt.prototype,"height",{get:function(){return this._height},set:function(e){this._height=e}}),Qt.BYTE=Ct.BYTE,Qt.UNSIGNED_BYTE=Ct.UNSIGNED_BYTE,Qt.SHORT=Ct.SHORT,Qt.UNSIGNED_SHORT=Ct.UNSIGNED_SHORT,Qt.INT=Ct.INT,Qt.UNSIGNED_INT=Ct.UNSIGNED_INT,Qt.FLOAT=Ct.FLOAT,Qt.HALF_FLOAT=36193,Qt.UNSIGNED_INT_24_8_WEBGL=34042,Qt.DEPTH_COMPONENT=Ct.DEPTH_COMPONENT,Qt.DEPTH_STENCIL=Ct.DEPTH_STENCIL,Qt.ALPHA=Ct.ALPHA,Qt.RGB=Ct.RGB,Qt.RGBA=Ct.RGBA,Qt.LUMINANCE=Ct.LUMINANCE,Qt.LUMINANCE_ALPHA=Ct.LUMINANCE_ALPHA,Qt.SRGB=35904,Qt.SRGB_ALPHA=35906,Qt.COMPRESSED_RGB_S3TC_DXT1_EXT=33776,Qt.COMPRESSED_RGBA_S3TC_DXT1_EXT=33777,Qt.COMPRESSED_RGBA_S3TC_DXT3_EXT=33778,Qt.COMPRESSED_RGBA_S3TC_DXT5_EXT=33779,Qt.NEAREST=Ct.NEAREST,Qt.LINEAR=Ct.LINEAR,Qt.NEAREST_MIPMAP_NEAREST=Ct.NEAREST_MIPMAP_NEAREST,Qt.LINEAR_MIPMAP_NEAREST=Ct.LINEAR_MIPMAP_NEAREST,Qt.NEAREST_MIPMAP_LINEAR=Ct.NEAREST_MIPMAP_LINEAR,Qt.LINEAR_MIPMAP_LINEAR=Ct.LINEAR_MIPMAP_LINEAR,Qt.REPEAT=Ct.REPEAT,Qt.CLAMP_TO_EDGE=Ct.CLAMP_TO_EDGE,Qt.MIRRORED_REPEAT=Ct.MIRRORED_REPEAT;var $t=function(){this.head=null,this.tail=null,this._length=0};$t.prototype.insert=function(e){var t=new $t.Entry(e);return this.insertEntry(t),t},$t.prototype.insertAt=function(e,t){if(!(e<0)){for(var r=this.head,n=0;r&&n!=e;)r=r.next,n++;if(r){var i=new $t.Entry(t),a=r.prev;a?(a.next=i,i.prev=a):this.head=i,i.next=r,r.prev=i}else this.insert(t)}},$t.prototype.insertBeforeEntry=function(e,t){var r=new $t.Entry(e),n=t.prev;n?(n.next=r,r.prev=n):this.head=r,r.next=t,t.prev=r,this._length++},$t.prototype.insertEntry=function(e){this.head?(this.tail.next=e,e.prev=this.tail,this.tail=e):this.head=this.tail=e,this._length++},$t.prototype.remove=function(e){var t=e.prev,r=e.next;t?t.next=r:this.head=r,r?r.prev=t:this.tail=t,e.next=e.prev=null,this._length--},$t.prototype.removeAt=function(e){if(!(e<0)){for(var t=this.head,r=0;t&&r!=e;)t=t.next,r++;return t?(this.remove(t),t.value):void 0}},$t.prototype.getHead=function(){if(this.head)return this.head.value},$t.prototype.getTail=function(){if(this.tail)return this.tail.value},$t.prototype.getAt=function(e){if(!(e<0)){for(var t=this.head,r=0;t&&r!=e;)t=t.next,r++;return t.value}},$t.prototype.indexOf=function(e){for(var t=this.head,r=0;t;){if(t.value===e)return r;t=t.next,r++}},$t.prototype.length=function(){return this._length},$t.prototype.isEmpty=function(){return 0===this._length},$t.prototype.forEach=function(e,t){for(var r=this.head,n=0,i=void 0!==t;r;)i?e.call(t,r.value,n):e(r.value,n),r=r.next,n++},$t.prototype.clear=function(){this.tail=this.head=null,this._length=0},$t.Entry=function(e){this.value=e,this.next=null,this.prev=null};var er=function(e){this._list=new $t,this._map={},this._maxSize=e||10};er.prototype.setMaxSize=function(e){this._maxSize=e},er.prototype.put=function(e,t){if(void 0===this._map[e]){var r=this._list.length();if(r>=this._maxSize&&r>0){var n=this._list.head;this._list.remove(n),delete this._map[n.key]}var i=this._list.insert(t);i.key=e,this._map[e]=i}},er.prototype.get=function(e){var t=this._map[e];if(void 0!==t)return t!==this._list.tail&&(this._list.remove(t),this._list.insertEntry(t)),t.value},er.prototype.remove=function(e){var t=this._map[e];void 0!==t&&(delete this._map[e],this._list.remove(t))},er.prototype.clear=function(){this._list.clear(),this._map={}};var tr={},rr={transparent:[0,0,0,0],aliceblue:[240,248,255,1],antiquewhite:[250,235,215,1],aqua:[0,255,255,1],aquamarine:[127,255,212,1],azure:[240,255,255,1],beige:[245,245,220,1],bisque:[255,228,196,1],black:[0,0,0,1],blanchedalmond:[255,235,205,1],blue:[0,0,255,1],blueviolet:[138,43,226,1],brown:[165,42,42,1],burlywood:[222,184,135,1],cadetblue:[95,158,160,1],chartreuse:[127,255,0,1],chocolate:[210,105,30,1],coral:[255,127,80,1],cornflowerblue:[100,149,237,1],cornsilk:[255,248,220,1],crimson:[220,20,60,1],cyan:[0,255,255,1],darkblue:[0,0,139,1],darkcyan:[0,139,139,1],darkgoldenrod:[184,134,11,1],darkgray:[169,169,169,1],darkgreen:[0,100,0,1],darkgrey:[169,169,169,1],darkkhaki:[189,183,107,1],darkmagenta:[139,0,139,1],darkolivegreen:[85,107,47,1],darkorange:[255,140,0,1],darkorchid:[153,50,204,1],darkred:[139,0,0,1],darksalmon:[233,150,122,1],darkseagreen:[143,188,143,1],darkslateblue:[72,61,139,1],darkslategray:[47,79,79,1],darkslategrey:[47,79,79,1],darkturquoise:[0,206,209,1],darkviolet:[148,0,211,1],deeppink:[255,20,147,1],deepskyblue:[0,191,255,1],dimgray:[105,105,105,1],dimgrey:[105,105,105,1],dodgerblue:[30,144,255,1],firebrick:[178,34,34,1],floralwhite:[255,250,240,1],forestgreen:[34,139,34,1],fuchsia:[255,0,255,1],gainsboro:[220,220,220,1],ghostwhite:[248,248,255,1],gold:[255,215,0,1],goldenrod:[218,165,32,1],gray:[128,128,128,1],green:[0,128,0,1],greenyellow:[173,255,47,1],grey:[128,128,128,1],honeydew:[240,255,240,1],hotpink:[255,105,180,1],indianred:[205,92,92,1],indigo:[75,0,130,1],ivory:[255,255,240,1],khaki:[240,230,140,1],lavender:[230,230,250,1],lavenderblush:[255,240,245,1],lawngreen:[124,252,0,1],lemonchiffon:[255,250,205,1],lightblue:[173,216,230,1],lightcoral:[240,128,128,1],lightcyan:[224,255,255,1],lightgoldenrodyellow:[250,250,210,1],lightgray:[211,211,211,1],lightgreen:[144,238,144,1],lightgrey:[211,211,211,1],lightpink:[255,182,193,1],lightsalmon:[255,160,122,1],lightseagreen:[32,178,170,1],lightskyblue:[135,206,250,1],lightslategray:[119,136,153,1],lightslategrey:[119,136,153,1],lightsteelblue:[176,196,222,1],lightyellow:[255,255,224,1],lime:[0,255,0,1],limegreen:[50,205,50,1],linen:[250,240,230,1],magenta:[255,0,255,1],maroon:[128,0,0,1],mediumaquamarine:[102,205,170,1],mediumblue:[0,0,205,1],mediumorchid:[186,85,211,1],mediumpurple:[147,112,219,1],mediumseagreen:[60,179,113,1],mediumslateblue:[123,104,238,1],mediumspringgreen:[0,250,154,1],mediumturquoise:[72,209,204,1],mediumvioletred:[199,21,133,1],midnightblue:[25,25,112,1],mintcream:[245,255,250,1],mistyrose:[255,228,225,1],moccasin:[255,228,181,1],navajowhite:[255,222,173,1],navy:[0,0,128,1],oldlace:[253,245,230,1],olive:[128,128,0,1],olivedrab:[107,142,35,1],orange:[255,165,0,1],orangered:[255,69,0,1],orchid:[218,112,214,1],palegoldenrod:[238,232,170,1],palegreen:[152,251,152,1],paleturquoise:[175,238,238,1],palevioletred:[219,112,147,1],papayawhip:[255,239,213,1],peachpuff:[255,218,185,1],peru:[205,133,63,1],pink:[255,192,203,1],plum:[221,160,221,1],powderblue:[176,224,230,1],purple:[128,0,128,1],red:[255,0,0,1],rosybrown:[188,143,143,1],royalblue:[65,105,225,1],saddlebrown:[139,69,19,1],salmon:[250,128,114,1],sandybrown:[244,164,96,1],seagreen:[46,139,87,1],seashell:[255,245,238,1],sienna:[160,82,45,1],silver:[192,192,192,1],skyblue:[135,206,235,1],slateblue:[106,90,205,1],slategray:[112,128,144,1],slategrey:[112,128,144,1],snow:[255,250,250,1],springgreen:[0,255,127,1],steelblue:[70,130,180,1],tan:[210,180,140,1],teal:[0,128,128,1],thistle:[216,191,216,1],tomato:[255,99,71,1],turquoise:[64,224,208,1],violet:[238,130,238,1],wheat:[245,222,179,1],white:[255,255,255,1],whitesmoke:[245,245,245,1],yellow:[255,255,0,1],yellowgreen:[154,205,50,1]},nr=new er(20),ir=null;tr.parse=function(e,t){if(e){t=t||[];var r=nr.get(e);if(r)return p(t,r);e+="";var n=e.replace(/ /g,"").toLowerCase();if(n in rr)return p(t,rr[n]),m(e,t),t;if("#"!==n.charAt(0)){var i=n.indexOf("("),a=n.indexOf(")");if(-1!==i&&a+1===n.length){var o=n.substr(0,i),s=n.substr(i+1,a-(i+1)).split(","),u=1;switch(o){case"rgba":if(4!==s.length)return void d(t,0,0,0,1);u=c(s.pop());case"rgb":return 3!==s.length?void d(t,0,0,0,1):(d(t,l(s[0]),l(s[1]),l(s[2]),u),m(e,t),t);case"hsla":return 4!==s.length?void d(t,0,0,0,1):(s[3]=c(s[3]),_(s,t),m(e,t),t);case"hsl":return 3!==s.length?void d(t,0,0,0,1):(_(s,t),m(e,t),t);default:return}}d(t,0,0,0,1)}else{if(4===n.length){var h=parseInt(n.substr(1),16);return h>=0&&h<=4095?(d(t,(3840&h)>>4|(3840&h)>>8,240&h|(240&h)>>4,15&h|(15&h)<<4,1),m(e,t),t):void d(t,0,0,0,1)}if(7===n.length){var h=parseInt(n.substr(1),16);return h>=0&&h<=16777215?(d(t,(16711680&h)>>16,(65280&h)>>8,255&h,1),m(e,t),t):void d(t,0,0,0,1)}}}},tr.parseToFloat=function(e,t){if(t=tr.parse(e,t))return t[0]/=255,t[1]/=255,t[2]/=255,t},tr.lift=function(e,t){var r=tr.parse(e);if(r){for(var n=0;n<3;n++)r[n]=t<0?r[n]*(1-t)|0:(255-r[n])*t+r[n]|0;return tr.stringify(r,4===r.length?"rgba":"rgb")}},tr.toHex=function(e){var t=tr.parse(e);if(t)return((1<<24)+(t[0]<<16)+(t[1]<<8)+ +t[2]).toString(16).slice(1)},tr.fastLerp=function(e,t,r){if(t&&t.length&&e>=0&&e<=1){r=r||[];var n=e*(t.length-1),i=Math.floor(n),a=Math.ceil(n),s=t[i],l=t[a],c=n-i;return r[0]=o(f(s[0],l[0],c)),r[1]=o(f(s[1],l[1],c)),r[2]=o(f(s[2],l[2],c)),r[3]=u(f(s[3],l[3],c)),r}},tr.fastMapToColor=tr.fastLerp,tr.lerp=function(e,t,r){if(t&&t.length&&e>=0&&e<=1){var n=e*(t.length-1),i=Math.floor(n),a=Math.ceil(n),s=tr.parse(t[i]),l=tr.parse(t[a]),c=n-i,h=tr.stringify([o(f(s[0],l[0],c)),o(f(s[1],l[1],c)),o(f(s[2],l[2],c)),u(f(s[3],l[3],c))],"rgba");return r?{color:h,leftIndex:i,rightIndex:a,value:n}:h}},tr.mapToColor=tr.lerp,tr.modifyHSL=function(e,t,r,n){if(e=tr.parse(e))return e=v(e),null!=t&&(e[0]=s(t)),null!=r&&(e[1]=c(r)),null!=n&&(e[2]=c(n)),tr.stringify(_(e),"rgba")},tr.modifyAlpha=function(e,t){if((e=tr.parse(e))&&null!=t)return e[3]=u(t),tr.stringify(e,"rgba")},tr.stringify=function(e,t){if(e&&e.length){var r=e[0]+","+e[1]+","+e[2];return"rgba"!==t&&"hsva"!==t&&"hsla"!==t||(r+=","+e[3]),t+"("+r+")"}};var ar=tr.parseToFloat,or={},sr=At.extend(function(){return{name:"",depthTest:!0,depthMask:!0,transparent:!1,blend:null,autoUpdateTextureStatus:!0,uniforms:{},vertexDefines:{},fragmentDefines:{},_textureStatus:{},_enabledUniforms:null}},function(){
this.name||(this.name="MATERIAL_"+this.__uid__),this.shader&&this.attachShader(this.shader,!0)},{precision:"highp",setUniform:function(e,t){void 0===t&&console.warn('Uniform value "'+e+'" is undefined');var r=this.uniforms[e];r&&("string"==typeof t&&(t=ar(t)||t),r.value=t,this.autoUpdateTextureStatus&&"t"===r.type&&(t?this.enableTexture(e):this.disableTexture(e)))},setUniforms:function(e){for(var t in e){var r=e[t];this.setUniform(t,r)}},isUniformEnabled:function(e){return this._enabledUniforms.indexOf(e)>=0},getEnabledUniforms:function(){return this._enabledUniforms},getTextureUniforms:function(){return this._textureUniforms},set:function(e,t){if("object"==typeof e)for(var r in e){var n=e[r];this.setUniform(r,n)}else this.setUniform(e,t)},get:function(e){var t=this.uniforms[e];if(t)return t.value},attachShader:function(e,t){var r=this.uniforms;this.uniforms=e.createUniforms(),this.shader=e;var n=this.uniforms;this._enabledUniforms=Object.keys(n),this._enabledUniforms.sort(),this._textureUniforms=this._enabledUniforms.filter(function(e){var t=this.uniforms[e].type;return"t"===t||"tv"===t},this);var i=this.vertexDefines,a=this.fragmentDefines;if(this.vertexDefines=bt.clone(e.vertexDefines),this.fragmentDefines=bt.clone(e.fragmentDefines),t){for(var o in r)n[o]&&(n[o].value=r[o].value);bt.defaults(this.vertexDefines,i),bt.defaults(this.fragmentDefines,a)}var s={};for(var u in e.textures)s[u]={shaderType:e.textures[u].shaderType,type:e.textures[u].type,enabled:!(!t||!this._textureStatus[u])&&this._textureStatus[u].enabled};this._textureStatus=s,this._programKey=""},clone:function(){var e=new this.constructor({name:this.name,shader:this.shader});for(var t in this.uniforms)e.uniforms[t].value=this.uniforms[t].value;return e.depthTest=this.depthTest,e.depthMask=this.depthMask,e.transparent=this.transparent,e.blend=this.blend,e.vertexDefines=bt.clone(this.vertexDefines),e.fragmentDefines=bt.clone(this.fragmentDefines),e.enableTexture(this.getEnabledTextures()),e.precision=this.precision,e},define:function(e,t,r){var n=this.vertexDefines,i=this.fragmentDefines;"vertex"!==e&&"fragment"!==e&&"both"!==e&&arguments.length<3&&(r=t,t=e,e="both"),r=null!=r?r:null,"vertex"!==e&&"both"!==e||n[t]!==r&&(n[t]=r,this._programKey=""),"fragment"!==e&&"both"!==e||i[t]!==r&&(i[t]=r,"both"!==e&&(this._programKey=""))},undefine:function(e,t){"vertex"!==e&&"fragment"!==e&&"both"!==e&&arguments.length<2&&(t=e,e="both"),"vertex"!==e&&"both"!==e||this.isDefined("vertex",t)&&(delete this.vertexDefines[t],this._programKey=""),"fragment"!==e&&"both"!==e||this.isDefined("fragment",t)&&(delete this.fragmentDefines[t],"both"!==e&&(this._programKey=""))},isDefined:function(e,t){switch(e){case"vertex":return void 0!==this.vertexDefines[t];case"fragment":return void 0!==this.fragmentDefines[t]}},getDefine:function(e,t){switch(e){case"vertex":return this.vertexDefines[t];case"fragment":return this.fragmentDefines[t]}},enableTexture:function(e){if(Array.isArray(e))for(var t=0;t<e.length;t++)this.enableTexture(e[t]);else{var r=this._textureStatus[e];if(r){r.enabled||(r.enabled=!0,this._programKey="")}}},enableTexturesAll:function(){var e=this._textureStatus;for(var t in e)e[t].enabled=!0;this._programKey=""},disableTexture:function(e){if(Array.isArray(e))for(var t=0;t<e.length;t++)this.disableTexture(e[t]);else{var r=this._textureStatus[e];if(r){!r.enabled||(r.enabled=!1,this._programKey="")}}},disableTexturesAll:function(){var e=this._textureStatus;for(var t in e)e[t].enabled=!1;this._programKey=""},isTextureEnabled:function(e){var t=this._textureStatus;return!!t[e]&&t[e].enabled},getEnabledTextures:function(){var e=[],t=this._textureStatus;for(var r in t)t[r].enabled&&e.push(r);return e},dirtyDefines:function(){this._programKey=""},getProgramKey:function(){return this._programKey||(this._programKey=y(this.vertexDefines,this.fragmentDefines,this.getEnabledTextures())),this._programKey}}),ur=Pt.vec2,lr=function(e,t){e=e||0,t=t||0,this.array=ur.fromValues(e,t),this._dirty=!0};if(lr.prototype={constructor:lr,add:function(e){return ur.add(this.array,this.array,e.array),this._dirty=!0,this},set:function(e,t){return this.array[0]=e,this.array[1]=t,this._dirty=!0,this},setArray:function(e){return this.array[0]=e[0],this.array[1]=e[1],this._dirty=!0,this},clone:function(){return new lr(this.x,this.y)},copy:function(e){return ur.copy(this.array,e.array),this._dirty=!0,this},cross:function(e,t){return ur.cross(e.array,this.array,t.array),e._dirty=!0,this},dist:function(e){return ur.dist(this.array,e.array)},distance:function(e){return ur.distance(this.array,e.array)},div:function(e){return ur.div(this.array,this.array,e.array),this._dirty=!0,this},divide:function(e){return ur.divide(this.array,this.array,e.array),this._dirty=!0,this},dot:function(e){return ur.dot(this.array,e.array)},len:function(){return ur.len(this.array)},length:function(){return ur.length(this.array)},lerp:function(e,t,r){return ur.lerp(this.array,e.array,t.array,r),this._dirty=!0,this},min:function(e){return ur.min(this.array,this.array,e.array),this._dirty=!0,this},max:function(e){return ur.max(this.array,this.array,e.array),this._dirty=!0,this},mul:function(e){return ur.mul(this.array,this.array,e.array),this._dirty=!0,this},multiply:function(e){return ur.multiply(this.array,this.array,e.array),this._dirty=!0,this},negate:function(){return ur.negate(this.array,this.array),this._dirty=!0,this},normalize:function(){return ur.normalize(this.array,this.array),this._dirty=!0,this},random:function(e){return ur.random(this.array,e),this._dirty=!0,this},scale:function(e){return ur.scale(this.array,this.array,e),this._dirty=!0,this},scaleAndAdd:function(e,t){return ur.scaleAndAdd(this.array,this.array,e.array,t),this._dirty=!0,this},sqrDist:function(e){return ur.sqrDist(this.array,e.array)},squaredDistance:function(e){return ur.squaredDistance(this.array,e.array)},sqrLen:function(){return ur.sqrLen(this.array)},squaredLength:function(){return ur.squaredLength(this.array)},sub:function(e){return ur.sub(this.array,this.array,e.array),this._dirty=!0,this},subtract:function(e){return ur.subtract(this.array,this.array,e.array),this._dirty=!0,this},transformMat2:function(e){return ur.transformMat2(this.array,this.array,e.array),this._dirty=!0,this},transformMat2d:function(e){return ur.transformMat2d(this.array,this.array,e.array),this._dirty=!0,this},transformMat3:function(e){return ur.transformMat3(this.array,this.array,e.array),this._dirty=!0,this},transformMat4:function(e){return ur.transformMat4(this.array,this.array,e.array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this.array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this.array)}},Object.defineProperty){var cr=lr.prototype;Object.defineProperty(cr,"x",{get:function(){return this.array[0]},set:function(e){this.array[0]=e,this._dirty=!0}}),Object.defineProperty(cr,"y",{get:function(){return this.array[1]},set:function(e){this.array[1]=e,this._dirty=!0}})}lr.add=function(e,t,r){return ur.add(e.array,t.array,r.array),e._dirty=!0,e},lr.set=function(e,t,r){return ur.set(e.array,t,r),e._dirty=!0,e},lr.copy=function(e,t){return ur.copy(e.array,t.array),e._dirty=!0,e},lr.cross=function(e,t,r){return ur.cross(e.array,t.array,r.array),e._dirty=!0,e},lr.dist=function(e,t){return ur.distance(e.array,t.array)},lr.distance=lr.dist,lr.div=function(e,t,r){return ur.divide(e.array,t.array,r.array),e._dirty=!0,e},lr.divide=lr.div,lr.dot=function(e,t){return ur.dot(e.array,t.array)},lr.len=function(e){return ur.length(e.array)},lr.lerp=function(e,t,r,n){return ur.lerp(e.array,t.array,r.array,n),e._dirty=!0,e},lr.min=function(e,t,r){return ur.min(e.array,t.array,r.array),e._dirty=!0,e},lr.max=function(e,t,r){return ur.max(e.array,t.array,r.array),e._dirty=!0,e},lr.mul=function(e,t,r){return ur.multiply(e.array,t.array,r.array),e._dirty=!0,e},lr.multiply=lr.mul,lr.negate=function(e,t){return ur.negate(e.array,t.array),e._dirty=!0,e},lr.normalize=function(e,t){return ur.normalize(e.array,t.array),e._dirty=!0,e},lr.random=function(e,t){return ur.random(e.array,t),e._dirty=!0,e},lr.scale=function(e,t,r){return ur.scale(e.array,t.array,r),e._dirty=!0,e},lr.scaleAndAdd=function(e,t,r,n){return ur.scaleAndAdd(e.array,t.array,r.array,n),e._dirty=!0,e},lr.sqrDist=function(e,t){return ur.sqrDist(e.array,t.array)},lr.squaredDistance=lr.sqrDist,lr.sqrLen=function(e){return ur.sqrLen(e.array)},lr.squaredLength=lr.sqrLen,lr.sub=function(e,t,r){return ur.subtract(e.array,t.array,r.array),e._dirty=!0,e},lr.subtract=lr.sub,lr.transformMat2=function(e,t,r){return ur.transformMat2(e.array,t.array,r.array),e._dirty=!0,e},lr.transformMat2d=function(e,t,r){return ur.transformMat2d(e.array,t.array,r.array),e._dirty=!0,e},lr.transformMat3=function(e,t,r){return ur.transformMat3(e.array,t.array,r.array),e._dirty=!0,e},lr.transformMat4=function(e,t,r){return ur.transformMat4(e.array,t.array,r.array),e._dirty=!0,e};var hr={},fr=new Mt.Float32Array(16),dr=At.extend({uniformSemantics:{},attributes:{}},function(){this._locations={},this._textureSlot=0,this._program=null},{bind:function(e){this._textureSlot=0,e.gl.useProgram(this._program)},hasUniform:function(e){var t=this._locations[e];return null!==t&&void 0!==t},useTextureSlot:function(e,t,r){t&&(e.gl.activeTexture(e.gl.TEXTURE0+r),t.isRenderable()?t.bind(e):t.unbind(e))},currentTextureSlot:function(){return this._textureSlot},resetTextureSlot:function(e){this._textureSlot=e||0},takeCurrentTextureSlot:function(e,t){var r=this._textureSlot;return this.useTextureSlot(e,t,r),this._textureSlot++,r},setUniform:function(e,t,r,n){var i=this._locations,a=i[r];if(null===a||void 0===a)return!1;switch(t){case"m4":if(!(n instanceof Float32Array)){for(var o=0;o<n.length;o++)fr[o]=n[o];n=fr}e.uniformMatrix4fv(a,!1,n);break;case"2i":e.uniform2i(a,n[0],n[1]);break;case"2f":e.uniform2f(a,n[0],n[1]);break;case"3i":e.uniform3i(a,n[0],n[1],n[2]);break;case"3f":e.uniform3f(a,n[0],n[1],n[2]);break;case"4i":e.uniform4i(a,n[0],n[1],n[2],n[3]);break;case"4f":e.uniform4f(a,n[0],n[1],n[2],n[3]);break;case"1i":e.uniform1i(a,n);break;case"1f":e.uniform1f(a,n);break;case"1fv":e.uniform1fv(a,n);break;case"1iv":e.uniform1iv(a,n);break;case"2iv":e.uniform2iv(a,n);break;case"2fv":e.uniform2fv(a,n);break;case"3iv":e.uniform3iv(a,n);break;case"3fv":e.uniform3fv(a,n);break;case"4iv":e.uniform4iv(a,n);break;case"4fv":e.uniform4fv(a,n);break;case"m2":case"m2v":e.uniformMatrix2fv(a,!1,n);break;case"m3":case"m3v":e.uniformMatrix3fv(a,!1,n);break;case"m4v":if(Array.isArray(n)&&Array.isArray(n[0])){for(var s=new Mt.Float32Array(16*n.length),u=0,o=0;o<n.length;o++)for(var l=n[o],c=0;c<16;c++)s[u++]=l[c];e.uniformMatrix4fv(a,!1,s)}else e.uniformMatrix4fv(a,!1,n)}return!0},setUniformOfSemantic:function(e,t,r){var n=this.uniformSemantics[t];return!!n&&this.setUniform(e,n.type,n.symbol,r)},enableAttributes:function(e,t,r){var n,i=e.gl,a=this._program,o=this._locations;(n=r?r.__enabledAttributeList:hr[e.__uid__])||(n=r?r.__enabledAttributeList=[]:hr[e.__uid__]=[]);for(var s=[],u=0;u<t.length;u++){var l=t[u];if(this.attributes[l]){var c=o[l];if(null==c){if(-1===(c=i.getAttribLocation(a,l))){s[u]=-1;continue}o[l]=c}s[u]=c,n[c]?n[c]=2:n[c]=1}else s[u]=-1}for(var u=0;u<n.length;u++)switch(n[u]){case 1:i.enableVertexAttribArray(u),n[u]=3;break;case 2:n[u]=3;break;case 3:i.disableVertexAttribArray(u),n[u]=0}return s},buildProgram:function(e,t,r,n){var i=e.createShader(e.VERTEX_SHADER),a=e.createProgram();e.shaderSource(i,r),e.compileShader(i);var o=e.createShader(e.FRAGMENT_SHADER);e.shaderSource(o,n),e.compileShader(o);var s=T(e,i,r);if(s)return s;if(s=T(e,o,n))return s;if(e.attachShader(a,i),e.attachShader(a,o),t.attributeSemantics.POSITION)e.bindAttribLocation(a,0,t.attributeSemantics.POSITION.symbol);else{var u=Object.keys(this.attributes);e.bindAttribLocation(a,0,u[0])}if(e.linkProgram(a),!e.getProgramParameter(a,e.LINK_STATUS))return"Could not link program\nVALIDATE_STATUS: "+e.getProgramParameter(a,e.VALIDATE_STATUS)+", gl error ["+e.getError()+"]";for(var l=0;l<t.uniforms.length;l++){var c=t.uniforms[l];this._locations[c]=e.getUniformLocation(a,c)}e.deleteShader(i),e.deleteShader(o),this._program=a,this.vertexCode=r,this.fragmentCode=n}}),pr=/for\s*?\(int\s*?_idx_\s*\=\s*([\w-]+)\;\s*_idx_\s*<\s*([\w-]+);\s*_idx_\s*\+\+\s*\)\s*\{\{([\s\S]+?)(?=\}\})\}\}/g;w.prototype.getProgram=function(e,t,r){var n=this._cache,i="s"+t.shader.shaderID+"m"+t.getProgramKey();r&&(i+="se"+r.getProgramKey(e.lightGroup)),e.isSkinnedMesh()&&(i+=","+e.joints.length);var a=n[i];if(a)return a;var o=r?r.getLightsNumbers(e.lightGroup):{},s=this._renderer,u=s.gl,l=t.getEnabledTextures(),c="";e.isSkinnedMesh()&&(c="\n"+b({SKINNING:null,JOINT_COUNT:e.joints.length})+"\n");var h=c+b(t.vertexDefines,o,l),f=c+b(t.fragmentDefines,o,l),d=h+"\n"+t.shader.vertex,p=A(["OES_standard_derivatives","EXT_shader_texture_lod"])+"\n"+S(t.precision)+"\n"+f+"\n"+t.shader.fragment,m=E(d,t.vertexDefines,o),_=E(p,t.fragmentDefines,o),a=new dr;a.uniformSemantics=t.shader.uniformSemantics,a.attributes=t.shader.attributes;var v=a.buildProgram(u,t.shader,m,_);return a.__error=v,n[i]=a,a};var mr=Pt.mat2,_r=Pt.mat3,vr=Pt.mat4,gr=/uniform\s+(bool|float|int|vec2|vec3|vec4|ivec2|ivec3|ivec4|mat2|mat3|mat4|sampler2D|samplerCube)\s+([\s\S]*?);/g,yr=/attribute\s+(float|int|vec2|vec3|vec4)\s+([\s\S]*?);/g,xr=/#define\s+(\w+)?(\s+[\w-.]+)?\s*;?\s*\n/g,Tr={bool:"1i",int:"1i",sampler2D:"t",samplerCube:"t",float:"1f",vec2:"2f",vec3:"3f",vec4:"4f",ivec2:"2i",ivec3:"3i",ivec4:"4i",mat2:"m2",mat3:"m3",mat4:"m4"},Er={bool:function(){return!0},int:function(){return 0},float:function(){return 0},sampler2D:function(){return null},samplerCube:function(){return null},vec2:function(){return[0,0]},vec3:function(){return[0,0,0]},vec4:function(){return[0,0,0,0]},ivec2:function(){return[0,0]},ivec3:function(){return[0,0,0]},ivec4:function(){return[0,0,0,0]},mat2:function(){return mr.create()},mat3:function(){return _r.create()},mat4:function(){return vr.create()},array:function(){return[]}},br=["POSITION","NORMAL","BINORMAL","TANGENT","TEXCOORD","TEXCOORD_0","TEXCOORD_1","COLOR","JOINT","WEIGHT"],Ar=["SKIN_MATRIX","VIEWPORT_SIZE","VIEWPORT","DEVICEPIXELRATIO","WINDOW_SIZE","NEAR","FAR","TIME"],Sr=["WORLD","VIEW","PROJECTION","WORLDVIEW","VIEWPROJECTION","WORLDVIEWPROJECTION","WORLDINVERSE","VIEWINVERSE","PROJECTIONINVERSE","WORLDVIEWINVERSE","VIEWPROJECTIONINVERSE","WORLDVIEWPROJECTIONINVERSE","WORLDTRANSPOSE","VIEWTRANSPOSE","PROJECTIONTRANSPOSE","WORLDVIEWTRANSPOSE","VIEWPROJECTIONTRANSPOSE","WORLDVIEWPROJECTIONTRANSPOSE","WORLDINVERSETRANSPOSE","VIEWINVERSETRANSPOSE","PROJECTIONINVERSETRANSPOSE","WORLDVIEWINVERSETRANSPOSE","VIEWPROJECTIONINVERSETRANSPOSE","WORLDVIEWPROJECTIONINVERSETRANSPOSE"],wr={vec4:4,vec3:3,vec2:2,float:1},Cr={},Rr={};L.prototype={constructor:L,createUniforms:function(){var e={};for(var t in this.uniformTemplates){var r=this.uniformTemplates[t];e[t]={type:r.type,value:r.value()}}return e},_parseImport:function(){this._vertexCode=L.parseImport(this.vertex),this._fragmentCode=L.parseImport(this.fragment)},_addSemanticUniform:function(e,t,r){if(br.indexOf(r)>=0)this.attributeSemantics[r]={symbol:e,type:t};else if(Sr.indexOf(r)>=0){var n=!1,i=r;r.match(/TRANSPOSE$/)&&(n=!0,i=r.slice(0,-9)),this.matrixSemantics[r]={symbol:e,type:t,isTranspose:n,semanticNoTranspose:i}}else Ar.indexOf(r)>=0&&(this.uniformSemantics[r]={symbol:e,type:t})},_addMaterialUniform:function(e,t,r,n,i,a){a[e]={type:r,value:i?Er.array:n||Er[t],semantic:null}},_parseUniforms:function(){function e(e){return null!=e?function(){return e}:null}function t(t,a,o){var s=M(a,o),u=[];for(var l in s){var c=s[l],h=c.semantic,f=l,d=Tr[a],p=e(s[l].value);s[l].isArray&&(f+="["+s[l].arraySize+"]",d+="v"),u.push(f),n._uniformList.push(l),c.ignore||("sampler2D"!==a&&"samplerCube"!==a||(n.textures[l]={shaderType:i,type:a}),h?n._addSemanticUniform(l,d,h):n._addMaterialUniform(l,a,d,p,s[l].isArray,r))}return u.length>0?"uniform "+a+" "+u.join(",")+";\n":""}var r={},n=this,i="vertex";this._uniformList=[],this._vertexCode=this._vertexCode.replace(gr,t),i="fragment",this._fragmentCode=this._fragmentCode.replace(gr,t),n.matrixSemanticKeys=Object.keys(this.matrixSemantics),this.uniformTemplates=r},_parseAttributes:function(){function e(e,n,i){var a=M(n,i),o=wr[n]||1,s=[];for(var u in a){var l=a[u].semantic;if(t[u]={type:"float",size:o,semantic:l||null},l){if(br.indexOf(l)<0)throw new Error('Unkown semantic "'+l+'"');r.attributeSemantics[l]={symbol:u,type:n}}s.push(u)}return"attribute "+n+" "+s.join(",")+";\n"}var t={},r=this;this._vertexCode=this._vertexCode.replace(yr,e),this.attributes=t},_parseDefines:function(){function e(e,n,i){var a="vertex"===r?t.vertexDefines:t.fragmentDefines;return a[n]||(a[n]="false"!==i&&("true"===i||(i?isNaN(parseFloat(i))?i.trim():parseFloat(i):null))),""}var t=this,r="vertex";this._vertexCode=this._vertexCode.replace(xr,e),r="fragment",this._fragmentCode=this._fragmentCode.replace(xr,e)},clone:function(){var e=Rr[this._shaderID];return new L(e.vertex,e.fragment)}},Object.defineProperty&&(Object.defineProperty(L.prototype,"shaderID",{get:function(){return this._shaderID}}),Object.defineProperty(L.prototype,"vertex",{get:function(){return this._vertexCode}}),Object.defineProperty(L.prototype,"fragment",{get:function(){return this._fragmentCode}}),Object.defineProperty(L.prototype,"uniforms",{get:function(){return this._uniformList}}));var Nr=/(@import)\s*([0-9a-zA-Z_\-\.]*)/g;L.parseImport=function(e){return e=e.replace(Nr,function(e,t,r){var e=L.source(r);return e?L.parseImport(e):(console.error('Shader chunk "'+r+'" not existed in library'),"")})};var Mr=/(@export)\s*([0-9a-zA-Z_\-\.]*)\s*\n([\s\S]*?)@end/g;L.import=function(e){e.replace(Mr,function(e,t,r,n){var n=n.replace(/(^[\s\t\xa0\u3000]+)|([\u3000\xa0\s\t]+\x24)/g,"");if(n){for(var i,a=r.split("."),o=L.codes,s=0;s<a.length-1;)i=a[s++],o[i]||(o[i]={}),o=o[i];i=a[s],o[i]=n}return n})},L.codes={},L.source=function(e){for(var t=e.split("."),r=L.codes,n=0;r&&n<t.length;){r=r[t[n++]]}return"string"!=typeof r?(console.error('Shader "'+e+'" not existed in library'),""):r};var Lr=":unconfigurable;",Pr=["@export clay.header.directional_light","uniform vec3 directionalLightDirection[DIRECTIONAL_LIGHT_COUNT]"+Lr,"uniform vec3 directionalLightColor[DIRECTIONAL_LIGHT_COUNT]"+Lr,"@end","@export clay.header.ambient_light","uniform vec3 ambientLightColor[AMBIENT_LIGHT_COUNT]"+Lr,"@end","@export clay.header.ambient_sh_light","uniform vec3 ambientSHLightColor[AMBIENT_SH_LIGHT_COUNT]"+Lr,"uniform vec3 ambientSHLightCoefficients[AMBIENT_SH_LIGHT_COUNT * 9]"+Lr,"vec3 calcAmbientSHLight(int idx, vec3 N) {\n int offset = 9 * idx;\n return ambientSHLightCoefficients[0]\n + ambientSHLightCoefficients[1] * N.x\n + ambientSHLightCoefficients[2] * N.y\n + ambientSHLightCoefficients[3] * N.z\n + ambientSHLightCoefficients[4] * N.x * N.z\n + ambientSHLightCoefficients[5] * N.z * N.y\n + ambientSHLightCoefficients[6] * N.y * N.x\n + ambientSHLightCoefficients[7] * (3.0 * N.z * N.z - 1.0)\n + ambientSHLightCoefficients[8] * (N.x * N.x - N.y * N.y);\n}","@end","@export clay.header.ambient_cubemap_light","uniform vec3 ambientCubemapLightColor[AMBIENT_CUBEMAP_LIGHT_COUNT]"+Lr,"uniform samplerCube ambientCubemapLightCubemap[AMBIENT_CUBEMAP_LIGHT_COUNT]"+Lr,"uniform sampler2D ambientCubemapLightBRDFLookup[AMBIENT_CUBEMAP_LIGHT_COUNT]"+Lr,"@end","@export clay.header.point_light","uniform vec3 pointLightPosition[POINT_LIGHT_COUNT]"+Lr,"uniform float pointLightRange[POINT_LIGHT_COUNT]"+Lr,"uniform vec3 pointLightColor[POINT_LIGHT_COUNT]"+Lr,"@end","@export clay.header.spot_light","uniform vec3 spotLightPosition[SPOT_LIGHT_COUNT]"+Lr,"uniform vec3 spotLightDirection[SPOT_LIGHT_COUNT]"+Lr,"uniform float spotLightRange[SPOT_LIGHT_COUNT]"+Lr,"uniform float spotLightUmbraAngleCosine[SPOT_LIGHT_COUNT]"+Lr,"uniform float spotLightPenumbraAngleCosine[SPOT_LIGHT_COUNT]"+Lr,"uniform float spotLightFalloffFactor[SPOT_LIGHT_COUNT]"+Lr,"uniform vec3 spotLightColor[SPOT_LIGHT_COUNT]"+Lr,"@end"].join("\n"),Dr="@export clay.prez.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nattribute vec3 position : POSITION;\n@import clay.chunk.skinning_header\nvoid main()\n{\n vec3 skinnedPosition = position;\n#ifdef SKINNING\n @import clay.chunk.skin_matrix\n skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n#endif\n gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0);\n}\n@end\n@export clay.prez.fragment\nvoid main()\n{\n gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n}\n@end";L.import(Pr),L.import(Dr);var Or=Pt.mat4,Ir=Pt.vec3,Fr=Or.create,Br={},Ur={float:Ct.FLOAT,byte:Ct.BYTE,ubyte:Ct.UNSIGNED_BYTE,short:Ct.SHORT,ushort:Ct.UNSIGNED_SHORT},kr=At.extend(function(){return{canvas:null,_width:100,_height:100,devicePixelRatio:window&&window.devicePixelRatio||1,clearColor:[0,0,0,0],clearBit:17664,alpha:!0,depth:!0,stencil:!1,antialias:!0,premultipliedAlpha:!0,preserveDrawingBuffer:!1,throwError:!0,gl:null,viewport:{},__currentFrameBuffer:null,_viewportStack:[],_clearStack:[],_sceneRendering:null}},function(){this.canvas||(this.canvas=document.createElement("canvas"));var e=this.canvas;try{var t={alpha:this.alpha,depth:this.depth,stencil:this.stencil,antialias:this.antialias,premultipliedAlpha:this.premultipliedAlpha,preserveDrawingBuffer:this.preserveDrawingBuffer};if(this.gl=e.getContext("webgl",t)||e.getContext("experimental-webgl",t),!this.gl)throw new Error;this._glinfo=new i(this.gl),this.gl.targetRenderer&&console.error("Already created a renderer"),this.gl.targetRenderer=this,this.resize()}catch(e){throw"Error creating WebGL Context "+e}this._programMgr=new w(this)},{resize:function(e,t){var r=this.canvas,n=this.devicePixelRatio;null!=e?(r.style.width=e+"px",r.style.height=t+"px",r.width=e*n,r.height=t*n,this._width=e,this._height=t):(this._width=r.width/n,this._height=r.height/n),this.setViewport(0,0,this._width,this._height)},getWidth:function(){return this._width},getHeight:function(){return this._height},getViewportAspect:function(){var e=this.viewport;return e.width/e.height},setDevicePixelRatio:function(e){this.devicePixelRatio=e,this.resize(this._width,this._height)},getDevicePixelRatio:function(){return this.devicePixelRatio},getGLExtension:function(e){return this._glinfo.getExtension(e)},getGLParameter:function(e){return this._glinfo.getParameter(e)},setViewport:function(e,t,r,n,i){if("object"==typeof e){var a=e;e=a.x,t=a.y,r=a.width,n=a.height,i=a.devicePixelRatio}i=i||this.devicePixelRatio,this.gl.viewport(e*i,t*i,r*i,n*i),this.viewport={x:e,y:t,width:r,height:n,devicePixelRatio:i}},saveViewport:function(){this._viewportStack.push(this.viewport)},restoreViewport:function(){this._viewportStack.length>0&&this.setViewport(this._viewportStack.pop())},saveClear:function(){this._clearStack.push({clearBit:this.clearBit,clearColor:this.clearColor})},restoreClear:function(){if(this._clearStack.length>0){var e=this._clearStack.pop();this.clearColor=e.clearColor,this.clearBit=e.clearBit}},bindSceneRendering:function(e){this._sceneRendering=e},render:function(e,t,r,n){var i=this.gl,a=this.clearColor;if(this.clearBit){i.colorMask(!0,!0,!0,!0),i.depthMask(!0);var o=this.viewport,s=!1,u=o.devicePixelRatio;(o.width!==this._width||o.height!==this._height||u&&u!==this.devicePixelRatio||o.x||o.y)&&(s=!0,i.enable(i.SCISSOR_TEST),i.scissor(o.x*u,o.y*u,o.width*u,o.height*u)),i.clearColor(a[0],a[1],a[2],a[3]),i.clear(this.clearBit),s&&i.disable(i.SCISSOR_TEST)}if(r||e.update(!1),e.updateLights(),!(t=t||e.getMainCamera()))return void console.error("Can't find camera in the scene.");t.update();var l=e.updateRenderList(t,!0);this._sceneRendering=e;var c=l.opaque,h=l.transparent,f=e.material;e.trigger("beforerender",this,e,t,l),n?(this.renderPreZ(c,e,t),i.depthFunc(i.LEQUAL)):i.depthFunc(i.LESS);for(var d=Fr(),p=Ir.create(),m=0;m<h.length;m++){var _=h[m];Or.multiplyAffine(d,t.viewMatrix.array,_.worldTransform.array),Ir.transformMat4(p,_.position.array,d),_.__depth=p[2]}this.renderPass(c,t,{getMaterial:function(e){return f||e.material},sortCompare:this.opaqueSortCompare}),this.renderPass(h,t,{getMaterial:function(e){return f||e.material},sortCompare:this.transparentSortCompare}),e.trigger("afterrender",this,e,t,l),this._sceneRendering=null},getProgram:function(e,t,r){return t=t||e.material,this._programMgr.getProgram(e,t,r)},validateProgram:function(e){if(e.__error){var t=e.__error;if(Br[e.__uid__])return;if(Br[e.__uid__]=!0,this.throwError)throw new Error(t);this.trigger("error",t)}},updatePrograms:function(e,t,r){var n=r&&r.getMaterial||P;t=t||null;for(var i=0;i<e.length;i++){var a=e[i],o=n.call(this,a);if(i>0){var s=e[i-1],u=s.joints?s.joints.length:0;if((a.joints?a.joints.length:0)===u&&a.material===s.material&&a.lightGroup===s.lightGroup){a.__program=s.__program;continue}}var l=this._programMgr.getProgram(a,o,t);this.validateProgram(l),a.__program=l}},renderPass:function(e,t,r){this.trigger("beforerenderpass",this,e,t,r),r=r||{},r.getMaterial=r.getMaterial||P,r.beforeRender=r.beforeRender||D,r.afterRender=r.afterRender||D,this.updatePrograms(e,this._sceneRendering,r),r.sortCompare&&e.sort(r.sortCompare);var n=this.viewport,i=n.devicePixelRatio,a=[n.x*i,n.y*i,n.width*i,n.height*i],o=this.devicePixelRatio,s=this.__currentFrameBuffer?[this.__currentFrameBuffer.getTextureWidth(),this.__currentFrameBuffer.getTextureHeight()]:[this._width*o,this._height*o],u=[a[2],a[3]],l=Date.now();Or.copy(Hr.VIEW,t.viewMatrix.array),Or.copy(Hr.PROJECTION,t.projectionMatrix.array),Or.multiply(Hr.VIEWPROJECTION,t.projectionMatrix.array,Hr.VIEW),Or.copy(Hr.VIEWINVERSE,t.worldTransform.array),Or.invert(Hr.PROJECTIONINVERSE,Hr.PROJECTION),Or.invert(Hr.VIEWPROJECTIONINVERSE,Hr.VIEWPROJECTION);for(var c,h,f,d,p,m,_,v,g,y,x=this.gl,T=this._sceneRendering,E=this.getGLExtension("OES_vertex_array_object"),b=0;b<e.length;b++){var A=e[b];if(!r.ifRender||r.ifRender(A)){var S=A.isSkinnedMesh()?Hr.IDENTITY:A.worldTransform.array,w=A.geometry,C=r.getMaterial.call(this,A),R=A.__program,N=C.shader,M=w.__uid__+"-"+R.__uid__,L=M!==g;g=M,L&&E&&E.bindVertexArrayOES(null),Or.copy(Hr.WORLD,S),Or.multiply(Hr.WORLDVIEWPROJECTION,Hr.VIEWPROJECTION,S),Or.multiplyAffine(Hr.WORLDVIEW,t.viewMatrix.array,S),(N.matrixSemantics.WORLDINVERSE||N.matrixSemantics.WORLDINVERSETRANSPOSE)&&Or.invert(Hr.WORLDINVERSE,S),(N.matrixSemantics.WORLDVIEWINVERSE||N.matrixSemantics.WORLDVIEWINVERSETRANSPOSE)&&Or.invert(Hr.WORLDVIEWINVERSE,Hr.WORLDVIEW),(N.matrixSemantics.WORLDVIEWPROJECTIONINVERSE||N.matrixSemantics.WORLDVIEWPROJECTIONINVERSETRANSPOSE)&&Or.invert(Hr.WORLDVIEWPROJECTIONINVERSE,Hr.WORLDVIEWPROJECTION),A.beforeRender(this),r.beforeRender.call(this,A,C,c);var O=R!==h;O?(R.bind(this),R.setUniformOfSemantic(x,"VIEWPORT",a),R.setUniformOfSemantic(x,"WINDOW_SIZE",s),R.setUniformOfSemantic(x,"NEAR",t.near),R.setUniformOfSemantic(x,"FAR",t.far),R.setUniformOfSemantic(x,"DEVICEPIXELRATIO",i),R.setUniformOfSemantic(x,"TIME",l),R.setUniformOfSemantic(x,"VIEWPORT_SIZE",u),T&&T.setLightUniforms(R,A.lightGroup,this)):R=h,(c!==C||O)&&(C.depthTest!==f&&(C.depthTest?x.enable(x.DEPTH_TEST):x.disable(x.DEPTH_TEST),f=C.depthTest),C.depthMask!==d&&(x.depthMask(C.depthMask),d=C.depthMask),C.transparent!==v&&(C.transparent?x.enable(x.BLEND):x.disable(x.BLEND),v=C.transparent),C.transparent&&(C.blend?C.blend(x):(x.blendEquationSeparate(x.FUNC_ADD,x.FUNC_ADD),x.blendFuncSeparate(x.SRC_ALPHA,x.ONE_MINUS_SRC_ALPHA,x.ONE,x.ONE_MINUS_SRC_ALPHA))),this._bindMaterial(C,R,c||null,h||null),c=C);for(var I=N.matrixSemanticKeys,F=0;F<I.length;F++){var B=I[F],U=N.matrixSemantics[B],k=Hr[B];if(U.isTranspose){var H=Hr[U.semanticNoTranspose];Or.transpose(k,H)}R.setUniform(x,U.type,U.symbol,k)}A.cullFace!==m&&(m=A.cullFace,x.cullFace(m)),A.frontFace!==_&&(_=A.frontFace,x.frontFace(_)),A.culling!==p&&(p=A.culling,p?x.enable(x.CULL_FACE):x.disable(x.CULL_FACE)),this._updateSkeleton(A,R),L&&(y=this._bindVAO(E,N,w,R)),this._renderObject(A,y),r.afterRender.call(this,A),A.afterRender(this),h=R}}E&&E.bindVertexArrayOES(null),this.trigger("afterrenderpass",this,e,t,r)},_updateSkeleton:function(e,t){var r=this.gl;if(e.skeleton){e.skeleton.update();var n=e.skeleton.getSubSkinMatrices(e.__uid__,e.joints);t.setUniformOfSemantic(r,"SKIN_MATRIX",n)}},_renderObject:function(e,t){var r=this.gl,n=e.geometry,i=e.mode;if(t.indicesBuffer){var a=this.getGLExtension("OES_element_index_uint"),o=a&&n.indices instanceof Uint32Array,s=o?r.UNSIGNED_INT:r.UNSIGNED_SHORT;r.drawElements(i,t.indicesBuffer.count,s,0)}else r.drawArrays(i,0,n.vertexCount)},_bindMaterial:function(e,t,r,n){for(var i=this.gl,a=n===t,o=t.currentTextureSlot(),s=e.getEnabledUniforms(),u=e.getTextureUniforms(),l=0;l<u.length;l++){var c=u[l],h=e.uniforms[c].value,f=e.uniforms[c].type;if("t"===f&&h)h.__slot=-1;else if("tv"===f)for(var d=0;d<h.length;d++)h[d]instanceof Texture&&(h[d].__slot=-1)}for(var l=0;l<s.length;l++){var c=s[l],p=e.uniforms[c],h=p.value;if(!r||!a||r.uniforms[c].value!==h){var f=p.type;if(null!=h)if("t"===f)if(h.__slot<0){var m=t.currentTextureSlot(),_=t.setUniform(i,"1i",c,m);if(!_)continue;t.takeCurrentTextureSlot(this,h),h.__slot=m}else t.setUniform(i,"1i",c,h.__slot);else if(Array.isArray(h)){if(0===h.length)continue;if("tv"===f){if(!t.hasUniform(c))continue;for(var v=[],d=0;d<h.length;d++){var g=h[d];if(g.__slot<0){var m=t.currentTextureSlot();v.push(m),t.takeCurrentTextureSlot(this,g),g.__slot=m}else v.push(g.__slot)}t.setUniform(i,"1iv",c,v)}else t.setUniform(i,p.type,c,h)}else t.setUniform(i,p.type,c,h);else if("t"===p.type){var m=t.currentTextureSlot(),_=t.setUniform(i,"1i",c,m);_&&t.takeCurrentTextureSlot(this,null)}}}t.resetTextureSlot(o)},_bindVAO:function(e,t,r,n){var i=!r.dynamic,a=this.gl,o=this.__uid__+"-"+n.__uid__,s=r.__vaoCache[o];if(!s){var u=r.getBufferChunks(this);if(!u||!u.length)return;for(var l=u[0],c=l.attributeBuffers,h=l.indicesBuffer,f=[],d=[],p=0;p<c.length;p++){var m,_=c[p],v=_.name,g=_.semantic;if(g){var y=t.attributeSemantics[g];m=y&&y.symbol}else m=v;m&&n.attributes[m]&&(f.push(_),d.push(m))}s=new O(f,d,h),i&&(r.__vaoCache[o]=s)}var x=!0;e&&i&&(null==s.vao?s.vao=e.createVertexArrayOES():x=!1,e.bindVertexArrayOES(s.vao));var f=s.availableAttributes,h=s.indicesBuffer;if(x){for(var T=n.enableAttributes(this,s.availableAttributeSymbols,e&&i&&s),p=0;p<f.length;p++){var E=T[p];if(-1!==E){var _=f[p],b=_.buffer,A=_.size,S=Ur[_.type]||a.FLOAT;a.bindBuffer(a.ARRAY_BUFFER,b),a.vertexAttribPointer(E,A,S,!1,0,0)}}r.isUseIndices()&&a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,h.buffer)}return s},renderPreZ:function(e,t,r){var n=this.gl,i=this._prezMaterial||new sr({shader:new L(L.source("clay.prez.vertex"),L.source("clay.prez.fragment"))});this._prezMaterial=i,n.colorMask(!1,!1,!1,!1),n.depthMask(!0),this.renderPass(e,r,{ifRender:function(e){return!e.ignorePreZ},getMaterial:function(){return i},sort:this.opaqueSortCompare}),n.colorMask(!0,!0,!0,!0),n.depthMask(!0)},disposeScene:function(e){this.disposeNode(e,!0,!0),e.dispose()},disposeNode:function(e,t,r){e.getParent()&&e.getParent().remove(e);var n={};e.traverse(function(e){var i=e.material;if(e.geometry&&t&&e.geometry.dispose(this),r&&i&&!n[i.__uid__]){for(var a=i.getTextureUniforms(),o=0;o<a.length;o++){var s=a[o],u=i.uniforms[s].value,l=i.uniforms[s].type;if(u)if("t"===l)u.dispose&&u.dispose(this);else if("tv"===l)for(var c=0;c<u.length;c++)u[c]&&u[c].dispose&&u[c].dispose(this)}n[i.__uid__]=!0}e.dispose&&e.dispose(this)},this)},disposeGeometry:function(e){e.dispose(this)},disposeTexture:function(e){e.dispose(this)},disposeFrameBuffer:function(e){e.dispose(this)},dispose:function(){},screenToNDC:function(e,t,r){r||(r=new lr),t=this._height-t;var n=this.viewport,i=r.array;return i[0]=(e-n.x)/n.width,i[0]=2*i[0]-1,i[1]=(t-n.y)/n.height,i[1]=2*i[1]-1,r}});kr.opaqueSortCompare=kr.prototype.opaqueSortCompare=function(e,t){
return e.renderOrder===t.renderOrder?e.__program===t.__program?e.material===t.material?e.geometry.__uid__-t.geometry.__uid__:e.material.__uid__-t.material.__uid__:e.__program&&t.__program?e.__program.__uid__-t.__program.__uid__:0:e.renderOrder-t.renderOrder},kr.transparentSortCompare=kr.prototype.transparentSortCompare=function(e,t){return e.renderOrder===t.renderOrder?e.__depth===t.__depth?e.__program===t.__program?e.material===t.material?e.geometry.__uid__-t.geometry.__uid__:e.material.__uid__-t.material.__uid__:e.__program&&t.__program?e.__program.__uid__-t.__program.__uid__:0:e.__depth-t.__depth:e.renderOrder-t.renderOrder};var Hr={IDENTITY:Fr(),WORLD:Fr(),VIEW:Fr(),PROJECTION:Fr(),WORLDVIEW:Fr(),VIEWPROJECTION:Fr(),WORLDVIEWPROJECTION:Fr(),WORLDINVERSE:Fr(),VIEWINVERSE:Fr(),PROJECTIONINVERSE:Fr(),WORLDVIEWINVERSE:Fr(),VIEWPROJECTIONINVERSE:Fr(),WORLDVIEWPROJECTIONINVERSE:Fr(),WORLDTRANSPOSE:Fr(),VIEWTRANSPOSE:Fr(),PROJECTIONTRANSPOSE:Fr(),WORLDVIEWTRANSPOSE:Fr(),VIEWPROJECTIONTRANSPOSE:Fr(),WORLDVIEWPROJECTIONTRANSPOSE:Fr(),WORLDINVERSETRANSPOSE:Fr(),VIEWINVERSETRANSPOSE:Fr(),PROJECTIONINVERSETRANSPOSE:Fr(),WORLDVIEWINVERSETRANSPOSE:Fr(),VIEWPROJECTIONINVERSETRANSPOSE:Fr(),WORLDVIEWPROJECTIONINVERSETRANSPOSE:Fr()};kr.COLOR_BUFFER_BIT=Ct.COLOR_BUFFER_BIT,kr.DEPTH_BUFFER_BIT=Ct.DEPTH_BUFFER_BIT,kr.STENCIL_BUFFER_BIT=Ct.STENCIL_BUFFER_BIT;var zr={get:I},Gr=Pt.quat,Vr=function(e,t,r,n){e=e||0,t=t||0,r=r||0,n=void 0===n?1:n,this.array=Gr.fromValues(e,t,r,n),this._dirty=!0};Vr.prototype={constructor:Vr,add:function(e){return Gr.add(this.array,this.array,e.array),this._dirty=!0,this},calculateW:function(){return Gr.calculateW(this.array,this.array),this._dirty=!0,this},set:function(e,t,r,n){return this.array[0]=e,this.array[1]=t,this.array[2]=r,this.array[3]=n,this._dirty=!0,this},setArray:function(e){return this.array[0]=e[0],this.array[1]=e[1],this.array[2]=e[2],this.array[3]=e[3],this._dirty=!0,this},clone:function(){return new Vr(this.x,this.y,this.z,this.w)},conjugate:function(){return Gr.conjugate(this.array,this.array),this._dirty=!0,this},copy:function(e){return Gr.copy(this.array,e.array),this._dirty=!0,this},dot:function(e){return Gr.dot(this.array,e.array)},fromMat3:function(e){return Gr.fromMat3(this.array,e.array),this._dirty=!0,this},fromMat4:function(){var e=Pt.mat3,t=e.create();return function(r){return e.fromMat4(t,r.array),e.transpose(t,t),Gr.fromMat3(this.array,t),this._dirty=!0,this}}(),identity:function(){return Gr.identity(this.array),this._dirty=!0,this},invert:function(){return Gr.invert(this.array,this.array),this._dirty=!0,this},len:function(){return Gr.len(this.array)},length:function(){return Gr.length(this.array)},lerp:function(e,t,r){return Gr.lerp(this.array,e.array,t.array,r),this._dirty=!0,this},mul:function(e){return Gr.mul(this.array,this.array,e.array),this._dirty=!0,this},mulLeft:function(e){return Gr.multiply(this.array,e.array,this.array),this._dirty=!0,this},multiply:function(e){return Gr.multiply(this.array,this.array,e.array),this._dirty=!0,this},multiplyLeft:function(e){return Gr.multiply(this.array,e.array,this.array),this._dirty=!0,this},normalize:function(){return Gr.normalize(this.array,this.array),this._dirty=!0,this},rotateX:function(e){return Gr.rotateX(this.array,this.array,e),this._dirty=!0,this},rotateY:function(e){return Gr.rotateY(this.array,this.array,e),this._dirty=!0,this},rotateZ:function(e){return Gr.rotateZ(this.array,this.array,e),this._dirty=!0,this},rotationTo:function(e,t){return Gr.rotationTo(this.array,e.array,t.array),this._dirty=!0,this},setAxes:function(e,t,r){return Gr.setAxes(this.array,e.array,t.array,r.array),this._dirty=!0,this},setAxisAngle:function(e,t){return Gr.setAxisAngle(this.array,e.array,t),this._dirty=!0,this},slerp:function(e,t,r){return Gr.slerp(this.array,e.array,t.array,r),this._dirty=!0,this},sqrLen:function(){return Gr.sqrLen(this.array)},squaredLength:function(){return Gr.squaredLength(this.array)},fromEuler:function(e,t){return Vr.fromEuler(this,e,t)},toString:function(){return"["+Array.prototype.join.call(this.array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this.array)}};var Wr=Object.defineProperty;if(Wr){var jr=Vr.prototype;Wr(jr,"x",{get:function(){return this.array[0]},set:function(e){this.array[0]=e,this._dirty=!0}}),Wr(jr,"y",{get:function(){return this.array[1]},set:function(e){this.array[1]=e,this._dirty=!0}}),Wr(jr,"z",{get:function(){return this.array[2]},set:function(e){this.array[2]=e,this._dirty=!0}}),Wr(jr,"w",{get:function(){return this.array[3]},set:function(e){this.array[3]=e,this._dirty=!0}})}Vr.add=function(e,t,r){return Gr.add(e.array,t.array,r.array),e._dirty=!0,e},Vr.set=function(e,t,r,n,i){Gr.set(e.array,t,r,n,i),e._dirty=!0},Vr.copy=function(e,t){return Gr.copy(e.array,t.array),e._dirty=!0,e},Vr.calculateW=function(e,t){return Gr.calculateW(e.array,t.array),e._dirty=!0,e},Vr.conjugate=function(e,t){return Gr.conjugate(e.array,t.array),e._dirty=!0,e},Vr.identity=function(e){return Gr.identity(e.array),e._dirty=!0,e},Vr.invert=function(e,t){return Gr.invert(e.array,t.array),e._dirty=!0,e},Vr.dot=function(e,t){return Gr.dot(e.array,t.array)},Vr.len=function(e){return Gr.length(e.array)},Vr.lerp=function(e,t,r,n){return Gr.lerp(e.array,t.array,r.array,n),e._dirty=!0,e},Vr.slerp=function(e,t,r,n){return Gr.slerp(e.array,t.array,r.array,n),e._dirty=!0,e},Vr.mul=function(e,t,r){return Gr.multiply(e.array,t.array,r.array),e._dirty=!0,e},Vr.multiply=Vr.mul,Vr.rotateX=function(e,t,r){return Gr.rotateX(e.array,t.array,r),e._dirty=!0,e},Vr.rotateY=function(e,t,r){return Gr.rotateY(e.array,t.array,r),e._dirty=!0,e},Vr.rotateZ=function(e,t,r){return Gr.rotateZ(e.array,t.array,r),e._dirty=!0,e},Vr.setAxisAngle=function(e,t,r){return Gr.setAxisAngle(e.array,t.array,r),e._dirty=!0,e},Vr.normalize=function(e,t){return Gr.normalize(e.array,t.array),e._dirty=!0,e},Vr.sqrLen=function(e){return Gr.sqrLen(e.array)},Vr.squaredLength=Vr.sqrLen,Vr.fromMat3=function(e,t){return Gr.fromMat3(e.array,t.array),e._dirty=!0,e},Vr.setAxes=function(e,t,r,n){return Gr.setAxes(e.array,t.array,r.array,n.array),e._dirty=!0,e},Vr.rotationTo=function(e,t,r){return Gr.rotationTo(e.array,t.array,r.array),e._dirty=!0,e},Vr.fromEuler=function(e,t,r){e._dirty=!0,t=t.array;var n=e.array,i=Math.cos(t[0]/2),a=Math.cos(t[1]/2),o=Math.cos(t[2]/2),s=Math.sin(t[0]/2),u=Math.sin(t[1]/2),l=Math.sin(t[2]/2),r=(r||"XYZ").toUpperCase();switch(r){case"XYZ":n[0]=s*a*o+i*u*l,n[1]=i*u*o-s*a*l,n[2]=i*a*l+s*u*o,n[3]=i*a*o-s*u*l;break;case"YXZ":n[0]=s*a*o+i*u*l,n[1]=i*u*o-s*a*l,n[2]=i*a*l-s*u*o,n[3]=i*a*o+s*u*l;break;case"ZXY":n[0]=s*a*o-i*u*l,n[1]=i*u*o+s*a*l,n[2]=i*a*l+s*u*o,n[3]=i*a*o-s*u*l;break;case"ZYX":n[0]=s*a*o-i*u*l,n[1]=i*u*o+s*a*l,n[2]=i*a*l-s*u*o,n[3]=i*a*o+s*u*l;break;case"YZX":n[0]=s*a*o+i*u*l,n[1]=i*u*o+s*a*l,n[2]=i*a*l-s*u*o,n[3]=i*a*o-s*u*l;break;case"XZY":n[0]=s*a*o-i*u*l,n[1]=i*u*o-s*a*l,n[2]=i*a*l+s*u*o,n[3]=i*a*o+s*u*l}};var Xr=Pt.mat4,qr=0,Kr=At.extend({name:"",position:null,rotation:null,scale:null,worldTransform:null,localTransform:null,autoUpdateLocalTransform:!0,_parent:null,_scene:null,_needsUpdateWorldTransform:!0,_inIterating:!1,__depth:0},function(){this.name||(this.name=(this.type||"NODE")+"_"+qr++),this.position||(this.position=new Ot),this.rotation||(this.rotation=new Vr),this.scale||(this.scale=new Ot(1,1,1)),this.worldTransform=new Kt,this.localTransform=new Kt,this._children=[]},{target:null,invisible:!1,isSkinnedMesh:function(){return!1},isRenderable:function(){return!1},setName:function(e){var t=this._scene;if(t){var r=t._nodeRepository;delete r[this.name],r[e]=this}this.name=e},add:function(e){var t=e._parent;if(t!==this){t&&t.remove(e),e._parent=this,this._children.push(e);var r=this._scene;r&&r!==e.scene&&e.traverse(this._addSelfToScene,this),e._needsUpdateWorldTransform=!0}},remove:function(e){var t=this._children,r=t.indexOf(e);r<0||(t.splice(r,1),e._parent=null,this._scene&&e.traverse(this._removeSelfFromScene,this))},removeAll:function(){for(var e=this._children,t=0;t<e.length;t++)e[t]._parent=null,this._scene&&e[t].traverse(this._removeSelfFromScene,this);this._children=[]},getScene:function(){return this._scene},getParent:function(){return this._parent},_removeSelfFromScene:function(e){e._scene.removeFromScene(e),e._scene=null},_addSelfToScene:function(e){this._scene.addToScene(e),e._scene=this._scene},isAncestor:function(e){for(var t=e._parent;t;){if(t===this)return!0;t=t._parent}return!1},children:function(){return this._children.slice()},childAt:function(e){return this._children[e]},getChildByName:function(e){for(var t=this._children,r=0;r<t.length;r++)if(t[r].name===e)return t[r]},getDescendantByName:function(e){for(var t=this._children,r=0;r<t.length;r++){var n=t[r];if(n.name===e)return n;var i=n.getDescendantByName(e);if(i)return i}},queryNode:function(e){if(e){for(var t=e.split("/"),r=this,n=0;n<t.length;n++){var i=t[n];if(i){for(var a=!1,o=r._children,s=0;s<o.length;s++){var u=o[s];if(u.name===i){r=u,a=!0;break}}if(!a)return}}return r}},getPath:function(e){if(!this._parent)return"/";for(var t=this._parent,r=this.name;t._parent&&(r=t.name+"/"+r,t._parent!=e);)t=t._parent;return!t._parent&&e?null:r},traverse:function(e,t){e.call(t,this);for(var r=this._children,n=0,i=r.length;n<i;n++)r[n].traverse(e,t)},eachChild:function(e,t){for(var r=this._children,n=0,i=r.length;n<i;n++){var a=r[n];e.call(t,a,n)}},setLocalTransform:function(e){Xr.copy(this.localTransform.array,e.array),this.decomposeLocalTransform()},decomposeLocalTransform:function(e){var t=e?null:this.scale;this.localTransform.decomposeMatrix(t,this.rotation,this.position)},setWorldTransform:function(e){Xr.copy(this.worldTransform.array,e.array),this.decomposeWorldTransform()},decomposeWorldTransform:function(){var e=Xr.create();return function(t){var r=this.localTransform,n=this.worldTransform;this._parent?(Xr.invert(e,this._parent.worldTransform.array),Xr.multiply(r.array,e,n.array)):Xr.copy(r.array,n.array);var i=t?null:this.scale;r.decomposeMatrix(i,this.rotation,this.position)}}(),transformNeedsUpdate:function(){return this.position._dirty||this.rotation._dirty||this.scale._dirty},updateLocalTransform:function(){var e=this.position,t=this.rotation,r=this.scale;if(this.transformNeedsUpdate()){var n=this.localTransform.array;Xr.fromRotationTranslation(n,t.array,e.array),Xr.scale(n,n,r.array),t._dirty=!1,r._dirty=!1,e._dirty=!1,this._needsUpdateWorldTransform=!0}},_updateWorldTransformTopDown:function(){var e=this.localTransform.array,t=this.worldTransform.array;this._parent?Xr.multiplyAffine(t,this._parent.worldTransform.array,e):Xr.copy(t,e)},updateWorldTransform:function(){for(var e=this;e&&e.getParent()&&e.getParent().transformNeedsUpdate();)e=e.getParent();e.update()},update:function(e){this.autoUpdateLocalTransform?this.updateLocalTransform():e=!0,(e||this._needsUpdateWorldTransform)&&(this._updateWorldTransformTopDown(),e=!0,this._needsUpdateWorldTransform=!1);for(var t=this._children,r=0,n=t.length;r<n;r++)t[r].update(e)},getBoundingBox:function(){function e(e){return!e.invisible&&e.geometry}var t=new Vt,r=new Kt,n=new Kt;return function(i,a){return a=a||new Vt,i=i||e,this._parent?Kt.invert(n,this._parent.worldTransform):Kt.identity(n),this.traverse(function(e){e.geometry&&e.geometry.boundingBox&&(t.copy(e.geometry.boundingBox),Kt.multiply(r,n,e.worldTransform),t.applyTransform(r),a.union(t))},this,e),a}}(),getWorldPosition:function(e){this.transformNeedsUpdate()&&this.updateWorldTransform();var t=this.worldTransform.array;if(e){var r=e.array;return r[0]=t[12],r[1]=t[13],r[2]=t[14],e}return new Ot(t[12],t[13],t[14])},clone:function(){var e=new this.constructor,t=this._children;e.setName(this.name),e.position.copy(this.position),e.rotation.copy(this.rotation),e.scale.copy(this.scale);for(var r=0;r<t.length;r++)e.add(t[r].clone());return e},rotateAround:function(){var e=new Ot,t=new Kt;return function(r,n,i){e.copy(this.position).subtract(r);var a=this.localTransform;a.identity(),a.translate(r),a.rotate(i,n),t.fromRotationTranslation(this.rotation,e),a.multiply(t),a.scale(this.scale),this.decomposeLocalTransform(),this._needsUpdateWorldTransform=!0}}(),lookAt:function(){var e=new Kt;return function(t,r){e.lookAt(this.position,t,r||this.localTransform.y).invert(),this.setLocalTransform(e),this.target=t}}()}),Yr=Kr.extend(function(){return{color:[1,1,1],intensity:1,castShadow:!0,shadowResolution:512,group:0}},{type:"",clone:function(){var e=Kr.prototype.clone.call(this);return e.color=Array.prototype.slice.call(this.color),e.intensity=this.intensity,e.castShadow=this.castShadow,e.shadowResolution=this.shadowResolution,e}}),Zr=Pt.vec3,Jr=Pt.mat4,Qr=Pt.vec4,$r=function(e,t){this.normal=e||new Ot(0,1,0),this.distance=t||0};$r.prototype={constructor:$r,distanceToPoint:function(e){return Zr.dot(e.array,this.normal.array)-this.distance},projectPoint:function(e,t){t||(t=new Ot);var r=this.distanceToPoint(e);return Zr.scaleAndAdd(t.array,e.array,this.normal.array,-r),t._dirty=!0,t},normalize:function(){var e=1/Zr.len(this.normal.array);Zr.scale(this.normal.array,e),this.distance*=e},intersectFrustum:function(e){for(var t=e.vertices,r=this.normal.array,n=Zr.dot(t[0].array,r)>this.distance,i=1;i<8;i++)if(Zr.dot(t[i].array,r)>this.distance!=n)return!0},intersectLine:function(){var e=Zr.create();return function(t,r,n){var i=this.distanceToPoint(t),a=this.distanceToPoint(r);if(i>0&&a>0||i<0&&a<0)return null;var o=this.normal.array,s=this.distance,u=t.array;Zr.sub(e,r.array,t.array),Zr.normalize(e,e);var l=Zr.dot(o,e);if(0===l)return null;n||(n=new Ot);var c=(Zr.dot(o,u)-s)/l;return Zr.scaleAndAdd(n.array,u,e,-c),n._dirty=!0,n}}(),applyTransform:function(){var e=Jr.create(),t=Qr.create(),r=Qr.create();return r[3]=1,function(n){n=n.array,Zr.scale(r,this.normal.array,this.distance),Qr.transformMat4(r,r,n),this.distance=Zr.dot(r,this.normal.array),Jr.invert(e,n),Jr.transpose(e,e),t[3]=0,Zr.copy(t,this.normal.array),Qr.transformMat4(t,t,e),Zr.copy(this.normal.array,t)}}(),copy:function(e){Zr.copy(this.normal.array,e.normal.array),this.normal._dirty=!0,this.distance=e.distance},clone:function(){var e=new $r;return e.copy(this),e}};var en=Pt.vec3,tn=en.set,rn=en.copy,nn=en.transformMat4,an=Math.min,on=Math.max,sn=function(){this.planes=[];for(var e=0;e<6;e++)this.planes.push(new $r);this.boundingBox=new Vt,this.vertices=[];for(var e=0;e<8;e++)this.vertices[e]=en.fromValues(0,0,0)};sn.prototype={setFromProjection:function(e){var t=this.planes,r=e.array,n=r[0],i=r[1],a=r[2],o=r[3],s=r[4],u=r[5],l=r[6],c=r[7],h=r[8],f=r[9],d=r[10],p=r[11],m=r[12],_=r[13],v=r[14],g=r[15];tn(t[0].normal.array,o-n,c-s,p-h),t[0].distance=-(g-m),t[0].normalize(),tn(t[1].normal.array,o+n,c+s,p+h),t[1].distance=-(g+m),t[1].normalize(),tn(t[2].normal.array,o+i,c+u,p+f),t[2].distance=-(g+_),t[2].normalize(),tn(t[3].normal.array,o-i,c-u,p-f),t[3].distance=-(g-_),t[3].normalize(),tn(t[4].normal.array,o-a,c-l,p-d),t[4].distance=-(g-v),t[4].normalize(),tn(t[5].normal.array,o+a,c+l,p+d),t[5].distance=-(g+v),t[5].normalize();var y=this.boundingBox,x=this.vertices;if(0===g){var T=u/n,E=-v/(d-1),b=-v/(d+1),A=-b/u,S=-E/u;y.min.set(-A*T,-A,b),y.max.set(A*T,A,E),tn(x[0],-A*T,-A,b),tn(x[1],-A*T,A,b),tn(x[2],A*T,-A,b),tn(x[3],A*T,A,b),tn(x[4],-S*T,-S,E),tn(x[5],-S*T,S,E),tn(x[6],S*T,-S,E),tn(x[7],S*T,S,E)}else{var w=(-1-m)/n,C=(1-m)/n,R=(1-_)/u,N=(-1-_)/u,M=(-1-v)/d,L=(1-v)/d;y.min.set(Math.min(w,C),Math.min(N,R),Math.min(L,M)),y.max.set(Math.max(C,w),Math.max(R,N),Math.max(M,L));var P=y.min.array,D=y.max.array;tn(x[0],P[0],P[1],P[2]),tn(x[1],P[0],D[1],P[2]),tn(x[2],D[0],P[1],P[2]),tn(x[3],D[0],D[1],P[2]),tn(x[4],P[0],P[1],D[2]),tn(x[5],P[0],D[1],D[2]),tn(x[6],D[0],P[1],D[2]),tn(x[7],D[0],D[1],D[2])}},getTransformedBoundingBox:function(){var e=en.create();return function(t,r){var n=this.vertices,i=r.array,a=t.min,o=t.max,s=a.array,u=o.array,l=n[0];nn(e,l,i),rn(s,e),rn(u,e);for(var c=1;c<8;c++)l=n[c],nn(e,l,i),s[0]=an(e[0],s[0]),s[1]=an(e[1],s[1]),s[2]=an(e[2],s[2]),u[0]=on(e[0],u[0]),u[1]=on(e[1],u[1]),u[2]=on(e[2],u[2]);return a._dirty=!0,o._dirty=!0,t}}()};var un=Pt.vec3,ln=function(e,t){this.origin=e||new Ot,this.direction=t||new Ot};ln.prototype={constructor:ln,intersectPlane:function(e,t){var r=e.normal.array,n=e.distance,i=this.origin.array,a=this.direction.array,o=un.dot(r,a);if(0===o)return null;t||(t=new Ot);var s=(un.dot(r,i)-n)/o;return un.scaleAndAdd(t.array,i,a,-s),t._dirty=!0,t},mirrorAgainstPlane:function(e){var t=un.dot(e.normal.array,this.direction.array);un.scaleAndAdd(this.direction.array,this.direction.array,e.normal.array,2*-t),this.direction._dirty=!0},distanceToPoint:function(){var e=un.create();return function(t){un.sub(e,t,this.origin.array);var r=un.dot(e,this.direction.array);if(r<0)return un.distance(this.origin.array,t);var n=un.lenSquared(e);return Math.sqrt(n-r*r)}}(),intersectSphere:function(){var e=un.create();return function(t,r,n){var i=this.origin.array,a=this.direction.array;t=t.array,un.sub(e,t,i);var o=un.dot(e,a),s=un.squaredLength(e),u=s-o*o,l=r*r;if(!(u>l)){var c=Math.sqrt(l-u),h=o-c,f=o+c;return n||(n=new Ot),h<0?f<0?null:(un.scaleAndAdd(n.array,i,a,f),n):(un.scaleAndAdd(n.array,i,a,h),n)}}}(),intersectBoundingBox:function(e,t){var r,n,i,a,o,s,u=this.direction.array,l=this.origin.array,c=e.min.array,h=e.max.array,f=1/u[0],d=1/u[1],p=1/u[2];if(f>=0?(r=(c[0]-l[0])*f,n=(h[0]-l[0])*f):(n=(c[0]-l[0])*f,r=(h[0]-l[0])*f),d>=0?(i=(c[1]-l[1])*d,a=(h[1]-l[1])*d):(a=(c[1]-l[1])*d,i=(h[1]-l[1])*d),r>a||i>n)return null;if((i>r||r!==r)&&(r=i),(a<n||n!==n)&&(n=a),p>=0?(o=(c[2]-l[2])*p,s=(h[2]-l[2])*p):(s=(c[2]-l[2])*p,o=(h[2]-l[2])*p),r>s||o>n)return null;if((o>r||r!==r)&&(r=o),(s<n||n!==n)&&(n=s),n<0)return null;var m=r>=0?r:n;return t||(t=new Ot),un.scaleAndAdd(t.array,l,u,m),t},intersectTriangle:function(){var e=un.create(),t=un.create(),r=un.create(),n=un.create();return function(i,a,o,s,u,l){var c=this.direction.array,h=this.origin.array;i=i.array,a=a.array,o=o.array,un.sub(e,a,i),un.sub(t,o,i),un.cross(n,t,c);var f=un.dot(e,n);if(s){if(f>-1e-5)return null}else if(f>-1e-5&&f<1e-5)return null;un.sub(r,h,i);var d=un.dot(n,r)/f;if(d<0||d>1)return null;un.cross(n,e,r);var p=un.dot(c,n)/f;if(p<0||p>1||d+p>1)return null;un.cross(n,e,t);var m=-un.dot(r,n)/f;return m<0?null:(u||(u=new Ot),l&&Ot.set(l,1-d-p,d,p),un.scaleAndAdd(u.array,h,c,m),u)}}(),applyTransform:function(e){Ot.add(this.direction,this.direction,this.origin),Ot.transformMat4(this.origin,this.origin,e),Ot.transformMat4(this.direction,this.direction,e),Ot.sub(this.direction,this.direction,this.origin),Ot.normalize(this.direction,this.direction)},copy:function(e){Ot.copy(this.origin,e.origin),Ot.copy(this.direction,e.direction)},clone:function(){var e=new ln;return e.copy(this),e}};var cn=Pt.vec3,hn=Pt.vec4,fn=Kr.extend(function(){return{projectionMatrix:new Kt,invProjectionMatrix:new Kt,viewMatrix:new Kt,frustum:new sn}},function(){this.update(!0)},{update:function(e){Kr.prototype.update.call(this,e),Kt.invert(this.viewMatrix,this.worldTransform),this.updateProjectionMatrix(),Kt.invert(this.invProjectionMatrix,this.projectionMatrix),this.frustum.setFromProjection(this.projectionMatrix)},setViewMatrix:function(e){Kt.copy(this.viewMatrix,e),Kt.invert(this.worldTransform,e),this.decomposeWorldTransform()},decomposeProjectionMatrix:function(){},setProjectionMatrix:function(e){Kt.copy(this.projectionMatrix,e),Kt.invert(this.invProjectionMatrix,e),this.decomposeProjectionMatrix()},updateProjectionMatrix:function(){},castRay:function(){var e=hn.create();return function(t,r){var n=void 0!==r?r:new ln,i=t.array[0],a=t.array[1];return hn.set(e,i,a,-1,1),hn.transformMat4(e,e,this.invProjectionMatrix.array),hn.transformMat4(e,e,this.worldTransform.array),cn.scale(n.origin.array,e,1/e[3]),hn.set(e,i,a,1,1),hn.transformMat4(e,e,this.invProjectionMatrix.array),hn.transformMat4(e,e,this.worldTransform.array),cn.scale(e,e,1/e[3]),cn.sub(n.direction.array,e,n.origin.array),cn.normalize(n.direction.array,n.direction.array),n.direction._dirty=!0,n.origin._dirty=!0,n}}()}),dn=Pt.mat4,pn=dn.create(),mn=dn.create(),_n={};B.prototype.startCount=function(){this._opaqueCount=0,this._transparentCount=0},B.prototype.add=function(e,t){t?this.transparent[this._transparentCount++]=e:this.opaque[this._opaqueCount++]=e},B.prototype.endCount=function(){this.transparent.length=this._transparentCount,this.opaque.length=this._opaqueCount};var vn=Kr.extend(function(){return{material:null,lights:[],viewBoundingBoxLastFrame:new Vt,shadowUniforms:{},_cameraList:[],_lightUniforms:{},_previousLightNumber:{},_lightNumber:{},_lightProgramKeys:{},_nodeRepository:{},_renderLists:new er(20)}},function(){this._scene=this},{addToScene:function(e){e instanceof fn?(this._cameraList.length>0&&console.warn("Found multiple camera in one scene. Use the fist one."),this._cameraList.push(e)):e instanceof Yr&&this.lights.push(e),e.name&&(this._nodeRepository[e.name]=e)},removeFromScene:function(e){var t;e instanceof fn?(t=this._cameraList.indexOf(e))>=0&&this._cameraList.splice(t,1):e instanceof Yr&&(t=this.lights.indexOf(e))>=0&&this.lights.splice(t,1),e.name&&delete this._nodeRepository[e.name]},getNode:function(e){return this._nodeRepository[e]},setMainCamera:function(e){var t=this._cameraList.indexOf(e);t>=0&&this._cameraList.splice(t,1),this._cameraList.unshift(e)},getMainCamera:function(){return this._cameraList[0]},getLights:function(){return this.lights},updateLights:function(){var e=this.lights;this._previousLightNumber=this._lightNumber;for(var t={},r=0;r<e.length;r++){var n=e[r];if(!n.invisible){var i=n.group;t[i]||(t[i]={}),t[i][n.type]=t[i][n.type]||0,t[i][n.type]++}}this._lightNumber=t;for(var a in t)this._lightProgramKeys[a]=F(t[a]);this._updateLightUniforms()},cloneNode:function(e){function t(e,r){n[e.__uid__]=r;for(var i=0;i<e._children.length;i++){t(e._children[i],r._children[i])}}var r=e.clone(),n={};return t(e,r),r.traverse(function(e){e.skeleton&&(e.skeleton=e.skeleton.clone(n)),e.material&&(e.material=e.material.clone())}),r},updateRenderList:function(e,t){var r=e.__uid__,n=this._renderLists.get(r);n||(n=new B,this._renderLists.put(r,n)),n.startCount(),t&&(this.viewBoundingBoxLastFrame.min.set(1/0,1/0,1/0),this.viewBoundingBoxLastFrame.max.set(-1/0,-1/0,-1/0));var i=this.material&&this.material.transparent||!1;return this._doUpdateRenderList(this,e,i,n,t),n.endCount(),n},getRenderList:function(e){return this._renderLists.get(e.__uid__)},_doUpdateRenderList:function(e,t,r,n,i){if(!e.invisible)for(var a=0;a<e._children.length;a++){var o=e._children[a];if(o.isRenderable()){var s=o.isSkinnedMesh()?pn:o.worldTransform.array,u=o.geometry;dn.multiplyAffine(mn,t.viewMatrix.array,s),(i&&!u.boundingBox||!this.isFrustumCulled(o,t,mn))&&n.add(o,o.material.transparent||r)}o._children.length>0&&this._doUpdateRenderList(o,t,r,n,i)}},isFrustumCulled:function(){var e=new Vt,t=new Kt;return function(r,n,i){var a=r.boundingBox||r.geometry.boundingBox;if(t.array=i,e.transformFrom(a,t),r.castShadow&&this.viewBoundingBoxLastFrame.union(e),r.frustumCulling&&!r.isSkinnedMesh()){if(!e.intersectBoundingBox(n.frustum.boundingBox))return!0;t.array=n.projectionMatrix.array,e.max.array[2]>0&&e.min.array[2]<0&&(e.max.array[2]=-1e-20),e.applyProjection(t);var o=e.min.array,s=e.max.array;if(s[0]<-1||o[0]>1||s[1]<-1||o[1]>1||s[2]<-1||o[2]>1)return!0}return!1}}(),_updateLightUniforms:function(){var e=this.lights;e.sort(U);var t=this._lightUniforms;for(var r in t)for(var n in t[r])t[r][n].value.length=0;for(var i=0;i<e.length;i++){var a=e[i];if(!a.invisible){var r=a.group;for(var n in a.uniformTemplates){var o=a.uniformTemplates[n],s=o.value(a);if(null!=s){t[r]||(t[r]={}),t[r][n]||(t[r][n]={type:"",value:[]});var u=t[r][n];switch(u.type=o.type+"v",o.type){case"1i":case"1f":case"t":u.value.push(s);break;case"2f":case"3f":case"4f":for(var l=0;l<s.length;l++)u.value.push(s[l]);break;default:console.error("Unkown light uniform type "+o.type)}}}}}},getLightGroups:function(){var e=[];for(var t in this._lightNumber)e.push(t);return e},getNumberChangedLightGroups:function(){var e=[];for(var t in this._lightNumber)this.isLightNumberChanged(t)&&e.push(t);return e},isLightNumberChanged:function(e){var t=this._previousLightNumber,r=this._lightNumber;for(var n in r[e]){if(!t[e])return!0;if(r[e][n]!==t[e][n])return!0}for(var n in t[e]){if(!r[e])return!0;if(r[e][n]!==t[e][n])return!0}return!1},getLightsNumbers:function(e){return this._lightNumber[e]},getProgramKey:function(e){return this._lightProgramKeys[e]},setLightUniforms:function(){function e(e,t,r){for(var n in e){var i=e[n];if("tv"===i.type){if(!t.hasUniform(n))continue;for(var a=[],o=0;o<i.value.length;o++){var s=i.value[o],u=t.takeCurrentTextureSlot(r,s);a.push(u)}t.setUniform(r.gl,"1iv",n,a)}else t.setUniform(r.gl,i.type,n,i.value)}}return function(t,r,n){e(this._lightUniforms[r],t,n),e(this.shadowUniforms,t,n)}}(),dispose:function(){this.material=null,this._opaqueList=[],this._transparentList=[],this.lights=[],this._lightUniforms={},this._lightNumber={},this._nodeRepository={}}
}),gn="\n@export clay.standard.chunk.varying\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\nvarying vec3 v_Barycentric;\n#if defined(PARALLAXOCCLUSIONMAP_ENABLED) || defined(NORMALMAP_ENABLED)\nvarying vec3 v_Tangent;\nvarying vec3 v_Bitangent;\n#endif\n#if defined(AOMAP_ENABLED)\nvarying vec2 v_Texcoord2;\n#endif\n#ifdef VERTEX_COLOR\nvarying vec4 v_Color;\n#endif\n@end\n@export clay.standard.chunk.light_header\n#ifdef AMBIENT_LIGHT_COUNT\n@import clay.header.ambient_light\n#endif\n#ifdef AMBIENT_SH_LIGHT_COUNT\n@import clay.header.ambient_sh_light\n#endif\n#ifdef AMBIENT_CUBEMAP_LIGHT_COUNT\n@import clay.header.ambient_cubemap_light\n#endif\n#ifdef POINT_LIGHT_COUNT\n@import clay.header.point_light\n#endif\n#ifdef DIRECTIONAL_LIGHT_COUNT\n@import clay.header.directional_light\n#endif\n#ifdef SPOT_LIGHT_COUNT\n@import clay.header.spot_light\n#endif\n@end\n@export clay.standard.vertex\n#define SHADER_NAME standard\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 worldInverseTranspose : WORLDINVERSETRANSPOSE;\nuniform mat4 world : WORLD;\nuniform vec2 uvRepeat : [1.0, 1.0];\nuniform vec2 uvOffset : [0.0, 0.0];\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\n#if defined(AOMAP_ENABLED)\nattribute vec2 texcoord2 : TEXCOORD_1;\n#endif\nattribute vec3 normal : NORMAL;\nattribute vec4 tangent : TANGENT;\n#ifdef VERTEX_COLOR\nattribute vec4 a_Color : COLOR;\n#endif\nattribute vec3 barycentric;\n@import clay.standard.chunk.varying\n@import clay.chunk.skinning_header\nvoid main()\n{\n vec3 skinnedPosition = position;\n vec3 skinnedNormal = normal;\n vec3 skinnedTangent = tangent.xyz;\n#ifdef SKINNING\n @import clay.chunk.skin_matrix\n skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n skinnedNormal = (skinMatrixWS * vec4(normal, 0.0)).xyz;\n skinnedTangent = (skinMatrixWS * vec4(tangent.xyz, 0.0)).xyz;\n#endif\n gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0);\n v_Texcoord = texcoord * uvRepeat + uvOffset;\n v_WorldPosition = (world * vec4(skinnedPosition, 1.0)).xyz;\n v_Barycentric = barycentric;\n v_Normal = normalize((worldInverseTranspose * vec4(skinnedNormal, 0.0)).xyz);\n#if defined(PARALLAXOCCLUSIONMAP_ENABLED) || defined(NORMALMAP_ENABLED)\n v_Tangent = normalize((worldInverseTranspose * vec4(skinnedTangent, 0.0)).xyz);\n v_Bitangent = normalize(cross(v_Normal, v_Tangent) * tangent.w);\n#endif\n#ifdef VERTEX_COLOR\n v_Color = a_Color;\n#endif\n#if defined(AOMAP_ENABLED)\n v_Texcoord2 = texcoord2;\n#endif\n}\n@end\n@export clay.standard.fragment\n#define PI 3.14159265358979\n#define GLOSSINESS_CHANNEL 0\n#define ROUGHNESS_CHANNEL 0\n#define METALNESS_CHANNEL 1\n@import clay.standard.chunk.varying\nuniform mat4 viewInverse : VIEWINVERSE;\n#ifdef NORMALMAP_ENABLED\nuniform sampler2D normalMap;\n#endif\n#ifdef DIFFUSEMAP_ENABLED\nuniform sampler2D diffuseMap;\n#endif\n#ifdef SPECULARMAP_ENABLED\nuniform sampler2D specularMap;\n#endif\n#ifdef USE_ROUGHNESS\nuniform float roughness : 0.5;\n #ifdef ROUGHNESSMAP_ENABLED\nuniform sampler2D roughnessMap;\n #endif\n#else\nuniform float glossiness: 0.5;\n #ifdef GLOSSINESSMAP_ENABLED\nuniform sampler2D glossinessMap;\n #endif\n#endif\n#ifdef METALNESSMAP_ENABLED\nuniform sampler2D metalnessMap;\n#endif\n#ifdef ENVIRONMENTMAP_ENABLED\nuniform samplerCube environmentMap;\n #ifdef PARALLAX_CORRECTED\nuniform vec3 environmentBoxMin;\nuniform vec3 environmentBoxMax;\n #endif\n#endif\n#ifdef BRDFLOOKUP_ENABLED\nuniform sampler2D brdfLookup;\n#endif\n#ifdef EMISSIVEMAP_ENABLED\nuniform sampler2D emissiveMap;\n#endif\n#ifdef SSAOMAP_ENABLED\nuniform sampler2D ssaoMap;\nuniform vec4 viewport : VIEWPORT;\n#endif\n#ifdef AOMAP_ENABLED\nuniform sampler2D aoMap;\nuniform float aoIntensity;\n#endif\nuniform vec3 color : [1.0, 1.0, 1.0];\nuniform float alpha : 1.0;\n#ifdef ALPHA_TEST\nuniform float alphaCutoff: 0.9;\n#endif\n#ifdef USE_METALNESS\nuniform float metalness : 0.0;\n#else\nuniform vec3 specularColor : [0.1, 0.1, 0.1];\n#endif\nuniform vec3 emission : [0.0, 0.0, 0.0];\nuniform float emissionIntensity: 1;\nuniform float lineWidth : 0.0;\nuniform vec4 lineColor : [0.0, 0.0, 0.0, 0.6];\n#ifdef ENVIRONMENTMAP_PREFILTER\nuniform float maxMipmapLevel: 5;\n#endif\n@import clay.standard.chunk.light_header\n@import clay.util.calculate_attenuation\n@import clay.util.edge_factor\n@import clay.util.rgbm\n@import clay.util.srgb\n@import clay.plugin.compute_shadow_map\n@import clay.util.parallax_correct\n@import clay.util.ACES\nfloat G_Smith(float g, float ndv, float ndl)\n{\n float roughness = 1.0 - g;\n float k = roughness * roughness / 2.0;\n float G1V = ndv / (ndv * (1.0 - k) + k);\n float G1L = ndl / (ndl * (1.0 - k) + k);\n return G1L * G1V;\n}\nvec3 F_Schlick(float ndv, vec3 spec) {\n return spec + (1.0 - spec) * pow(1.0 - ndv, 5.0);\n}\nfloat D_Phong(float g, float ndh) {\n float a = pow(8192.0, g);\n return (a + 2.0) / 8.0 * pow(ndh, a);\n}\nfloat D_GGX(float g, float ndh) {\n float r = 1.0 - g;\n float a = r * r;\n float tmp = ndh * ndh * (a - 1.0) + 1.0;\n return a / (PI * tmp * tmp);\n}\n#ifdef PARALLAXOCCLUSIONMAP_ENABLED\nuniform float parallaxOcclusionScale : 0.02;\nuniform float parallaxMaxLayers : 20;\nuniform float parallaxMinLayers : 5;\nuniform sampler2D parallaxOcclusionMap;\nmat3 transpose(in mat3 inMat)\n{\n vec3 i0 = inMat[0];\n vec3 i1 = inMat[1];\n vec3 i2 = inMat[2];\n return mat3(\n vec3(i0.x, i1.x, i2.x),\n vec3(i0.y, i1.y, i2.y),\n vec3(i0.z, i1.z, i2.z)\n );\n}\nvec2 parallaxUv(vec2 uv, vec3 viewDir)\n{\n float numLayers = mix(parallaxMaxLayers, parallaxMinLayers, abs(dot(vec3(0.0, 0.0, 1.0), viewDir)));\n float layerHeight = 1.0 / numLayers;\n float curLayerHeight = 0.0;\n vec2 deltaUv = viewDir.xy * parallaxOcclusionScale / (viewDir.z * numLayers);\n vec2 curUv = uv;\n float height = 1.0 - texture2D(parallaxOcclusionMap, curUv).r;\n for (int i = 0; i < 30; i++) {\n curLayerHeight += layerHeight;\n curUv -= deltaUv;\n height = 1.0 - texture2D(parallaxOcclusionMap, curUv).r;\n if (height < curLayerHeight) {\n break;\n }\n }\n vec2 prevUv = curUv + deltaUv;\n float next = height - curLayerHeight;\n float prev = 1.0 - texture2D(parallaxOcclusionMap, prevUv).r - curLayerHeight + layerHeight;\n return mix(curUv, prevUv, next / (next - prev));\n}\n#endif\nvoid main() {\n vec4 albedoColor = vec4(color, alpha);\n#ifdef VERTEX_COLOR\n albedoColor *= v_Color;\n#endif\n vec3 eyePos = viewInverse[3].xyz;\n vec3 V = normalize(eyePos - v_WorldPosition);\n vec2 uv = v_Texcoord;\n#if defined(PARALLAXOCCLUSIONMAP_ENABLED) || defined(NORMALMAP_ENABLED)\n mat3 tbn = mat3(v_Tangent, v_Bitangent, v_Normal);\n#endif\n#ifdef PARALLAXOCCLUSIONMAP_ENABLED\n uv = parallaxUv(v_Texcoord, normalize(transpose(tbn) * -V));\n#endif\n#ifdef DIFFUSEMAP_ENABLED\n vec4 texel = texture2D(diffuseMap, uv);\n #ifdef SRGB_DECODE\n texel = sRGBToLinear(texel);\n #endif\n albedoColor.rgb *= texel.rgb;\n #ifdef DIFFUSEMAP_ALPHA_ALPHA\n albedoColor.a *= texel.a;\n #endif\n#endif\n#ifdef USE_METALNESS\n float m = metalness;\n #ifdef METALNESSMAP_ENABLED\n float m2 = texture2D(metalnessMap, uv)[METALNESS_CHANNEL];\n m = clamp(m2 + (m - 0.5) * 2.0, 0.0, 1.0);\n #endif\n vec3 baseColor = albedoColor.rgb;\n albedoColor.rgb = baseColor * (1.0 - m);\n vec3 spec = mix(vec3(0.04), baseColor, m);\n#else\n vec3 spec = specularColor;\n#endif\n#ifdef USE_ROUGHNESS\n float g = 1.0 - roughness;\n #ifdef ROUGHNESSMAP_ENABLED\n float g2 = 1.0 - texture2D(roughnessMap, uv)[ROUGHNESS_CHANNEL];\n g = clamp(g2 + (g - 0.5) * 2.0, 0.0, 1.0);\n #endif\n#else\n float g = glossiness;\n #ifdef GLOSSINESSMAP_ENABLED\n float g2 = texture2D(glossinessMap, uv)[GLOSSINESS_CHANNEL];\n g = clamp(g2 + (g - 0.5) * 2.0, 0.0, 1.0);\n #endif\n#endif\n#ifdef SPECULARMAP_ENABLED\n spec *= sRGBToLinear(texture2D(specularMap, uv)).rgb;\n#endif\n vec3 N = v_Normal;\n#ifdef DOUBLE_SIDED\n if (dot(N, V) < 0.0) {\n N = -N;\n }\n#endif\n#ifdef NORMALMAP_ENABLED\n if (dot(v_Tangent, v_Tangent) > 0.0) {\n vec3 normalTexel = texture2D(normalMap, uv).xyz;\n if (dot(normalTexel, normalTexel) > 0.0) { N = normalTexel * 2.0 - 1.0;\n tbn[1] = -tbn[1];\n N = normalize(tbn * N);\n }\n }\n#endif\n vec3 diffuseTerm = vec3(0.0, 0.0, 0.0);\n vec3 specularTerm = vec3(0.0, 0.0, 0.0);\n float ndv = clamp(dot(N, V), 0.0, 1.0);\n vec3 fresnelTerm = F_Schlick(ndv, spec);\n#ifdef AMBIENT_LIGHT_COUNT\n for(int _idx_ = 0; _idx_ < AMBIENT_LIGHT_COUNT; _idx_++)\n {{\n diffuseTerm += ambientLightColor[_idx_];\n }}\n#endif\n#ifdef AMBIENT_SH_LIGHT_COUNT\n for(int _idx_ = 0; _idx_ < AMBIENT_SH_LIGHT_COUNT; _idx_++)\n {{\n diffuseTerm += calcAmbientSHLight(_idx_, N) * ambientSHLightColor[_idx_];\n }}\n#endif\n#ifdef POINT_LIGHT_COUNT\n#if defined(POINT_LIGHT_SHADOWMAP_COUNT)\n float shadowContribsPoint[POINT_LIGHT_COUNT];\n if(shadowEnabled)\n {\n computeShadowOfPointLights(v_WorldPosition, shadowContribsPoint);\n }\n#endif\n for(int _idx_ = 0; _idx_ < POINT_LIGHT_COUNT; _idx_++)\n {{\n vec3 lightPosition = pointLightPosition[_idx_];\n vec3 lc = pointLightColor[_idx_];\n float range = pointLightRange[_idx_];\n vec3 L = lightPosition - v_WorldPosition;\n float dist = length(L);\n float attenuation = lightAttenuation(dist, range);\n L /= dist;\n vec3 H = normalize(L + V);\n float ndl = clamp(dot(N, L), 0.0, 1.0);\n float ndh = clamp(dot(N, H), 0.0, 1.0);\n float shadowContrib = 1.0;\n#if defined(POINT_LIGHT_SHADOWMAP_COUNT)\n if(shadowEnabled)\n {\n shadowContrib = shadowContribsPoint[_idx_];\n }\n#endif\n vec3 li = lc * ndl * attenuation * shadowContrib;\n diffuseTerm += li;\n specularTerm += li * fresnelTerm * D_Phong(g, ndh);\n }}\n#endif\n#ifdef DIRECTIONAL_LIGHT_COUNT\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n float shadowContribsDir[DIRECTIONAL_LIGHT_COUNT];\n if(shadowEnabled)\n {\n computeShadowOfDirectionalLights(v_WorldPosition, shadowContribsDir);\n }\n#endif\n for(int _idx_ = 0; _idx_ < DIRECTIONAL_LIGHT_COUNT; _idx_++)\n {{\n vec3 L = -normalize(directionalLightDirection[_idx_]);\n vec3 lc = directionalLightColor[_idx_];\n vec3 H = normalize(L + V);\n float ndl = clamp(dot(N, L), 0.0, 1.0);\n float ndh = clamp(dot(N, H), 0.0, 1.0);\n float shadowContrib = 1.0;\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n if(shadowEnabled)\n {\n shadowContrib = shadowContribsDir[_idx_];\n }\n#endif\n vec3 li = lc * ndl * shadowContrib;\n diffuseTerm += li;\n specularTerm += li * fresnelTerm * D_Phong(g, ndh);\n }}\n#endif\n#ifdef SPOT_LIGHT_COUNT\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT)\n float shadowContribsSpot[SPOT_LIGHT_COUNT];\n if(shadowEnabled)\n {\n computeShadowOfSpotLights(v_WorldPosition, shadowContribsSpot);\n }\n#endif\n for(int i = 0; i < SPOT_LIGHT_COUNT; i++)\n {\n vec3 lightPosition = spotLightPosition[i];\n vec3 spotLightDirection = -normalize(spotLightDirection[i]);\n vec3 lc = spotLightColor[i];\n float range = spotLightRange[i];\n float a = spotLightUmbraAngleCosine[i];\n float b = spotLightPenumbraAngleCosine[i];\n float falloffFactor = spotLightFalloffFactor[i];\n vec3 L = lightPosition - v_WorldPosition;\n float dist = length(L);\n float attenuation = lightAttenuation(dist, range);\n L /= dist;\n float c = dot(spotLightDirection, L);\n float falloff;\n falloff = clamp((c - a) /(b - a), 0.0, 1.0);\n falloff = pow(falloff, falloffFactor);\n vec3 H = normalize(L + V);\n float ndl = clamp(dot(N, L), 0.0, 1.0);\n float ndh = clamp(dot(N, H), 0.0, 1.0);\n float shadowContrib = 1.0;\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT)\n if (shadowEnabled)\n {\n shadowContrib = shadowContribsSpot[i];\n }\n#endif\n vec3 li = lc * attenuation * (1.0 - falloff) * shadowContrib * ndl;\n diffuseTerm += li;\n specularTerm += li * fresnelTerm * D_Phong(g, ndh);\n }\n#endif\n vec4 outColor = albedoColor;\n outColor.rgb *= max(diffuseTerm, vec3(0.0));\n outColor.rgb += max(specularTerm, vec3(0.0));\n#ifdef AMBIENT_CUBEMAP_LIGHT_COUNT\n vec3 L = reflect(-V, N);\n float rough2 = clamp(1.0 - g, 0.0, 1.0);\n float bias2 = rough2 * 5.0;\n vec2 brdfParam2 = texture2D(ambientCubemapLightBRDFLookup[0], vec2(rough2, ndv)).xy;\n vec3 envWeight2 = spec * brdfParam2.x + brdfParam2.y;\n vec3 envTexel2;\n for(int _idx_ = 0; _idx_ < AMBIENT_CUBEMAP_LIGHT_COUNT; _idx_++)\n {{\n envTexel2 = RGBMDecode(textureCubeLodEXT(ambientCubemapLightCubemap[_idx_], L, bias2), 8.12);\n outColor.rgb += ambientCubemapLightColor[_idx_] * envTexel2 * envWeight2;\n }}\n#endif\n#ifdef ENVIRONMENTMAP_ENABLED\n vec3 envWeight = g * fresnelTerm;\n vec3 L = reflect(-V, N);\n #ifdef PARALLAX_CORRECTED\n L = parallaxCorrect(L, v_WorldPosition, environmentBoxMin, environmentBoxMax);\n#endif\n #ifdef ENVIRONMENTMAP_PREFILTER\n float rough = clamp(1.0 - g, 0.0, 1.0);\n float bias = rough * maxMipmapLevel;\n vec3 envTexel = decodeHDR(textureCubeLodEXT(environmentMap, L, bias)).rgb;\n #ifdef BRDFLOOKUP_ENABLED\n vec2 brdfParam = texture2D(brdfLookup, vec2(rough, ndv)).xy;\n envWeight = spec * brdfParam.x + brdfParam.y;\n #endif\n #else\n vec3 envTexel = textureCube(environmentMap, L).xyz;\n #endif\n outColor.rgb += envTexel * envWeight;\n#endif\n float aoFactor = 1.0;\n#ifdef SSAOMAP_ENABLED\n aoFactor = min(texture2D(ssaoMap, (gl_FragCoord.xy - viewport.xy) / viewport.zw).r, aoFactor);\n#endif\n#ifdef AOMAP_ENABLED\n aoFactor = min(1.0 - clamp((1.0 - texture2D(aoMap, v_Texcoord2).r) * aoIntensity, 0.0, 1.0), aoFactor);\n#endif\n outColor.rgb *= aoFactor;\n vec3 lEmission = emission;\n#ifdef EMISSIVEMAP_ENABLED\n lEmission *= texture2D(emissiveMap, uv).rgb;\n#endif\n outColor.rgb += lEmission * emissionIntensity;\n if(lineWidth > 0.)\n {\n outColor.rgb = mix(outColor.rgb, lineColor.rgb, (1.0 - edgeFactor(lineWidth)) * lineColor.a);\n }\n#ifdef ALPHA_TEST\n if (outColor.a < alphaCutoff) {\n discard;\n }\n#endif\n#ifdef TONEMAPPING\n outColor.rgb = ACESToneMapping(outColor.rgb);\n#endif\n#ifdef SRGB_ENCODE\n outColor = linearTosRGB(outColor);\n#endif\n gl_FragColor = encodeHDR(outColor);\n}\n@end\n@export clay.standardMR.vertex\n@import clay.standard.vertex\n@end\n@export clay.standardMR.fragment\n#define USE_METALNESS\n#define USE_ROUGHNESS\n@import clay.standard.fragment\n@end";L.import(gn);var yn,xn=["diffuseMap","normalMap","roughnessMap","metalnessMap","emissiveMap","environmentMap","brdfLookup","ssaoMap","aoMap"],Tn=["color","emission","emissionIntensity","alpha","roughness","metalness","uvRepeat","uvOffset","aoIntensity","alphaCutoff"],En=["linear","encodeRGBM","decodeRGBM","doubleSided","alphaTest","roughnessChannel","metalnessChannel","environmentMapPrefiltered"],bn={roughnessChannel:"ROUGHNESS_CHANNEL",metalnessChannel:"METALNESS_CHANNEL"},An={linear:"SRGB_DECODE",encodeRGBM:"RGBM_ENCODE",decodeRGBM:"RGBM_DECODE",doubleSided:"DOUBLE_SIDED",alphaTest:"ALPHA_TEST",environmentMapPrefiltered:"ENVIRONMENTMAP_PREFILTER"},Sn=sr.extend(function(){return yn||(yn=new L(L.source("clay.standard.vertex"),L.source("clay.standard.fragment"))),{shader:yn}},function(e){bt.extend(this,e),bt.defaults(this,{color:[1,1,1],emission:[0,0,0],emissionIntensity:0,roughness:.5,metalness:0,alpha:1,alphaTest:!1,alphaCutoff:.9,doubleSided:!1,uvRepeat:[1,1],uvOffset:[0,0],aoIntensity:1,environmentMapPrefiltered:!1,linear:!1,encodeRGBM:!1,decodeRGBM:!1,roughnessChannel:0,metalnessChannel:1}),this.define("fragment","USE_METALNESS"),this.define("fragment","USE_ROUGHNESS")},{clone:function(){var e=new Sn({name:this.name});return xn.forEach(function(t){this[t]&&(e[t]=this[t])},this),Tn.concat(En).forEach(function(t){e[t]=this[t]},this),e}});Tn.forEach(function(e){Object.defineProperty(Sn.prototype,e,{get:function(){return this.get(e)},set:function(t){this.setUniform(e,t)}})}),xn.forEach(function(e){Object.defineProperty(Sn.prototype,e,{get:function(){return this.get(e)},set:function(t){this.setUniform(e,t)}})}),En.forEach(function(e){var t="_"+e;Object.defineProperty(Sn.prototype,e,{get:function(){return this[t]},set:function(r){if(this[t]=r,e in bn){var n=bn[e];this.define("fragment",n,r)}else{var n=An[e];r?this.define("fragment",n):this.undefine("fragment",n)}}})}),Object.defineProperty(Sn.prototype,"environmentBox",{get:function(){var e=this._environmentBox;return e&&(e.min.setArray(this.get("environmentBoxMin")),e.max.setArray(this.get("environmentBoxMax"))),e},set:function(e){this._environmentBox=e;var t=this.uniforms=this.uniforms||{};t.environmentBoxMin=t.environmentBoxMin||{value:null},t.environmentBoxMax=t.environmentBoxMax||{value:null},e&&(this.setUniform("environmentBoxMin",e.min.array),this.setUniform("environmentBoxMax",e.max.array)),e?this.define("fragment","PARALLAX_CORRECTED"):this.undefine("fragment","PARALLAX_CORRECTED")}});var wn=Kr.extend({material:null,geometry:null,mode:Ct.TRIANGLES,_renderInfo:null},{__program:null,lightGroup:0,renderOrder:0,culling:!0,cullFace:Ct.BACK,frontFace:Ct.CCW,frustumCulling:!0,receiveShadow:!0,castShadow:!0,ignorePicking:!1,ignorePreZ:!1,ignoreGBuffer:!1,isRenderable:function(){return this.geometry&&this.material&&this.material.shader&&!this.invisible&&this.geometry.vertexCount>0},beforeRender:function(e){},afterRender:function(e,t){},getBoundingBox:function(e,t){return t=Kr.prototype.getBoundingBox.call(this,e,t),this.geometry&&this.geometry.boundingBox&&t.union(this.geometry.boundingBox),t},clone:function(){var e=["castShadow","receiveShadow","mode","culling","cullFace","frontFace","frustumCulling","renderOrder","lineWidth","ignorePicking","ignorePreZ","ignoreGBuffer"];return function(){var t=Kr.prototype.clone.call(this);t.geometry=this.geometry,t.material=this.material;for(var r=0;r<e.length;r++){var n=e[r];t[n]!==this[n]&&(t[n]=this[n])}return t}}()});wn.POINTS=Ct.POINTS,wn.LINES=Ct.LINES,wn.LINE_LOOP=Ct.LINE_LOOP,wn.LINE_STRIP=Ct.LINE_STRIP,wn.TRIANGLES=Ct.TRIANGLES,wn.TRIANGLE_STRIP=Ct.TRIANGLE_STRIP,wn.TRIANGLE_FAN=Ct.TRIANGLE_FAN,wn.BACK=Ct.BACK,wn.FRONT=Ct.FRONT,wn.FRONT_AND_BACK=Ct.FRONT_AND_BACK,wn.CW=Ct.CW,wn.CCW=Ct.CCW;var Cn={};Cn.isPowerOfTwo=function(e){return 0==(e&e-1)},Cn.nextPowerOfTwo=function(e){return e--,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,++e},Cn.nearestPowerOfTwo=function(e){return Math.pow(2,Math.round(Math.log(e)/Math.LN2))};var Rn=Cn.isPowerOfTwo,Nn=Qt.extend(function(){return{image:null,pixels:null,mipmaps:[],convertToPOT:!1}},{textureType:"texture2D",update:function(e){var t=e.gl;t.bindTexture(t.TEXTURE_2D,this._cache.get("webgl_texture")),this.updateCommon(e);var r=this.format,n=this.type,i=!(!this.convertToPOT||this.mipmaps.length||!this.image||this.wrapS!==Qt.REPEAT&&this.wrapT!==Qt.REPEAT||!this.NPOT);t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,i?this.wrapS:this.getAvailableWrapS()),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,i?this.wrapT:this.getAvailableWrapT()),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,i?this.magFilter:this.getAvailableMagFilter()),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,i?this.minFilter:this.getAvailableMinFilter());var a=e.getGLExtension("EXT_texture_filter_anisotropic");if(a&&this.anisotropic>1&&t.texParameterf(t.TEXTURE_2D,a.TEXTURE_MAX_ANISOTROPY_EXT,this.anisotropic),36193===n){e.getGLExtension("OES_texture_half_float")||(n=Ct.FLOAT)}if(this.mipmaps.length)for(var o=this.width,s=this.height,u=0;u<this.mipmaps.length;u++){var l=this.mipmaps[u];this._updateTextureData(t,l,u,o,s,r,n,!1),o/=2,s/=2}else this._updateTextureData(t,this,0,this.width,this.height,r,n,i),!this.useMipmap||this.NPOT&&!i||t.generateMipmap(t.TEXTURE_2D);t.bindTexture(t.TEXTURE_2D,null)},_updateTextureData:function(e,t,r,n,i,a,o,s){if(t.image){var u=t.image;s&&(this._potCanvas=H(this,this._potCanvas),u=this._potCanvas),e.texImage2D(e.TEXTURE_2D,r,a,a,o,u)}else a<=Qt.COMPRESSED_RGBA_S3TC_DXT5_EXT&&a>=Qt.COMPRESSED_RGB_S3TC_DXT1_EXT?e.compressedTexImage2D(e.TEXTURE_2D,r,a,n,i,0,t.pixels):e.texImage2D(e.TEXTURE_2D,r,a,n,i,0,a,o,t.pixels)},generateMipmap:function(e){var t=e.gl;this.useMipmap&&!this.NPOT&&(t.bindTexture(t.TEXTURE_2D,this._cache.get("webgl_texture")),t.generateMipmap(t.TEXTURE_2D))},isPowerOfTwo:function(){return Rn(this.width)&&Rn(this.height)},isRenderable:function(){return this.image?"CANVAS"===this.image.nodeName||"VIDEO"===this.image.nodeName||this.image.complete:!(!this.width||!this.height)},bind:function(e){e.gl.bindTexture(e.gl.TEXTURE_2D,this.getWebGLTexture(e))},unbind:function(e){e.gl.bindTexture(e.gl.TEXTURE_2D,null)},load:function(e,t){var r=new Image;t&&(r.crossOrigin=t);var n=this;return r.onload=function(){n.dirty(),n.trigger("success",n),r.onload=null},r.onerror=function(){n.trigger("error",n),r.onerror=null},r.src=e,this.image=r,this}});Object.defineProperty(Nn.prototype,"width",{get:function(){return this.image?this.image.width:this._width},set:function(e){this.image?console.warn("Texture from image can't set width"):(this._width!==e&&this.dirty(),this._width=e)}}),Object.defineProperty(Nn.prototype,"height",{get:function(){return this.image?this.image.height:this._height},set:function(e){this.image?console.warn("Texture from image can't set height"):(this._height!==e&&this.dirty(),this._height=e)}});var Mn=wn.extend({skeleton:null,joints:null,useSkinMatricesTexture:!1},function(){this.joints||(this.joints=[])},{isSkinnedMesh:function(){return!!(this.skeleton&&this.joints&&this.joints.length>0)},getSkinMatricesTexture:function(){return this._skinMatricesTexture=this._skinMatricesTexture||new Nn({type:Ct.FLOAT,minFilter:Ct.NEAREST,magFilter:Ct.NEAREST,useMipmap:!1,flipY:!1}),this._skinMatricesTexture},clone:function(){var e=wn.prototype.clone.call(this);return e.skeleton=this.skeleton,this.joints&&(e.joints=this.joints.slice()),e}});Mn.POINTS=Ct.POINTS,Mn.LINES=Ct.LINES,Mn.LINE_LOOP=Ct.LINE_LOOP,Mn.LINE_STRIP=Ct.LINE_STRIP,Mn.TRIANGLES=Ct.TRIANGLES,Mn.TRIANGLE_STRIP=Ct.TRIANGLE_STRIP,Mn.TRIANGLE_FAN=Ct.TRIANGLE_FAN,Mn.BACK=Ct.BACK,Mn.FRONT=Ct.FRONT,Mn.FRONT_AND_BACK=Ct.FRONT_AND_BACK,Mn.CW=Ct.CW,Mn.CCW=Ct.CCW;var Ln={};z.prototype.get=function(e){var t=e;if(this._pool[t])return this._pool[t];var r=Ln[e];if(!r)return void console.error('Shader "'+e+'" is not in the library');var n=new L(r.vertex,r.fragment);return this._pool[t]=n,n},z.prototype.clear=function(){this._pool={}};var Pn=new z,Dn={createLibrary:function(){return new z},get:function(){return Pn.get.apply(Pn,arguments)},template:G,clear:function(){return Pn.clear()}},On=At.extend({name:"",index:-1,node:null}),In=Pt.quat,Fn=Pt.vec3,Bn=Pt.mat4,Un=At.extend(function(){return{relativeRootNode:null,name:"",joints:[],_clips:[],_invBindPoseMatricesArray:null,_jointMatricesSubArrays:[],_skinMatricesArray:null,_skinMatricesSubArrays:[],_subSkinMatricesArray:{}}},{addClip:function(e,t){for(var r=0;r<this._clips.length;r++)if(this._clips[r].clip===e)return;for(var n=[],r=0;r<this.joints.length;r++)n[r]=-1;for(var r=0;r<e.tracks.length;r++)for(var i=0;i<this.joints.length;i++){var a=this.joints[i],o=e.tracks[r],s=a.name;if(t&&(s=t[s]),o.name===s){n[i]=r;break}}return this._clips.push({maps:n,clip:e}),this._clips.length-1},removeClip:function(e){for(var t=-1,r=0;r<this._clips.length;r++)if(this._clips[r].clip===e){t=r;break}t>0&&this._clips.splice(t,1)},removeClipsAll:function(){this._clips=[]},getClip:function(e){if(this._clips[e])return this._clips[e].clip},getClipNumber:function(){return this._clips.length},updateJointMatrices:function(){var e=Bn.create();return function(){this._invBindPoseMatricesArray=new Float32Array(16*this.joints.length),this._skinMatricesArray=new Float32Array(16*this.joints.length);for(var t=0;t<this.joints.length;t++){var r=this.joints[t];Bn.copy(e,r.node.worldTransform.array),Bn.invert(e,e);for(var n=16*t,i=0;i<16;i++)this._invBindPoseMatricesArray[n+i]=e[i]}this.updateMatricesSubArrays()}}(),setJointMatricesArray:function(e){this._invBindPoseMatricesArray=e,this._skinMatricesArray=new Float32Array(e.length),this.updateMatricesSubArrays()},updateMatricesSubArrays:function(){for(var e=0;e<this.joints.length;e++)this._jointMatricesSubArrays[e]=this._invBindPoseMatricesArray.subarray(16*e,16*(e+1)),this._skinMatricesSubArrays[e]=this._skinMatricesArray.subarray(16*e,16*(e+1))},update:function(){this._setPose();for(var e=0;e<this.joints.length;e++){var t=this.joints[e];Bn.multiply(this._skinMatricesSubArrays[e],t.node.worldTransform.array,this._jointMatricesSubArrays[e])}},getSubSkinMatrices:function(e,t){var r=this._subSkinMatricesArray[e];r||(r=this._subSkinMatricesArray[e]=new Float32Array(16*t.length));for(var n=0,i=0;i<t.length;i++)for(var a=t[i],o=0;o<16;o++)r[n++]=this._skinMatricesArray[16*a+o];return r},_setPose:function(){if(this._clips[0])for(var e=this._clips[0].clip,t=this._clips[0].maps,r=0;r<this.joints.length;r++){var n=this.joints[r];if(-1!==t[r]){var i=e.tracks[t[r]];i.channels.position&&Fn.copy(n.node.position.array,i.position),i.channels.rotation&&In.copy(n.node.rotation.array,i.rotation),i.channels.scale&&Fn.copy(n.node.scale.array,i.scale),n.node.position._dirty=!0,n.node.rotation._dirty=!0,n.node.scale._dirty=!0}}},clone:function(e){var t=new Un;t.name=this.name;for(var r=0;r<this.joints.length;r++){var n=new On,i=this.joints[r];if(n.name=i.name,n.index=i.index,e){var a=e[i.node.__uid__];a||console.warn("Can't find node"),n.node=a||i.node}else n.node=i.node;t.joints.push(n)}if(this._invBindPoseMatricesArray){var o=this._invBindPoseMatricesArray.length;t._invBindPoseMatricesArray=new Float32Array(o);for(var r=0;r<o;r++)t._invBindPoseMatricesArray[r]=this._invBindPoseMatricesArray[r];t._skinMatricesArray=new Float32Array(o),t.updateMatricesSubArrays()}return t.update(),t}}),kn=fn.extend({fov:50,aspect:1,near:.1,far:2e3},{updateProjectionMatrix:function(){var e=this.fov/180*Math.PI;this.projectionMatrix.perspective(e,this.aspect,this.near,this.far)},decomposeProjectionMatrix:function(){var e=this.projectionMatrix.array,t=2*Math.atan(1/e[5]);this.fov=t/Math.PI*180,this.aspect=e[5]/e[0],this.near=e[14]/(e[10]-1),this.far=e[14]/(e[10]+1)},clone:function(){var e=fn.prototype.clone.call(this);return e.fov=this.fov,e.aspect=this.aspect,e.near=this.near,e.far=this.far,e}}),Hn=fn.extend({left:-1,right:1,near:-1,far:1,top:1,bottom:-1},{updateProjectionMatrix:function(){this.projectionMatrix.ortho(this.left,this.right,this.bottom,this.top,this.near,this.far)},decomposeProjectionMatrix:function(){var e=this.projectionMatrix.array;this.left=(-1-e[12])/e[0],this.right=(1-e[12])/e[0],this.top=(1-e[13])/e[5],this.bottom=(-1-e[13])/e[5],this.near=-(-1-e[14])/e[10],this.far=-(1-e[14])/e[10]},clone:function(){var e=fn.prototype.clone.call(this);return e.left=this.left,e.right=this.right,e.near=this.near,e.far=this.far,e.top=this.top,e.bottom=this.bottom,e}}),zn={linear:function(e){return e},quadraticIn:function(e){return e*e},quadraticOut:function(e){return e*(2-e)},quadraticInOut:function(e){return(e*=2)<1?.5*e*e:-.5*(--e*(e-2)-1)},cubicIn:function(e){return e*e*e},cubicOut:function(e){return--e*e*e+1},cubicInOut:function(e){return(e*=2)<1?.5*e*e*e:.5*((e-=2)*e*e+2)},quarticIn:function(e){return e*e*e*e},quarticOut:function(e){return 1- --e*e*e*e},quarticInOut:function(e){return(e*=2)<1?.5*e*e*e*e:-.5*((e-=2)*e*e*e-2)},quinticIn:function(e){return e*e*e*e*e},quinticOut:function(e){return--e*e*e*e*e+1},quinticInOut:function(e){return(e*=2)<1?.5*e*e*e*e*e:.5*((e-=2)*e*e*e*e+2)},sinusoidalIn:function(e){return 1-Math.cos(e*Math.PI/2)},sinusoidalOut:function(e){return Math.sin(e*Math.PI/2)},sinusoidalInOut:function(e){return.5*(1-Math.cos(Math.PI*e))},exponentialIn:function(e){return 0===e?0:Math.pow(1024,e-1)},exponentialOut:function(e){return 1===e?1:1-Math.pow(2,-10*e)},exponentialInOut:function(e){return 0===e?0:1===e?1:(e*=2)<1?.5*Math.pow(1024,e-1):.5*(2-Math.pow(2,-10*(e-1)))},circularIn:function(e){return 1-Math.sqrt(1-e*e)},circularOut:function(e){return Math.sqrt(1- --e*e)},circularInOut:function(e){return(e*=2)<1?-.5*(Math.sqrt(1-e*e)-1):.5*(Math.sqrt(1-(e-=2)*e)+1)},elasticIn:function(e){var t,r=.1;return 0===e?0:1===e?1:(!r||r<1?(r=1,t=.1):t=.4*Math.asin(1/r)/(2*Math.PI),-r*Math.pow(2,10*(e-=1))*Math.sin((e-t)*(2*Math.PI)/.4))},elasticOut:function(e){var t,r=.1;return 0===e?0:1===e?1:(!r||r<1?(r=1,t=.1):t=.4*Math.asin(1/r)/(2*Math.PI),r*Math.pow(2,-10*e)*Math.sin((e-t)*(2*Math.PI)/.4)+1)},elasticInOut:function(e){var t,r=.1;return 0===e?0:1===e?1:(!r||r<1?(r=1,t=.1):t=.4*Math.asin(1/r)/(2*Math.PI),(e*=2)<1?r*Math.pow(2,10*(e-=1))*Math.sin((e-t)*(2*Math.PI)/.4)*-.5:r*Math.pow(2,-10*(e-=1))*Math.sin((e-t)*(2*Math.PI)/.4)*.5+1)},backIn:function(e){var t=1.70158;return e*e*((t+1)*e-t)},backOut:function(e){var t=1.70158;return--e*e*((t+1)*e+t)+1},backInOut:function(e){var t=2.5949095;return(e*=2)<1?e*e*((t+1)*e-t)*.5:.5*((e-=2)*e*((t+1)*e+t)+2)},bounceIn:function(e){return 1-zn.bounceOut(1-e)},bounceOut:function(e){return e<1/2.75?7.5625*e*e:e<2/2.75?7.5625*(e-=1.5/2.75)*e+.75:e<2.5/2.75?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375},bounceInOut:function(e){return e<.5?.5*zn.bounceIn(2*e):.5*zn.bounceOut(2*e-1)+.5}},Gn=function(e){e=e||{},this.name=e.name||"",this.target=e.target,this.life=e.life||1e3,this.delay=e.delay||0,this.gap=e.gap||0,this.playbackRate=e.playbackRate||1,this._initialized=!1,this._elapsedTime=0,this._loop=null!=e.loop&&e.loop,this.setLoop(this._loop),null!=e.easing&&this.setEasing(e.easing),this.onframe=e.onframe||V,this.onfinish=e.onfinish||V,this.onrestart=e.onrestart||V,this._paused=!1};Gn.prototype={gap:0,life:0,delay:0,setLoop:function(e){this._loop=e,e&&(this._loopRemained="number"==typeof e?e:1/0)},setEasing:function(e){"string"==typeof e&&(e=zn[e]),this.easing=e},step:function(e,t,r){if(this._initialized||(this._startTime=e+this.delay,this._initialized=!0),null!=this._currentTime&&(t=e-this._currentTime),this._currentTime=e,this._paused)return"paused";if(!(e<this._startTime)){this._elapse(e,t);var n=Math.min(this._elapsedTime/this.life,1);if(!(n<0)){var i;return i=this.easing?this.easing(n):n,r||this.fire("frame",i),1===n?this._loop&&this._loopRemained>0?(this._restartInLoop(e),this._loopRemained--,"restart"):(this._needsRemove=!0,"finish"):null}}},setTime:function(e){return this.step(e+this._startTime)},restart:function(e){var t=0;e&&(this._elapse(e),t=this._elapsedTime%this.life),e=e||Date.now(),this._startTime=e-t+this.delay,this._elapsedTime=0,this._needsRemove=!1,this._paused=!1},getElapsedTime:function(){return this._elapsedTime},_restartInLoop:function(e){this._startTime=e+this.gap,this._elapsedTime=0},_elapse:function(e,t){this._elapsedTime+=t*this.playbackRate},fire:function(e,t){var r="on"+e;this[r]&&this[r](this.target,t)},clone:function(){var e=new this.constructor;return e.name=this.name,e._loop=this._loop,e._loopRemained=this._loopRemained,e.life=this.life,e.gap=this.gap,e.delay=this.delay,e},pause:function(){this._paused=!0},resume:function(){this._paused=!1}},Gn.prototype.constructor=Gn;var Vn=Pt.quat,Wn=Pt.vec3,jn=function(e){e=e||{},Gn.call(this,e),this.tracks=e.tracks||[],this.calcLifeFromTracks()};jn.prototype=Object.create(Gn.prototype),jn.prototype.constructor=jn,jn.prototype.step=function(e,t,r){var n=Gn.prototype.step.call(this,e,t,!0);if("finish"!==n){var e=this.getElapsedTime();this._range&&(e=this._range[0]+e),this.setTime(e)}return r||"paused"===n||this.fire("frame"),n},jn.prototype.setRange=function(e){this.calcLifeFromTracks(),this._range=e,e&&(e[1]=Math.min(e[1],this.life),e[0]=Math.min(e[0],this.life),this.life=e[1]-e[0])},jn.prototype.setTime=function(e){for(var t=0;t<this.tracks.length;t++)this.tracks[t].setTime(e)},jn.prototype.calcLifeFromTracks=function(){this.life=0;for(var e=0;e<this.tracks.length;e++)this.life=Math.max(this.life,this.tracks[e].getMaxTime())},jn.prototype.addTrack=function(e){this.tracks.push(e),this.calcLifeFromTracks()},jn.prototype.removeTarck=function(e){var t=this.tracks.indexOf(e);t>=0&&this.tracks.splice(t,1)},jn.prototype.getSubClip=function(e,t,r){for(var n=new jn({name:this.name}),i=0;i<this.tracks.length;i++){var a=this.tracks[i].getSubTrack(e,t);n.addTrack(a)}return void 0!==r&&n.setLoop(r),n.life=t-e,n},jn.prototype.blend1D=function(e,t,r){for(var n=0;n<this.tracks.length;n++){
var i=e.tracks[n],a=t.tracks[n];this.tracks[n].blend1D(i,a,r)}},jn.prototype.additiveBlend=function(e,t){for(var r=0;r<this.tracks.length;r++){var n=e.tracks[r],i=t.tracks[r];this.tracks[r].additiveBlend(n,i)}},jn.prototype.subtractiveBlend=function(e,t){for(var r=0;r<this.tracks.length;r++){var n=e.tracks[r],i=t.tracks[r];this.tracks[r].subtractiveBlend(n,i)}},jn.prototype.blend2D=function(e,t,r,n,i){for(var a=0;a<this.tracks.length;a++){var o=e.tracks[a],s=t.tracks[a],u=r.tracks[a];this.tracks[a].blend2D(o,s,u,n,i)}},jn.prototype.copy=function(e){for(var t=0;t<this.tracks.length;t++){var r=e.tracks[t],n=this.tracks[t];Wn.copy(n.position,r.position),Wn.copy(n.scale,r.scale),Vn.copy(n.rotation,r.rotation)}},jn.prototype.clone=function(){for(var e=Gn.prototype.clone.call(this),t=0;t<this.tracks.length;t++)e.addTrack(this.tracks[t].clone());return e.life=this.life,e};var Xn=Pt.quat,qn=Pt.vec3,Kn=function(e){e=e||{},this.name=e.name||"",this.target=e.target||null,this.position=qn.create(),this.rotation=Xn.create(),this.scale=qn.fromValues(1,1,1),this.channels={time:null,position:null,rotation:null,scale:null},this._cacheKey=0,this._cacheTime=0};Kn.prototype.setTime=function(e){if(this.channels.time){var t=this.channels,r=t.time.length,n=-1;if(1===r)return t.rotation&&Xn.copy(this.rotation,t.rotation),t.position&&qn.copy(this.position,t.position),void(t.scale&&qn.copy(this.scale,t.scale));if(e<=t.time[0])e=t.time[0],n=0;else if(e>=t.time[r-1])e=t.time[r-1],n=r-2;else if(e<this._cacheTime){for(var i=Math.min(r-1,this._cacheKey+1),a=i;a>=0;a--)if(t.time[a-1]<=e&&t.time[a]>e){n=a-1;break}}else for(var a=this._cacheKey;a<r-1;a++)if(t.time[a]<=e&&t.time[a+1]>e){n=a;break}if(n>-1){this._cacheKey=n,this._cacheTime=e;var o=n,s=n+1,u=t.time[o],l=t.time[s],c=l-u,h=0===c?0:(e-u)/c;t.rotation&&j(this.rotation,t.rotation,t.rotation,h,4*o,4*s),t.position&&W(this.position,t.position,t.position,h,3*o,3*s),t.scale&&W(this.scale,t.scale,t.scale,h,3*o,3*s)}n===r-2&&(this._cacheKey=0,this._cacheTime=0),this.updateTarget()}},Kn.prototype.updateTarget=function(){var e=this.channels;this.target&&(e.position&&this.target.position.setArray(this.position),e.rotation&&this.target.rotation.setArray(this.rotation),e.scale&&this.target.scale.setArray(this.scale))},Kn.prototype.getMaxTime=function(){return this.channels.time[this.channels.time.length-1]},Kn.prototype.getSubTrack=function(e,t){var r=new Kn({name:this.name}),n=this.channels.time[0];e=Math.min(Math.max(e,n),this.life),t=Math.min(Math.max(t,n),this.life);var i=this._findRange(e),a=this._findRange(t),o=a[0]-i[0]+1;0===i[1]&&0===a[1]&&(o-=1),this.channels.rotation&&(r.channels.rotation=new Float32Array(4*o)),this.channels.position&&(r.channels.position=new Float32Array(3*o)),this.channels.scale&&(r.channels.scale=new Float32Array(3*o)),this.channels.time&&(r.channels.time=new Float32Array(o)),this.setTime(e);for(var s=0;s<3;s++)r.channels.rotation[s]=this.rotation[s],r.channels.position[s]=this.position[s],r.channels.scale[s]=this.scale[s];r.channels.time[0]=0,r.channels.rotation[3]=this.rotation[3];for(var s=1;s<o-1;s++){for(var u,l=0;l<3;l++)u=i[0]+s,r.channels.rotation[4*s+l]=this.channels.rotation[4*u+l],r.channels.position[3*s+l]=this.channels.position[3*u+l],r.channels.scale[3*s+l]=this.channels.scale[3*u+l];r.channels.time[s]=this.channels.time[u]-e,r.channels.rotation[4*s+3]=this.channels.rotation[4*u+3]}this.setTime(t);for(var s=0;s<3;s++)r.channels.rotation[4*(o-1)+s]=this.rotation[s],r.channels.position[3*(o-1)+s]=this.position[s],r.channels.scale[3*(o-1)+s]=this.scale[s];return r.channels.time[o-1]=t-e,r.channels.rotation[4*(o-1)+3]=this.rotation[3],r.life=t-e,r},Kn.prototype._findRange=function(e){for(var t=this.channels,r=t.time.length,n=-1,i=0;i<r-1;i++)t.time[i]<=e&&t.time[i+1]>e&&(n=i);var a=0;if(n>=0)var o=t.time[n],s=t.time[n+1],a=(e-o)/(s-o);return[n,a]},Kn.prototype.blend1D=function(e,t,r){qn.lerp(this.position,e.position,t.position,r),qn.lerp(this.scale,e.scale,t.scale,r),Xn.slerp(this.rotation,e.rotation,t.rotation,r)},Kn.prototype.blend2D=function(){var e=Xn.create(),t=Xn.create();return function(r,n,i,a,o){var s=1-a-o;this.position[0]=r.position[0]*s+n.position[0]*a+i.position[0]*o,this.position[1]=r.position[1]*s+n.position[1]*a+i.position[1]*o,this.position[2]=r.position[2]*s+n.position[2]*a+i.position[2]*o,this.scale[0]=r.scale[0]*s+n.scale[0]*a+i.scale[0]*o,this.scale[1]=r.scale[1]*s+n.scale[1]*a+i.scale[1]*o,this.scale[2]=r.scale[2]*s+n.scale[2]*a+i.scale[2]*o;var u=a+o;0===u?Xn.copy(this.rotation,r.rotation):(Xn.slerp(e,r.rotation,n.rotation,u),Xn.slerp(t,r.rotation,i.rotation,u),Xn.slerp(this.rotation,e,t,o/u))}}(),Kn.prototype.additiveBlend=function(e,t){qn.add(this.position,e.position,t.position),qn.add(this.scale,e.scale,t.scale),Xn.multiply(this.rotation,t.rotation,e.rotation)},Kn.prototype.subtractiveBlend=function(e,t){qn.sub(this.position,e.position,t.position),qn.sub(this.scale,e.scale,t.scale),Xn.invert(this.rotation,t.rotation),Xn.multiply(this.rotation,this.rotation,e.rotation)},Kn.prototype.clone=function(){var e=Kn.prototype.clone.call(this);return e.channels={time:this.channels.time||null,position:this.channels.position||null,rotation:this.channels.rotation||null,scale:this.channels.scale||null},qn.copy(e.position,this.position),Xn.copy(e.rotation,this.rotation),qn.copy(e.scale,this.scale),e.target=this.target,e.updateTarget(),e};var Yn=Pt.vec3,Zn=Pt.mat4,Jn=Yn.create,Qn=Yn.add,$n=Yn.set;K.prototype.init=function(e){if(!this.value||this.value.length!=e*this.size){var t=X(this.type);this.value=new t(e*this.size)}},K.prototype.fromArray=function(e){var t,r=X(this.type);if(e[0]&&e[0].length){var n=0,i=this.size;t=new r(e.length*i);for(var a=0;a<e.length;a++)for(var o=0;o<i;o++)t[n++]=e[a][o]}else t=new r(e);this.value=t},K.prototype.clone=function(e){var t=new K(this.name,this.type,this.size,this.semantic);return e&&console.warn("todo"),t};var ei=At.extend(function(){return{attributes:{position:new K("position","float",3,"POSITION"),texcoord0:new K("texcoord0","float",2,"TEXCOORD_0"),texcoord1:new K("texcoord1","float",2,"TEXCOORD_1"),normal:new K("normal","float",3,"NORMAL"),tangent:new K("tangent","float",4,"TANGENT"),color:new K("color","float",4,"COLOR"),weight:new K("weight","float",3,"WEIGHT"),joint:new K("joint","float",4,"JOINT"),barycentric:new K("barycentric","float",3,null)},boundingBox:null,indices:null,dynamic:!0,_enabledAttributes:null,__used:0}},function(){this._cache=new Jt,this._attributeList=Object.keys(this.attributes),this.__vaoCache={}},{mainAttribute:"position",pick:null,pickByRay:null,updateBoundingBox:function(){var e=this.boundingBox;e||(e=this.boundingBox=new Vt);var t=this.attributes.position.value;if(t&&t.length){var r=e.min,n=e.max,i=r.array,a=n.array;Yn.set(i,t[0],t[1],t[2]),Yn.set(a,t[0],t[1],t[2]);for(var o=3;o<t.length;){var s=t[o++],u=t[o++],l=t[o++];s<i[0]&&(i[0]=s),u<i[1]&&(i[1]=u),l<i[2]&&(i[2]=l),s>a[0]&&(a[0]=s),u>a[1]&&(a[1]=u),l>a[2]&&(a[2]=l)}r._dirty=!0,n._dirty=!0}},dirty:function(){for(var e=this.getEnabledAttributes(),t=0;t<e.length;t++)this.dirtyAttribute(e[t]);this.dirtyIndices(),this._enabledAttributes=null,this._cache.dirty("any")},dirtyIndices:function(){this._cache.dirtyAll("indices")},dirtyAttribute:function(e){this._cache.dirtyAll(q(e)),this._cache.dirtyAll("attributes")},getTriangleIndices:function(e,t){if(e<this.triangleCount&&e>=0){t||(t=Jn());var r=this.indices;return t[0]=r[3*e],t[1]=r[3*e+1],t[2]=r[3*e+2],t}},setTriangleIndices:function(e,t){var r=this.indices;r[3*e]=t[0],r[3*e+1]=t[1],r[3*e+2]=t[2]},isUseIndices:function(){return!!this.indices},initIndicesFromArray:function(e){var t,r=this.vertexCount>65535?Mt.Uint32Array:Mt.Uint16Array;if(e[0]&&e[0].length){var n=0;t=new r(3*e.length);for(var i=0;i<e.length;i++)for(var a=0;a<3;a++)t[n++]=e[i][a]}else t=new r(e);this.indices=t},createAttribute:function(e,t,r,n){var i=new K(e,t,r,n);return this.attributes[e]&&this.removeAttribute(e),this.attributes[e]=i,this._attributeList.push(e),i},removeAttribute:function(e){var t=this._attributeList,r=t.indexOf(e);return r>=0&&(t.splice(r,1),delete this.attributes[e],!0)},getAttribute:function(e){return this.attributes[e]},getEnabledAttributes:function(){var e=this._enabledAttributes,t=this._attributeList;if(e)return e;for(var r=[],n=this.vertexCount,i=0;i<t.length;i++){var a=t[i],o=this.attributes[a];o.value&&o.value.length===n*o.size&&r.push(a)}return this._enabledAttributes=r,r},getBufferChunks:function(e){var t=this._cache;t.use(e.__uid__);var r=t.isDirty("attributes"),n=t.isDirty("indices");if(r||n){this._updateBuffer(e.gl,r,n);for(var i=this.getEnabledAttributes(),a=0;a<i.length;a++)t.fresh(q(i[a]));t.fresh("attributes"),t.fresh("indices")}return t.fresh("any"),t.get("chunks")},_updateBuffer:function(e,t,r){var n=this._cache,i=n.get("chunks"),a=!1;i||(i=[],i[0]={attributeBuffers:[],indicesBuffer:null},n.put("chunks",i),a=!0);var o=i[0],s=o.attributeBuffers,u=o.indicesBuffer;if(t||a){var l=this.getEnabledAttributes(),c={};if(!a)for(var h=0;h<s.length;h++)c[s[h].name]=s[h];for(var f=0;f<l.length;f++){var d,p=l[f],m=this.attributes[p];a||(d=c[p]);var _;_=d?d.buffer:e.createBuffer(),n.isDirty(q(p))&&(e.bindBuffer(e.ARRAY_BUFFER,_),e.bufferData(e.ARRAY_BUFFER,m.value,this.dynamic?Ct.DYNAMIC_DRAW:Ct.STATIC_DRAW)),s[f]=new Y(p,m.type,_,m.size,m.semantic)}for(var h=f;h<s.length;h++)e.deleteBuffer(s[h].buffer);s.length=f}this.isUseIndices()&&(r||a)&&(u||(u=new Z(e.createBuffer()),o.indicesBuffer=u),u.count=this.indices.length,e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,u.buffer),e.bufferData(e.ELEMENT_ARRAY_BUFFER,this.indices,this.dynamic?Ct.DYNAMIC_DRAW:Ct.STATIC_DRAW))},generateVertexNormals:function(){if(this.vertexCount){var e=this.indices,t=this.attributes,r=t.position.value,n=t.normal.value;if(n&&n.length===r.length)for(var i=0;i<n.length;i++)n[i]=0;else n=t.normal.value=new Mt.Float32Array(r.length);for(var a,o,s,u=Jn(),l=Jn(),c=Jn(),h=Jn(),f=Jn(),d=Jn(),p=e?e.length:this.vertexCount,m=0;m<p;){e?(a=e[m++],o=e[m++],s=e[m++]):(a=m++,o=m++,s=m++),$n(u,r[3*a],r[3*a+1],r[3*a+2]),$n(l,r[3*o],r[3*o+1],r[3*o+2]),$n(c,r[3*s],r[3*s+1],r[3*s+2]),Yn.sub(h,u,l),Yn.sub(f,l,c),Yn.cross(d,h,f);for(var i=0;i<3;i++)n[3*a+i]=n[3*a+i]+d[i],n[3*o+i]=n[3*o+i]+d[i],n[3*s+i]=n[3*s+i]+d[i]}for(var i=0;i<n.length;)$n(d,n[i],n[i+1],n[i+2]),Yn.normalize(d,d),n[i++]=d[0],n[i++]=d[1],n[i++]=d[2];this.dirty()}},generateFaceNormals:function(){if(this.vertexCount){this.isUniqueVertex()||this.generateUniqueVertex();var e=this.indices,t=this.attributes,r=t.position.value,n=t.normal.value,i=Jn(),a=Jn(),o=Jn(),s=Jn(),u=Jn(),l=Jn();n||(n=t.normal.value=new Float32Array(r.length));for(var c,h,f,d=e?e.length:this.vertexCount,p=0;p<d;){e?(c=e[p++],h=e[p++],f=e[p++]):(c=p++,h=p++,f=p++),$n(i,r[3*c],r[3*c+1],r[3*c+2]),$n(a,r[3*h],r[3*h+1],r[3*h+2]),$n(o,r[3*f],r[3*f+1],r[3*f+2]),Yn.sub(s,i,a),Yn.sub(u,a,o),Yn.cross(l,s,u),Yn.normalize(l,l);for(var m=0;m<3;m++)n[3*c+m]=l[m],n[3*h+m]=l[m],n[3*f+m]=l[m]}this.dirty()}},generateTangents:function(){if(this.vertexCount){var e=this.vertexCount,t=this.attributes;t.tangent.value||(t.tangent.value=new Float32Array(4*e));var r=t.texcoord0.value,n=t.position.value,i=t.tangent.value,a=t.normal.value;if(!r)return void console.warn("Geometry without texcoords can't generate tangents.");for(var o=[],s=[],u=0;u<e;u++)o[u]=[0,0,0],s[u]=[0,0,0];for(var l,c,h,f=[0,0,0],d=[0,0,0],p=this.indices,m=p?p.length:this.vertexCount,u=0;u<m;){p?(l=p[u++],c=p[u++],h=p[u++]):(l=u++,c=u++,h=u++);var _=r[2*l],v=r[2*c],g=r[2*h],y=r[2*l+1],x=r[2*c+1],T=r[2*h+1],E=n[3*l],b=n[3*c],A=n[3*h],S=n[3*l+1],w=n[3*c+1],C=n[3*h+1],R=n[3*l+2],N=n[3*c+2],M=n[3*h+2],L=b-E,P=A-E,D=w-S,O=C-S,I=N-R,F=M-R,B=v-_,U=g-_,k=x-y,H=T-y,z=1/(B*H-k*U);f[0]=(H*L-k*P)*z,f[1]=(H*D-k*O)*z,f[2]=(H*I-k*F)*z,d[0]=(B*P-U*L)*z,d[1]=(B*O-U*D)*z,d[2]=(B*F-U*I)*z,Qn(o[l],o[l],f),Qn(o[c],o[c],f),Qn(o[h],o[h],f),Qn(s[l],s[l],d),Qn(s[c],s[c],d),Qn(s[h],s[h],d)}for(var G=Jn(),V=Jn(),W=Jn(),u=0;u<e;u++){W[0]=a[3*u],W[1]=a[3*u+1],W[2]=a[3*u+2];var j=o[u];Yn.scale(G,W,Yn.dot(W,j)),Yn.sub(G,j,G),Yn.normalize(G,G),Yn.cross(V,W,j),i[4*u]=G[0],i[4*u+1]=G[1],i[4*u+2]=G[2],i[4*u+3]=Yn.dot(V,s[u])<0?-1:1}this.dirty()}},isUniqueVertex:function(){return!this.isUseIndices()||this.vertexCount===this.indices.length},generateUniqueVertex:function(){if(this.vertexCount&&this.indices){this.indices.length>65535&&(this.indices=new Mt.Uint32Array(this.indices));for(var e=this.attributes,t=this.indices,r=this.getEnabledAttributes(),n={},i=0;i<r.length;i++){var a=r[i];n[a]=e[a].value,e[a].init(this.indices.length)}for(var o=0,s=0;s<t.length;s++){for(var u=t[s],i=0;i<r.length;i++)for(var a=r[i],l=e[a].value,c=e[a].size,h=0;h<c;h++)l[o*c+h]=n[a][u*c+h];t[s]=o,o++}this.dirty()}},generateBarycentric:function(){if(this.vertexCount){this.isUniqueVertex()||this.generateUniqueVertex();var e=this.attributes,t=e.barycentric.value,r=this.indices;if(!t||t.length!==3*r.length){t=e.barycentric.value=new Float32Array(3*r.length);for(var n=0;n<(r?r.length:this.vertexCount/3);)for(var i=0;i<3;i++){var a=r?r[n++]:3*n+i;t[3*a+i]=1}this.dirty()}}},applyTransform:function(e){var t=this.attributes,r=t.position.value,n=t.normal.value,i=t.tangent.value;e=e.array;var a=Zn.create();Zn.invert(a,e),Zn.transpose(a,a);var o=Yn.transformMat4,s=Yn.forEach;s(r,3,0,null,o,e),n&&s(n,3,0,null,o,a),i&&s(i,4,0,null,o,a),this.boundingBox&&this.updateBoundingBox()},dispose:function(e){var t=this._cache;t.use(e.__uid__);var r=t.get("chunks");if(r)for(var n=0;n<r.length;n++){for(var i=r[n],a=0;a<i.attributeBuffers.length;a++){var o=i.attributeBuffers[a];e.gl.deleteBuffer(o.buffer)}i.indicesBuffer&&e.gl.deleteBuffer(i.indicesBuffer.buffer)}if(this.__vaoCache){var s=e.getGLExtension("OES_vertex_array_object");for(var u in this.__vaoCache){var l=this.__vaoCache[u].vao;l&&s.deleteVertexArrayOES(l)}}this.__vaoCache={},t.deleteContext(e.__uid__)}});Object.defineProperty&&(Object.defineProperty(ei.prototype,"vertexCount",{enumerable:!1,get:function(){var e=this.attributes[this.mainAttribute];return e&&e.value?e.value.length/e.size:0}}),Object.defineProperty(ei.prototype,"triangleCount",{enumerable:!1,get:function(){var e=this.indices;return e?e.length/3:0}})),ei.STATIC_DRAW=Ct.STATIC_DRAW,ei.DYNAMIC_DRAW=Ct.DYNAMIC_DRAW,ei.STREAM_DRAW=Ct.STREAM_DRAW,ei.AttributeBuffer=Y,ei.IndicesBuffer=Z,ei.Attribute=K;var ti="@export clay.skybox.vertex\n#define SHADER_NAME skybox\nuniform mat4 world : WORLD;\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nattribute vec3 position : POSITION;\nvarying vec3 v_WorldPosition;\nvoid main()\n{\n v_WorldPosition = (world * vec4(position, 1.0)).xyz;\n gl_Position = worldViewProjection * vec4(position, 1.0);\n}\n@end\n@export clay.skybox.fragment\nuniform mat4 viewInverse : VIEWINVERSE;\nuniform samplerCube environmentMap;\nuniform float lod: 0.0;\nvarying vec3 v_WorldPosition;\n@import clay.util.rgbm\n@import clay.util.srgb\n@import clay.util.ACES\nvoid main()\n{\n vec3 eyePos = viewInverse[3].xyz;\n vec3 viewDirection = normalize(v_WorldPosition - eyePos);\n#ifdef LOD\n vec4 texel = decodeHDR(textureCubeLodEXT(environmentMap, viewDirection, lod));\n#else\n vec4 texel = decodeHDR(textureCube(environmentMap, viewDirection));\n#endif\n#ifdef SRGB_DECODE\n texel = sRGBToLinear(texel);\n#endif\n#ifdef TONEMAPPING\n texel.rgb = ACESToneMapping(texel.rgb);\n#endif\n#ifdef SRGB_ENCODE\n texel = linearTosRGB(texel);\n#endif\n gl_FragColor = encodeHDR(vec4(texel.rgb, 1.0));\n}\n@end";L.import(Pr),L.import("\n@export clay.util.rand\nhighp float rand(vec2 uv) {\n const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n highp float dt = dot(uv.xy, vec2(a,b)), sn = mod(dt, 3.141592653589793);\n return fract(sin(sn) * c);\n}\n@end\n@export clay.util.calculate_attenuation\nuniform float attenuationFactor : 5.0;\nfloat lightAttenuation(float dist, float range)\n{\n float attenuation = 1.0;\n attenuation = dist*dist/(range*range+1.0);\n float att_s = attenuationFactor;\n attenuation = 1.0/(attenuation*att_s+1.0);\n att_s = 1.0/(att_s+1.0);\n attenuation = attenuation - att_s;\n attenuation /= 1.0 - att_s;\n return clamp(attenuation, 0.0, 1.0);\n}\n@end\n@export clay.util.edge_factor\nfloat edgeFactor(float width)\n{\n vec3 d = fwidth(v_Barycentric);\n vec3 a3 = smoothstep(vec3(0.0), d * width, v_Barycentric);\n return min(min(a3.x, a3.y), a3.z);\n}\n@end\n@export clay.util.encode_float\nvec4 encodeFloat(const in float depth)\n{\n const vec4 bitShifts = vec4(256.0*256.0*256.0, 256.0*256.0, 256.0, 1.0);\n const vec4 bit_mask = vec4(0.0, 1.0/256.0, 1.0/256.0, 1.0/256.0);\n vec4 res = fract(depth * bitShifts);\n res -= res.xxyz * bit_mask;\n return res;\n}\n@end\n@export clay.util.decode_float\nfloat decodeFloat(const in vec4 color)\n{\n const vec4 bitShifts = vec4(1.0/(256.0*256.0*256.0), 1.0/(256.0*256.0), 1.0/256.0, 1.0);\n return dot(color, bitShifts);\n}\n@end\n@export clay.util.float\n@import clay.util.encode_float\n@import clay.util.decode_float\n@end\n@export clay.util.rgbm_decode\nvec3 RGBMDecode(vec4 rgbm, float range) {\n return range * rgbm.rgb * rgbm.a;\n}\n@end\n@export clay.util.rgbm_encode\nvec4 RGBMEncode(vec3 color, float range) {\n if (dot(color, color) == 0.0) {\n return vec4(0.0);\n }\n vec4 rgbm;\n color /= range;\n rgbm.a = clamp(max(max(color.r, color.g), max(color.b, 1e-6)), 0.0, 1.0);\n rgbm.a = ceil(rgbm.a * 255.0) / 255.0;\n rgbm.rgb = color / rgbm.a;\n return rgbm;\n}\n@end\n@export clay.util.rgbm\n@import clay.util.rgbm_decode\n@import clay.util.rgbm_encode\nvec4 decodeHDR(vec4 color)\n{\n#if defined(RGBM_DECODE) || defined(RGBM)\n return vec4(RGBMDecode(color, 8.12), 1.0);\n#else\n return color;\n#endif\n}\nvec4 encodeHDR(vec4 color)\n{\n#if defined(RGBM_ENCODE) || defined(RGBM)\n return RGBMEncode(color.xyz, 8.12);\n#else\n return color;\n#endif\n}\n@end\n@export clay.util.srgb\nvec4 sRGBToLinear(in vec4 value) {\n return vec4(mix(pow(value.rgb * 0.9478672986 + vec3(0.0521327014), vec3(2.4)), value.rgb * 0.0773993808, vec3(lessThanEqual(value.rgb, vec3(0.04045)))), value.w);\n}\nvec4 linearTosRGB(in vec4 value) {\n return vec4(mix(pow(value.rgb, vec3(0.41666)) * 1.055 - vec3(0.055), value.rgb * 12.92, vec3(lessThanEqual(value.rgb, vec3(0.0031308)))), value.w);\n}\n@end\n@export clay.chunk.skinning_header\n#ifdef SKINNING\nattribute vec3 weight : WEIGHT;\nattribute vec4 joint : JOINT;\nuniform mat4 skinMatrix[JOINT_COUNT] : SKIN_MATRIX;\nmat4 getSkinMatrix(float idx) {\n return skinMatrix[int(idx)];\n}\n#endif\n@end\n@export clay.chunk.skin_matrix\nmat4 skinMatrixWS = getSkinMatrix(joint.x) * weight.x;\nif (weight.y > 1e-4)\n{\n skinMatrixWS += getSkinMatrix(joint.y) * weight.y;\n}\nif (weight.z > 1e-4)\n{\n skinMatrixWS += getSkinMatrix(joint.z) * weight.z;\n}\nfloat weightW = 1.0-weight.x-weight.y-weight.z;\nif (weightW > 1e-4)\n{\n skinMatrixWS += getSkinMatrix(joint.w) * weightW;\n}\n@end\n@export clay.util.parallax_correct\nvec3 parallaxCorrect(in vec3 dir, in vec3 pos, in vec3 boxMin, in vec3 boxMax) {\n vec3 first = (boxMax - pos) / dir;\n vec3 second = (boxMin - pos) / dir;\n vec3 further = max(first, second);\n float dist = min(further.x, min(further.y, further.z));\n vec3 fixedPos = pos + dir * dist;\n vec3 boxCenter = (boxMax + boxMin) * 0.5;\n return normalize(fixedPos - boxCenter);\n}\n@end\n@export clay.util.clamp_sample\nvec4 clampSample(const in sampler2D texture, const in vec2 coord)\n{\n#ifdef STEREO\n float eye = step(0.5, coord.x) * 0.5;\n vec2 coordClamped = clamp(coord, vec2(eye, 0.0), vec2(0.5 + eye, 1.0));\n#else\n vec2 coordClamped = clamp(coord, vec2(0.0), vec2(1.0));\n#endif\n return texture2D(texture, coordClamped);\n}\n@end\n@export clay.util.ACES\nvec3 ACESToneMapping(vec3 color)\n{\n const float A = 2.51;\n const float B = 0.03;\n const float C = 2.43;\n const float D = 0.59;\n const float E = 0.14;\n return (color * (A * color + B)) / (color * (C * color + D) + E);\n}\n@end"),L.import("@export clay.basic.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform vec2 uvRepeat : [1.0, 1.0];\nuniform vec2 uvOffset : [0.0, 0.0];\nattribute vec2 texcoord : TEXCOORD_0;\nattribute vec3 position : POSITION;\nattribute vec3 barycentric;\n@import clay.chunk.skinning_header\nvarying vec2 v_Texcoord;\nvarying vec3 v_Barycentric;\n#ifdef VERTEX_COLOR\nattribute vec4 a_Color : COLOR;\nvarying vec4 v_Color;\n#endif\nvoid main()\n{\n vec3 skinnedPosition = position;\n#ifdef SKINNING\n @import clay.chunk.skin_matrix\n skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n#endif\n v_Texcoord = texcoord * uvRepeat + uvOffset;\n v_Barycentric = barycentric;\n gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0);\n#ifdef VERTEX_COLOR\n v_Color = a_Color;\n#endif\n}\n@end\n@export clay.basic.fragment\nvarying vec2 v_Texcoord;\nuniform sampler2D diffuseMap;\nuniform vec3 color : [1.0, 1.0, 1.0];\nuniform vec3 emission : [0.0, 0.0, 0.0];\nuniform float alpha : 1.0;\n#ifdef ALPHA_TEST\nuniform float alphaCutoff: 0.9;\n#endif\n#ifdef VERTEX_COLOR\nvarying vec4 v_Color;\n#endif\nuniform float lineWidth : 0.0;\nuniform vec4 lineColor : [0.0, 0.0, 0.0, 0.6];\nvarying vec3 v_Barycentric;\n@import clay.util.edge_factor\n@import clay.util.rgbm\n@import clay.util.srgb\n@import clay.util.ACES\nvoid main()\n{\n#ifdef RENDER_TEXCOORD\n gl_FragColor = vec4(v_Texcoord, 1.0, 1.0);\n return;\n#endif\n gl_FragColor = vec4(color, alpha);\n#ifdef VERTEX_COLOR\n gl_FragColor *= v_Color;\n#endif\n#ifdef DIFFUSEMAP_ENABLED\n vec4 texel = decodeHDR(texture2D(diffuseMap, v_Texcoord));\n#ifdef SRGB_DECODE\n texel = sRGBToLinear(texel);\n#endif\n#if defined(DIFFUSEMAP_ALPHA_ALPHA)\n gl_FragColor.a = texel.a;\n#endif\n gl_FragColor.rgb *= texel.rgb;\n#endif\n gl_FragColor.rgb += emission;\n if( lineWidth > 0.)\n {\n gl_FragColor.rgb = mix(gl_FragColor.rgb, lineColor.rgb, (1.0 - edgeFactor(lineWidth)) * lineColor.a);\n }\n#ifdef ALPHA_TEST\n if (gl_FragColor.a < alphaCutoff) {\n discard;\n }\n#endif\n#ifdef TONEMAPPING\n gl_FragColor.rgb = ACESToneMapping(gl_FragColor.rgb);\n#endif\n#ifdef SRGB_ENCODE\n gl_FragColor = linearTosRGB(gl_FragColor);\n#endif\n gl_FragColor = encodeHDR(gl_FragColor);\n}\n@end"),L.import("\n@export clay.lambert.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 worldInverseTranspose : WORLDINVERSETRANSPOSE;\nuniform mat4 world : WORLD;\nuniform vec2 uvRepeat : [1.0, 1.0];\nuniform vec2 uvOffset : [0.0, 0.0];\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\nattribute vec3 normal : NORMAL;\nattribute vec3 barycentric;\n#ifdef VERTEX_COLOR\nattribute vec4 a_Color : COLOR;\nvarying vec4 v_Color;\n#endif\n@import clay.chunk.skinning_header\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\nvarying vec3 v_Barycentric;\nvoid main()\n{\n vec3 skinnedPosition = position;\n vec3 skinnedNormal = normal;\n#ifdef SKINNING\n @import clay.chunk.skin_matrix\n skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n skinnedNormal = (skinMatrixWS * vec4(normal, 0.0)).xyz;\n#endif\n gl_Position = worldViewProjection * vec4( skinnedPosition, 1.0 );\n v_Texcoord = texcoord * uvRepeat + uvOffset;\n v_Normal = normalize( ( worldInverseTranspose * vec4(skinnedNormal, 0.0) ).xyz );\n v_WorldPosition = ( world * vec4( skinnedPosition, 1.0) ).xyz;\n v_Barycentric = barycentric;\n#ifdef VERTEX_COLOR\n v_Color = a_Color;\n#endif\n}\n@end\n@export clay.lambert.fragment\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\nuniform sampler2D diffuseMap;\nuniform sampler2D alphaMap;\nuniform vec3 color : [1.0, 1.0, 1.0];\nuniform vec3 emission : [0.0, 0.0, 0.0];\nuniform float alpha : 1.0;\n#ifdef ALPHA_TEST\nuniform float alphaCutoff: 0.9;\n#endif\nuniform float lineWidth : 0.0;\nuniform vec4 lineColor : [0.0, 0.0, 0.0, 0.6];\nvarying vec3 v_Barycentric;\n#ifdef VERTEX_COLOR\nvarying vec4 v_Color;\n#endif\n#ifdef AMBIENT_LIGHT_COUNT\n@import clay.header.ambient_light\n#endif\n#ifdef AMBIENT_SH_LIGHT_COUNT\n@import clay.header.ambient_sh_light\n#endif\n#ifdef POINT_LIGHT_COUNT\n@import clay.header.point_light\n#endif\n#ifdef DIRECTIONAL_LIGHT_COUNT\n@import clay.header.directional_light\n#endif\n#ifdef SPOT_LIGHT_COUNT\n@import clay.header.spot_light\n#endif\n@import clay.util.calculate_attenuation\n@import clay.util.edge_factor\n@import clay.util.rgbm\n@import clay.plugin.compute_shadow_map\n@import clay.util.ACES\nvoid main()\n{\n#ifdef RENDER_NORMAL\n gl_FragColor = vec4(v_Normal * 0.5 + 0.5, 1.0);\n return;\n#endif\n#ifdef RENDER_TEXCOORD\n gl_FragColor = vec4(v_Texcoord, 1.0, 1.0);\n return;\n#endif\n gl_FragColor = vec4(color, alpha);\n#ifdef VERTEX_COLOR\n gl_FragColor *= v_Color;\n#endif\n#ifdef DIFFUSEMAP_ENABLED\n vec4 tex = texture2D( diffuseMap, v_Texcoord );\n#ifdef SRGB_DECODE\n tex.rgb = pow(tex.rgb, vec3(2.2));\n#endif\n gl_FragColor.rgb *= tex.rgb;\n#ifdef DIFFUSEMAP_ALPHA_ALPHA\n gl_FragColor.a *= tex.a;\n#endif\n#endif\n vec3 diffuseColor = vec3(0.0, 0.0, 0.0);\n#ifdef AMBIENT_LIGHT_COUNT\n for(int _idx_ = 0; _idx_ < AMBIENT_LIGHT_COUNT; _idx_++)\n {\n diffuseColor += ambientLightColor[_idx_];\n }\n#endif\n#ifdef AMBIENT_SH_LIGHT_COUNT\n for(int _idx_ = 0; _idx_ < AMBIENT_SH_LIGHT_COUNT; _idx_++)\n {{\n diffuseColor += calcAmbientSHLight(_idx_, v_Normal) * ambientSHLightColor[_idx_];\n }}\n#endif\n#ifdef POINT_LIGHT_COUNT\n#if defined(POINT_LIGHT_SHADOWMAP_COUNT)\n float shadowContribsPoint[POINT_LIGHT_COUNT];\n if( shadowEnabled )\n {\n computeShadowOfPointLights(v_WorldPosition, shadowContribsPoint);\n }\n#endif\n for(int i = 0; i < POINT_LIGHT_COUNT; i++)\n {\n vec3 lightPosition = pointLightPosition[i];\n vec3 lightColor = pointLightColor[i];\n float range = pointLightRange[i];\n vec3 lightDirection = lightPosition - v_WorldPosition;\n float dist = length(lightDirection);\n float attenuation = lightAttenuation(dist, range);\n lightDirection /= dist;\n float ndl = dot( v_Normal, lightDirection );\n float shadowContrib = 1.0;\n#if defined(POINT_LIGHT_SHADOWMAP_COUNT)\n if( shadowEnabled )\n {\n shadowContrib = shadowContribsPoint[i];\n }\n#endif\n diffuseColor += lightColor * clamp(ndl, 0.0, 1.0) * attenuation * shadowContrib;\n }\n#endif\n#ifdef DIRECTIONAL_LIGHT_COUNT\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n float shadowContribsDir[DIRECTIONAL_LIGHT_COUNT];\n if(shadowEnabled)\n {\n computeShadowOfDirectionalLights(v_WorldPosition, shadowContribsDir);\n }\n#endif\n for(int i = 0; i < DIRECTIONAL_LIGHT_COUNT; i++)\n {\n vec3 lightDirection = -directionalLightDirection[i];\n vec3 lightColor = directionalLightColor[i];\n float ndl = dot(v_Normal, normalize(lightDirection));\n float shadowContrib = 1.0;\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n if( shadowEnabled )\n {\n shadowContrib = shadowContribsDir[i];\n }\n#endif\n diffuseColor += lightColor * clamp(ndl, 0.0, 1.0) * shadowContrib;\n }\n#endif\n#ifdef SPOT_LIGHT_COUNT\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT)\n float shadowContribsSpot[SPOT_LIGHT_COUNT];\n if(shadowEnabled)\n {\n computeShadowOfSpotLights(v_WorldPosition, shadowContribsSpot);\n }\n#endif\n for(int i = 0; i < SPOT_LIGHT_COUNT; i++)\n {\n vec3 lightPosition = -spotLightPosition[i];\n vec3 spotLightDirection = -normalize( spotLightDirection[i] );\n vec3 lightColor = spotLightColor[i];\n float range = spotLightRange[i];\n float a = spotLightUmbraAngleCosine[i];\n float b = spotLightPenumbraAngleCosine[i];\n float falloffFactor = spotLightFalloffFactor[i];\n vec3 lightDirection = lightPosition - v_WorldPosition;\n float dist = length(lightDirection);\n float attenuation = lightAttenuation(dist, range);\n lightDirection /= dist;\n float c = dot(spotLightDirection, lightDirection);\n float falloff;\n falloff = clamp((c - a) /( b - a), 0.0, 1.0);\n falloff = pow(falloff, falloffFactor);\n float ndl = dot(v_Normal, lightDirection);\n ndl = clamp(ndl, 0.0, 1.0);\n float shadowContrib = 1.0;\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT)\n if( shadowEnabled )\n {\n shadowContrib = shadowContribsSpot[i];\n }\n#endif\n diffuseColor += lightColor * ndl * attenuation * (1.0-falloff) * shadowContrib;\n }\n#endif\n gl_FragColor.rgb *= diffuseColor;\n gl_FragColor.rgb += emission;\n if(lineWidth > 0.)\n {\n gl_FragColor.rgb = mix(gl_FragColor.rgb, lineColor.rgb, (1.0 - edgeFactor(lineWidth)) * lineColor.a);\n }\n#ifdef ALPHA_TEST\n if (gl_FragColor.a < alphaCutoff) {\n discard;\n }\n#endif\n#ifdef TONEMAPPING\n gl_FragColor.rgb = ACESToneMapping(gl_FragColor.rgb);\n#endif\n#ifdef SRGB_ENCODE\n gl_FragColor = linearTosRGB(gl_FragColor);\n#endif\n gl_FragColor = encodeHDR(gl_FragColor);\n}\n@end"),L.import(gn),L.import("@export clay.wireframe.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 world : WORLD;\nattribute vec3 position : POSITION;\nattribute vec3 barycentric;\n@import clay.chunk.skinning_header\nvarying vec3 v_Barycentric;\nvoid main()\n{\n vec3 skinnedPosition = position;\n#ifdef SKINNING\n @import clay.chunk.skin_matrix\n skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n#endif\n gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0 );\n v_Barycentric = barycentric;\n}\n@end\n@export clay.wireframe.fragment\nuniform vec3 color : [0.0, 0.0, 0.0];\nuniform float alpha : 1.0;\nuniform float lineWidth : 1.0;\nvarying vec3 v_Barycentric;\n@import clay.util.edge_factor\nvoid main()\n{\n gl_FragColor.rgb = color;\n gl_FragColor.a = (1.0-edgeFactor(lineWidth)) * alpha;\n}\n@end"),L.import(ti),L.import(Dr),Dn.template("clay.basic",L.source("clay.basic.vertex"),L.source("clay.basic.fragment")),Dn.template("clay.lambert",L.source("clay.lambert.vertex"),L.source("clay.lambert.fragment")),Dn.template("clay.wireframe",L.source("clay.wireframe.vertex"),L.source("clay.wireframe.fragment")),Dn.template("clay.skybox",L.source("clay.skybox.vertex"),L.source("clay.skybox.fragment")),Dn.template("clay.prez",L.source("clay.prez.vertex"),L.source("clay.prez.fragment")),Dn.template("clay.standard",L.source("clay.standard.vertex"),L.source("clay.standard.fragment")),Dn.template("clay.standardMR",L.source("clay.standardMR.vertex"),L.source("clay.standardMR.fragment"));var ri={NORMAL:"normal",POSITION:"position",TEXCOORD_0:"texcoord0",TEXCOORD_1:"texcoord1",WEIGHTS_0:"weight",JOINTS_0:"joint",COLOR_0:"color"},ni={5120:Mt.Int8Array,5121:Mt.Uint8Array,5122:Mt.Int16Array,5123:Mt.Uint16Array,5125:Mt.Uint32Array,5126:Mt.Float32Array},ii={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},ai=At.extend({rootNode:null,rootPath:null,textureRootPath:null,bufferRootPath:null,shader:"clay.standard",useStandardMaterial:!1,includeCamera:!0,includeAnimation:!0,includeMesh:!0,includeTexture:!0,crossOrigin:"",textureFlipY:!1,textureConvertToPOT:!1,shaderLibrary:null},function(){this.shaderLibrary||(this.shaderLibrary=Dn.createLibrary())},{load:function(e){var t=this,r=e.endsWith(".glb");null==this.rootPath&&(this.rootPath=e.slice(0,e.lastIndexOf("/"))),zr.get({url:e,onprogress:function(e,r,n){t.trigger("progress",e,r,n)},onerror:function(e){t.trigger("error",e)},responseType:r?"arraybuffer":"text",onload:function(e){r?t.parseBinary(e):t.parse(JSON.parse(e))}})},parseBinary:function(e){var t=new Uint32Array(e,0,4);if(1179937895!==t[0])return void this.trigger("error","Invalid glTF binary format: Invalid header");if(t[0]<2)return void this.trigger("error","Only glTF2.0 is supported.");for(var r,n=new DataView(e,12),i=[],a=0;a<n.byteLength;){var o=n.getUint32(a,!0);a+=4;var s=n.getUint32(a,!0);if(a+=4,1313821514===s){var u=new Uint8Array(e,a+12,o),l=new TextDecoder,c=l.decode(u);try{r=JSON.parse(c)}catch(e){return void this.trigger("error","JSON Parse error:"+e.toString())}}else 5130562===s&&i.push(e.slice(a+12,a+12+o));a+=o}return r?this.parse(r,i):void this.trigger("error","Invalid glTF binary format: Can't find JSON.")},parse:function(e,t){function r(){0===--u&&i()}function n(){return{json:e,scene:a.rootNode?null:s,rootNode:a.rootNode?s:null,cameras:o.cameras,textures:o.textures,
materials:o.materials,skeletons:o.skeletons,meshes:o.instancedMeshes,clips:o.clips,nodes:o.nodes}}function i(t){if(o.buffers.length!==e.buffers.length)return void setTimeout(function(){a.trigger("error","Buffer not load complete.")});if(e.bufferViews.forEach(function(e,t){o.bufferViews[t]=o.buffers[e.buffer].slice(e.byteOffset||0,(e.byteOffset||0)+(e.byteLength||0))}),o.buffers=null,a.includeMesh&&(a.includeTexture&&a._parseTextures(e,o),a._parseMaterials(e,o),a._parseMeshes(e,o)),a._parseNodes(e,o),e.scenes){var r=e.scenes[e.scene||0];if(r)for(var i=0;i<r.nodes.length;i++){var u=o.nodes[r.nodes[i]];u.update(),s.add(u)}}a.includeMesh&&a._parseSkins(e,o),a.includeAnimation&&a._parseAnimations(e,o),t?setTimeout(function(){a.trigger("success",n())}):a.trigger("success",n())}var a=this,o={json:e,buffers:[],bufferViews:[],materials:[],textures:[],meshes:[],joints:[],skeletons:[],cameras:[],nodes:[],clips:[]},s=this.rootNode||new vn,u=0;return t?(o.buffers=t.slice(),i(!0)):bt.each(e.buffers,function(e,t){u++;var n=e.uri;a._loadBuffer(n,function(e){o.buffers[t]=e,r()},r)}),n()},resolveBinaryPath:function(e){if(e&&e.match(/^data:(.*?)base64,/))return e;var t=this.bufferRootPath;return null==t&&(t=this.rootPath),bt.relative2absolute(e,t)},resolveTexturePath:function(e){if(e&&e.match(/^data:(.*?)base64,/))return e;var t=this.textureRootPath;return null==t&&(t=this.rootPath),bt.relative2absolute(e,t)},_getShader:function(){return"string"==typeof this.shader?this.shaderLibrary.get(this.shader):this.shader instanceof L?this.shader:void 0},_loadBuffer:function(e,t,r){zr.get({url:this.resolveBinaryPath(e),responseType:"arraybuffer",onload:function(e){t&&t(e)},onerror:function(e){r&&r(e)}})},_parseSkins:function(e,t){function r(e,t,r){e.skeleton=t,e.joints=r}function n(e){return e.index}bt.each(e.skins,function(r,n){for(var i=new Un({name:r.name}),a=0;a<r.joints.length;a++){var o=r.joints[a],s=t.nodes[o],u=new On({name:s.name,node:s,index:i.joints.length});i.joints.push(u)}if(i.relativeRootNode=t.nodes[r.skeleton]||this.rootNode,r.inverseBindMatrices){var l=e.accessors[r.inverseBindMatrices],c=t.bufferViews[l.bufferView],h=l.byteOffset||0,f=16*l.count,d=new Mt.Float32Array(c,h,f);i.setJointMatricesArray(d)}else i.updateJointMatrices();t.skeletons[n]=i},this),bt.each(e.nodes,function(e,i){if(null!=e.skin){var a=e.skin,o=t.skeletons[a],s=t.nodes[i],u=o.joints.map(n);if(s instanceof Mn)r(s,o,u);else for(var l=s.children(),c=0;c<l.length;c++)r(l[c],o,u)}},this)},_parseTextures:function(e,t){bt.each(e.textures,function(r,n){var i=e.samplers&&e.samplers[r.sampler]||{},a={};["wrapS","wrapT","magFilter","minFilter"].forEach(function(e){var t=i[e];null!=t&&(a[e]=t)}),bt.defaults(a,{wrapS:Qt.REPEAT,wrapT:Qt.REPEAT,flipY:this.textureFlipY,convertToPOT:this.textureConvertToPOT});var o=r.target||Ct.TEXTURE_2D,s=r.format;if(null!=s&&(a.format=s),o===Ct.TEXTURE_2D){var u,l=new Nn(a),c=e.images[r.source];c.uri?u=this.resolveTexturePath(c.uri):null!=c.bufferView&&(u=URL.createObjectURL(new Blob([t.bufferViews[c.bufferView]],{type:c.mimeType}))),u&&(l.load(u,this.crossOrigin),t.textures[n]=l)}},this)},_KHRCommonMaterialToStandard:function(e,t){var r={};r=e.extensions.KHR_materials_common.values||{},"number"==typeof r.diffuse&&(r.diffuse=t.textures[r.diffuse]||null),"number"==typeof r.emission&&(r.emission=t.textures[r.emission]||null);var n=[];r.diffuse instanceof Nn&&n.push("diffuseMap"),e.normalTexture&&n.push("normalMap"),r.emission instanceof Nn&&n.push("emissiveMap");var i,a=this.useStandardMaterial;a?i=new Sn({name:e.name,doubleSided:e.doubleSided}):(i=new sr({name:e.name,shader:this._getShader()}),i.define("fragment","USE_ROUGHNESS"),i.define("fragment","USE_METALNESS"),e.doubleSided&&i.define("fragment","DOUBLE_SIDED")),r.transparent&&(i.depthMask=!1,i.depthTest=!0,i.transparent=!0);var o=r.diffuse;o&&(Array.isArray(o)?(o=o.slice(0,3),a?i.color=o:i.set("color",o)):a?i.diffuseMap=o:i.set("diffuseMap",o));var s=r.emission;if(null!=s&&(Array.isArray(s)?(s=s.slice(0,3),a?i.emission=s:i.set("emission",s)):a?i.emissiveMap=s:i.set("emissiveMap",s)),null!=e.normalTexture){var u=e.normalTexture.index;a?i.normalMap=t.textures[u]||null:i.set("normalMap",t.textures[u]||null)}if(null!=r.shininess){var l=Math.log(r.shininess)/Math.log(8192);i.set("glossiness",l),i.set("roughness",1-l)}else i.set("glossiness",.3),i.set("roughness",.3);return null!=r.specular&&i.set("specularColor",r.specular.slice(0,3)),null!=r.transparency&&i.set("alpha",r.transparency),i},_pbrMetallicRoughnessToStandard:function(e,t,r){var n,i,a,o,s,u,l="MASK"===e.alphaMode,c=this.useStandardMaterial,h=[];t.baseColorTexture&&(i=r.textures[t.baseColorTexture.index]||null)&&h.push("diffuseMap"),t.metallicRoughnessTexture&&(a=o=r.textures[t.metallicRoughnessTexture.index]||null)&&h.push("metalnessMap","roughnessMap"),e.normalTexture&&(s=r.textures[e.normalTexture.index]||null)&&h.push("normalMap"),e.emissiveTexture&&(u=r.textures[e.emissiveTexture.index]||null)&&h.push("emissiveMap");var f=t.baseColorFactor||[1,1,1,1],d={diffuseMap:i||null,roughnessMap:a||null,metalnessMap:o||null,normalMap:s||null,emissiveMap:u||null,color:f.slice(0,3),alpha:f[3],metalness:t.metallicFactor||0,roughness:t.roughnessFactor||0,emission:e.emissiveFactor||[0,0,0],emissionIntensity:1,alphaCutoff:e.alphaCutoff||0};return d.roughnessMap&&(d.metalness=.5,d.roughness=.5),c?n=new Sn(bt.extend({name:e.name,alphaTest:l,doubleSided:e.doubleSided,roughnessChannel:1,metalnessChannel:2},d)):(n=new sr({name:e.name,shader:this._getShader()}),n.define("fragment","USE_ROUGHNESS"),n.define("fragment","USE_METALNESS"),n.define("fragment","ROUGHNESS_CHANNEL",1),n.define("fragment","METALNESS_CHANNEL",2),n.define("fragment","DIFFUSEMAP_ALPHA_ALPHA"),l&&n.define("fragment","ALPHA_TEST"),e.doubleSided&&n.define("fragment","DOUBLE_SIDED"),n.set(d)),"BLEND"===e.alphaMode&&(n.depthMask=!1,n.depthTest=!0,n.transparent=!0),n},_pbrSpecularGlossinessToStandard:function(e,t,r){var n="MASK"===e.alphaMode;this.useStandardMaterial&&console.error("StandardMaterial doesn't support specular glossiness workflow yet");var i,a,o,s,u,l,c=[];t.diffuseTexture&&(a=r.textures[t.diffuseTexture.index]||null)&&c.push("diffuseMap"),t.specularGlossinessTexture&&(o=s=r.textures[t.specularGlossinessTexture.index]||null)&&c.push("specularMap","glossinessMap"),e.normalTexture&&(u=r.textures[e.normalTexture.index]||null)&&c.push("normalMap"),e.emissiveTexture&&(l=r.textures[e.emissiveTexture.index]||null)&&c.push("emissiveMap");var h=t.diffuseFactor||[1,1,1,1],f={diffuseMap:a||null,glossinessMap:o||null,specularMap:s||null,normalMap:u||null,emissiveMap:l||null,color:h.slice(0,3),alpha:h[3],specularColor:t.specularFactor||[1,1,1],glossiness:t.glossinessFactor||0,emission:e.emissiveFactor||[0,0,0],emissionIntensity:1,alphaCutoff:null==e.alphaCutoff?.9:e.alphaCutoff};return f.glossinessMap&&(f.glossiness=.5),f.specularMap&&(f.specularColor=[1,1,1]),i=new sr({name:e.name,shader:this._getShader()}),i.define("fragment","GLOSSINESS_CHANNEL",3),i.define("fragment","DIFFUSEMAP_ALPHA_ALPHA"),n&&i.define("fragment","ALPHA_TEST"),e.doubleSided&&i.define("fragment","DOUBLE_SIDED"),i.set(f),"BLEND"===e.alphaMode&&(i.depthMask=!1,i.depthTest=!0,i.transparent=!0),i},_parseMaterials:function(e,t){bt.each(e.materials,function(e,r){e.extensions&&e.extensions.KHR_materials_common?t.materials[r]=this._KHRCommonMaterialToStandard(e,t):e.extensions&&e.extensions.KHR_materials_pbrSpecularGlossiness?t.materials[r]=this._pbrSpecularGlossinessToStandard(e,e.extensions.KHR_materials_pbrSpecularGlossiness,t):t.materials[r]=this._pbrMetallicRoughnessToStandard(e,e.pbrMetallicRoughness||{},t)},this)},_parseMeshes:function(e,t){var r=this;bt.each(e.meshes,function(n,i){t.meshes[i]=[];for(var a=0;a<n.primitives.length;a++){for(var o=n.primitives[a],s=new ei({dynamic:!1,name:n.name,boundingBox:new Vt}),u=Object.keys(o.attributes),l=0;l<u.length;l++){var c=u[l],h=o.attributes[c],f=e.accessors[h],d=ri[c];if(d){var p=ii[f.type],m=J(e,t,h);if(m instanceof Mt.Uint32Array&&(m=new Float32Array(m)),"WEIGHTS_0"===c&&4===p){for(var _=new m.constructor(3*f.count),v=0;v<f.count;v++){var g=4*v,y=3*v,x=m[g],T=m[g+1],E=m[g+2],b=m[g+3],A=x+T+E+b;_[y]=x/A,_[y+1]=T/A,_[y+2]=E/A}s.attributes[d].value=_}else if("COLOR_0"===c&&3===p){for(var S=new m.constructor(4*f.count),v=0;v<f.count;v++){var g=4*v,y=3*v;S[g]=m[y],S[g+1]=m[y+1],S[g+2]=m[y+2],S[g+3]=1}s.attributes[d].value=S}else s.attributes[d].value=m;var w="float";if(m instanceof Mt.Uint16Array?w="ushort":m instanceof Mt.Int16Array?w="short":m instanceof Mt.Uint8Array?w="ubyte":m instanceof Mt.Int8Array&&(w="byte"),s.attributes[d].type=w,"POSITION"===c){var C=f.min,R=f.max;C&&s.boundingBox.min.set(C[0],C[1],C[2]),R&&s.boundingBox.max.set(R[0],R[1],R[2])}}}null!=o.indices&&(s.indices=J(e,t,o.indices,!0),s.vertexCount<=65535&&s.indices instanceof Mt.Uint32Array&&(s.indices=new Mt.Uint16Array(s.indices)),s.indices instanceof Mt.Uint8Array&&(s.indices=new Mt.Uint16Array(s.indices)));var N=t.materials[o.material],M=(e.materials||[])[o.material];N||(N=new sr({shader:r._getShader()}));var L=new Mn({geometry:s,material:N,mode:[Mn.POINTS,Mn.LINES,Mn.LINE_LOOP,Mn.LINE_STRIP,Mn.TRIANGLES,Mn.TRIANGLE_STRIP,Mn.TRIANGLE_FAN][o.mode]||Mn.TRIANGLES,ignoreGBuffer:N.transparent});null!=M&&(L.culling=!M.doubleSided),L.geometry.attributes.normal.value||L.geometry.generateVertexNormals(),(N instanceof Sn&&N.normalMap||N.isTextureEnabled("normalMap"))&&(L.geometry.attributes.tangent.value||L.geometry.generateTangents()),L.geometry.attributes.color.value&&L.material.define("VERTEX_COLOR"),L.name=ai.generateMeshName(e.meshes,i,a),t.meshes[i].push(L)}},this)},_instanceCamera:function(e,t){var r=e.cameras[t.camera];if("perspective"===r.type){var n=r.perspective||{};return new kn({name:t.name,aspect:n.aspectRatio,fov:n.yfov/Math.PI*180,far:n.zfar,near:n.znear})}var i=r.orthographic||{};return new Hn({name:t.name,top:i.ymag,right:i.xmag,left:-i.xmag,bottom:-i.ymag,near:i.znear,far:i.zfar})},_parseNodes:function(e,t){function r(e){return new Mn({name:e.name,geometry:e.geometry,material:e.material,culling:e.culling,mode:e.mode})}t.instancedMeshes=[],bt.each(e.nodes,function(n,i){var a;if(null!=n.camera&&this.includeCamera)a=this._instanceCamera(e,n),t.cameras.push(a);else if(null!=n.mesh&&this.includeMesh){var o=t.meshes[n.mesh];if(o)if(1===o.length)a=r(o[0]),a.setName(n.name),t.instancedMeshes.push(a);else{a=new Kr,a.setName(n.name);for(var s=0;s<o.length;s++){var u=r(o[s]);a.add(u),t.instancedMeshes.push(u)}}}else a=new Kr,a.setName(n.name);n.matrix?(a.localTransform.setArray(n.matrix),a.decomposeLocalTransform()):(n.translation&&a.position.setArray(n.translation),n.rotation&&a.rotation.setArray(n.rotation),n.scale&&a.scale.setArray(n.scale)),t.nodes[i]=a},this),bt.each(e.nodes,function(e,r){var n=t.nodes[r];if(e.children)for(var i=0;i<e.children.length;i++){var a=e.children[i],o=t.nodes[a];n.add(o)}})},_parseAnimations:function(e,t){function r(e){return"weights"!==e.path||(console.warn("GLTFLoader not support morph targets yet."),!1)}function n(e,t){return e.target.node+"_"+t.samplers[e.sampler].input}var i={};bt.each(e.animations,function(a,o){var s=a.channels.filter(r);if(s.length){for(var u={},l=0;l<s.length;l++){var c=s[l],h=n(c,a),f=t.nodes[c.target.node],d=u[h],p=a.samplers[c.sampler];if(!d){d=u[h]=new Kn({name:f?f.name:"",target:f}),d.targetNodeIndex=c.target.node,d.channels.time=J(e,t,p.input);var m=d.channels.time.length;if(!i[p.input]){for(var _=0;_<m;_++)d.channels.time[_]*=1e3;i[p.input]=!0}}"LINEAR"!==(p.interpolation||"LINEAR")&&console.warn("GLTFLoader only support LINEAR interpolation.");var v=c.target.path;"translation"===v&&(v="position"),d.channels[v]=J(e,t,p.output)}var g=[];for(var y in u)g.push(u[y]);var x=new jn({name:a.name,loop:!0,tracks:g});t.clips.push(x)}},this);var a=t.clips.reduce(function(e,t){return Math.max(e,t.life)},0);return t.clips.forEach(function(e){e.life=a}),t.clips}});ai.generateMeshName=function(e,t,r){var n=e[t],i=n.name||"mesh_"+t;return 0===r?i:i+"$"+r};var oi=Array.prototype.slice;le.prototype={constructor:le,when:function(e,t,r){this._maxTime=Math.max(e,this._maxTime),r=("function"==typeof r?r:zn[r])||ce;for(var n in t)this._tracks[n]||(this._tracks[n]=[],0!==e&&this._tracks[n].push({time:0,value:ne(this._getter(this._target,n)),easing:r})),this._tracks[n].push({time:parseInt(e),value:t[n],easing:r});return this},then:function(e,t,r){return this.when(e+this._lastKFTime,t,r),this._lastKFTime+=e,this},during:function(e){return this._onframeList.push(e),this},_doneCallback:function(){this._tracks={},this._clipList.length=0;for(var e=this._doneList,t=e.length,r=0;r<t;r++)e[r].call(this)},start:function(e){var t,r=this,n=0,i=function(){0===--n&&r._doneCallback()},a=0;for(var o in this._tracks){var s=ue(this,e,i,this._tracks[o],o,r._interpolater,r._maxTime);s&&(a=Math.max(a,s.life),this._clipList.push(s),n++,this.animation&&this.animation.addClip(s),t=s)}if(t){var u=t.onframe;t.onframe=function(e,t){u(e,t);for(var n=0;n<r._onframeList.length;n++)r._onframeList[n](e,t)}}return n||this._doneCallback(),this},stop:function(){for(var e=0;e<this._clipList.length;e++){var t=this._clipList[e];this.animation.removeClip(t)}this._clipList=[]},delay:function(e){return this._delay=e,this},done:function(e){return e&&this._doneList.push(e),this},getClips:function(){return this._clipList}};var si="undefined"==typeof window?global:window,ui=si.requestAnimationFrame||si.msRequestAnimationFrame||si.mozRequestAnimationFrame||si.webkitRequestAnimationFrame||function(e){setTimeout(e,16)},li=At.extend(function(){return{stage:null,_clips:[],_running:!1,_time:0,_paused:!1,_pausedTime:0}},{addAnimator:function(e){e.animation=this;for(var t=e.getClips(),r=0;r<t.length;r++)this.addClip(t[r])},addClip:function(e){this._clips.indexOf(e)<0&&this._clips.push(e)},removeClip:function(e){var t=this._clips.indexOf(e);t>=0&&this._clips.splice(t,1)},removeAnimator:function(e){for(var t=e.getClips(),r=0;r<t.length;r++)this.removeClip(t[r]);e.animation=null},_update:function(){for(var e=Date.now()-this._pausedTime,t=e-this._time,r=this._clips,n=r.length,i=[],a=[],o=0;o<n;o++){var s=r[o],u=s.step(e,t,!1);u&&(i.push(u),a.push(s))}for(var o=0;o<n;)r[o]._needsRemove?(r[o]=r[n-1],r.pop(),n--):o++;n=i.length;for(var o=0;o<n;o++)a[o].fire(i[o]);this._time=e,this.trigger("frame",t),this.stage&&this.stage.render&&this.stage.render()},start:function(){function e(){t._running&&(ui(e),t._paused||t._update())}var t=this;this._running=!0,this._time=Date.now(),this._pausedTime=0,ui(e)},stop:function(){this._running=!1},pause:function(){this._paused||(this._pauseStart=Date.now(),this._paused=!0)},resume:function(){this._paused&&(this._pausedTime+=Date.now()-this._pauseStart,this._paused=!1)},removeClipsAll:function(){this._clips=[]},animate:function(e,t){t=t||{};var r=new le(e,t.loop,t.getter,t.setter,t.interpolater);return r.animation=this,r}}),ci=Pt.mat4,hi=Pt.vec3,fi={merge:function(e,t){if(e.length){var r=e[0],n=r.geometry,i=r.material,a=new ei({dynamic:!1});a.boundingBox=new Vt;for(var o=n.getEnabledAttributes(),s=0;s<o.length;s++){var u=o[s],l=n.attributes[u];a.attributes[u]||(a.attributes[u]=l.clone(!1))}for(var c=ci.create(),h=0,f=0,d=0;d<e.length;d++){var p=e[d].geometry;p.boundingBox&&(p.boundingBox.applyTransform(t?e[d].worldTransform:e[d].localTransform),a.boundingBox.union(p.boundingBox)),h+=p.vertexCount,f+=p.triangleCount}for(var m=0;m<o.length;m++){var u=o[m];a.attributes[u].init(h)}a.indices=h>=65535?new Uint32Array(3*f):new Uint16Array(3*f);for(var _=0,v=0,g=n.isUseIndices(),y=0;y<e.length;y++){var x=e[y],p=x.geometry,h=p.vertexCount,T=t?x.worldTransform.array:x.localTransform.array;ci.invert(c,T),ci.transpose(c,c);for(var E=0;E<o.length;E++){var u=o[E],b=p.attributes[u],A=a.attributes[u];if(b.value.length){for(var S=b.value.length,w=b.size,C=_*w,R=S/w,s=0;s<S;s++)A.value[C+s]=b.value[s];"position"===u?hi.forEach(A.value,w,C,R,hi.transformMat4,T):"normal"!==u&&"tangent"!==u||hi.forEach(A.value,w,C,R,hi.transformMat4,c)}}if(g){for(var S=p.indices.length,s=0;s<S;s++)a.indices[s+v]=p.indices[s]+_;v+=S}_+=h}return new Mn({material:i,geometry:a})}},splitByJoints:function(e,t,r){var n=e.geometry,i=e.skeleton,a=e.material,o=e.joints;if(n&&i&&o.length){if(o.length<t)return e;for(var s=n.indices,u=n.triangleCount,l=u,c=[],h=n.attributes.joint.value,f=0;f<u;f++)c[f]=!1;for(var d=[],p=[],m=function(e){return o[e]};l>0;){for(var _=[],v=[],g=[],y=0,f=0;f<o.length;f++)v[f]=-1;for(var x=0;x<u;x++)if(!c[x]){for(var T=!0,E=0,f=0;f<3;f++)for(var b=s[3*x+f],A=0;A<4;A++){var S=h[4*b+A];S>=0&&-1===v[S]&&(y<t?(v[S]=y,g[y++]=S,d[E++]=S):T=!1)}if(T)_.push(s.subarray(3*x,3*(x+1))),c[x]=!0,l--;else for(var f=0;f<E;f++)v[d[f]]=-1,g.pop(),y--}p.push({triangles:_,joints:g.map(m),jointReverseMap:v})}var w=new Kr({name:e.name}),C=n.getEnabledAttributes();C.splice(C.indexOf("joint"),1);for(var R=[],N=0;N<p.length;N++){for(var M=p[N],L=M.jointReverseMap,y=M.joints.length,P=new ei,D=new Mn({name:[e.name,f].join("-"),material:a,geometry:P,skeleton:i,joints:M.joints.slice()}),O=0,I=n.vertexCount,f=0;f<I;f++)R[f]=-1;for(var x=0;x<M.triangles.length;x++)for(var F=M.triangles[x],f=0;f<3;f++){var b=F[f];-1===R[b]&&(R[b]=O,O++)}for(var B=0;B<C.length;B++){var U=C[B],k=P.attributes[U];k.init(O)}P.attributes.joint.value=new Float32Array(4*O),P.indices=O>65535?new Uint32Array(3*M.triangles.length):new Uint16Array(3*M.triangles.length);var H=0;O=0;for(var f=0;f<I;f++)R[f]=-1;for(var x=0;x<M.triangles.length;x++)for(var z=M.triangles[x],f=0;f<3;f++){var b=z[f];if(-1===R[b]){R[b]=O;for(var B=0;B<C.length;B++)for(var U=C[B],G=n.attributes[U],k=P.attributes[U],V=G.size,A=0;A<V;A++)k.value[O*V+A]=G.value[b*V+A];for(var A=0;A<4;A++){var S=n.attributes.joint.value[4*b+A],W=4*O+A;P.attributes.joint.value[W]=S>=0?L[S]:-1}O++}P.indices[H++]=R[b]}P.updateBoundingBox(),w.add(D)}for(var j=e.children(),f=0;f<j.length;f++)w.add(j[f]);if(w.position.copy(e.position),w.rotation.copy(e.rotation),w.scale.copy(e.scale),r&&e.getParent()){var X=e.getParent();X.remove(e),X.add(w)}return w}}},di=function(){this._fullfilled=!1,this._rejected=!1};di.prototype.resolve=function(e){this._fullfilled=!0,this._rejected=!1,this.trigger("success",e)},di.prototype.reject=function(e){this._rejected=!0,this._fullfilled=!1,this.trigger("error",e)},di.prototype.isFullfilled=function(){return this._fullfilled},di.prototype.isRejected=function(){return this._rejected},di.prototype.isSettled=function(){return this._fullfilled||this._rejected},bt.extend(di.prototype,yt),di.makeRequestTask=function(e,t){if("string"==typeof e)return he(e,t);if(e.url){var r=e;return he(r.url,r.responseType)}if(Array.isArray(e)){var n=e,i=[];return n.forEach(function(e){var t,r;"string"==typeof e?t=e:Object(e)===e&&(t=e.url,r=e.responseType),i.push(he(t,r))}),i}},di.makeTask=function(){return new di},bt.extend(di.prototype,yt);var pi=function(){di.apply(this,arguments),this._tasks=[],this._fulfilledNumber=0,this._rejectedNumber=0},mi=function(){};mi.prototype=di.prototype,pi.prototype=new mi,pi.prototype.constructor=pi,pi.prototype.all=function(e){var t=0,r=this,n=[];return this._tasks=e,this._fulfilledNumber=0,this._rejectedNumber=0,bt.each(e,function(e,i){e&&e.once&&(t++,e.once("success",function(a){t--,r._fulfilledNumber++,e._fulfilled=!0,e._rejected=!1,n[i]=a,0===t&&r.resolve(n)}),e.once("error",function(){r._rejectedNumber++,e._fulfilled=!1,e._rejected=!0,r.reject(e)}))}),0===t?(setTimeout(function(){r.resolve(n)}),this):this},pi.prototype.allSettled=function(e){var t=0,r=this,n=[];return 0===e.length?(setTimeout(function(){r.trigger("success",n)}),this):(this._tasks=e,bt.each(e,function(e,i){e&&e.once&&(t++,e.once("success",function(a){t--,r._fulfilledNumber++,e._fulfilled=!0,e._rejected=!1,n[i]=a,0===t&&r.resolve(n)}),e.once("error",function(a){t--,r._rejectedNumber++,e._fulfilled=!1,e._rejected=!0,n[i]=null,0===t&&r.resolve(n)}))}),this)},pi.prototype.getFulfilledNumber=function(e){if(e){for(var t=0,r=0;r<this._tasks.length;r++){var n=this._tasks[r];n instanceof pi?t+=n.getFulfilledNumber(e):n._fulfilled&&(t+=1)}return t}return this._fulfilledNumber},pi.prototype.getRejectedNumber=function(e){if(e){for(var t=0,r=0;r<this._tasks.length;r++){var n=this._tasks[r];n instanceof pi?t+=n.getRejectedNumber(e):n._rejected&&(t+=1)}return t}return this._rejectedNumber},pi.prototype.getSettledNumber=function(e){if(e){for(var t=0,r=0;r<this._tasks.length;r++){var n=this._tasks[r];n instanceof pi?t+=n.getSettledNumber(e):(n._rejected||n._fulfilled)&&(t+=1)}return t}return this._fulfilledNumber+this._rejectedNumber},pi.prototype.getTaskNumber=function(e){if(e){for(var t=0,r=0;r<this._tasks.length;r++){var n=this._tasks[r];t+=n instanceof pi?n.getTaskNumber(e):1}return t}return this._tasks.length};var _i=ei.extend({dynamic:!1,widthSegments:1,heightSegments:1},function(){this.build()},{build:function(){for(var e=this.heightSegments,t=this.widthSegments,r=this.attributes,n=[],i=[],a=[],o=[],s=0;s<=e;s++)for(var u=s/e,l=0;l<=t;l++){var c=l/t;if(n.push([2*c-1,2*u-1,0]),i&&i.push([c,u]),a&&a.push([0,0,1]),l<t&&s<e){var h=l+s*(t+1);o.push([h,h+1,h+t+1]),o.push([h+t+1,h+1,h+t+2])}}r.position.fromArray(n),r.texcoord0.fromArray(i),r.normal.fromArray(a),this.initIndicesFromArray(o),this.boundingBox=new Vt,this.boundingBox.min.set(-1,-1,0),this.boundingBox.max.set(1,1,0)}}),vi=Pt.vec3,gi=At.extend({scene:null,camera:null,renderer:null},function(){this._ray=new ln,this._ndc=new lr},{pick:function(e,t,r){return this.pickAll(e,t,[],r)[0]||null},pickAll:function(e,t,r,n){return this.renderer.screenToNDC(e,t,this._ndc),this.camera.castRay(this._ndc,this._ray),r=r||[],this._intersectNode(this.scene,r,n||!1),r.sort(this._intersectionCompareFunc),r},_intersectNode:function(e,t,r){e instanceof wn&&e.isRenderable()&&(e.ignorePicking&&!r||!(e.mode===Ct.TRIANGLES&&e.geometry.isUseIndices()||e.geometry.pickByRay||e.geometry.pick)||this._intersectRenderable(e,t));for(var n=0;n<e._children.length;n++)this._intersectNode(e._children[n],t,r)},_intersectRenderable:function(){var e=new Ot,t=new Ot,r=new Ot,n=new ln,i=new Kt;return function(a,o){var s=a.isSkinnedMesh();n.copy(this._ray),Kt.invert(i,a.worldTransform),s||n.applyTransform(i);var u=a.geometry;if(s||!u.boundingBox||n.intersectBoundingBox(u.boundingBox)){if(u.pick)return void u.pick(this._ndc.x,this._ndc.y,this.renderer,this.camera,a,o);if(u.pickByRay)return void u.pickByRay(n,a,o);var l,c,h=a.cullFace===Ct.BACK&&a.frontFace===Ct.CCW||a.cullFace===Ct.FRONT&&a.frontFace===Ct.CW,f=u.indices,d=u.attributes.position,p=u.attributes.weight,m=u.attributes.joint,_=[];if(d&&d.value&&f){if(s){c=a.skeleton.getSubSkinMatrices(a.__uid__,a.joints);for(var v=0;v<a.joints.length;v++){_[v]=_[v]||[];for(var g=0;g<16;g++)_[v][g]=c[16*v+g]}var y=[],x=[],T=[],E=[],b=[],A=u.attributes.skinnedPosition;A&&A.value||(u.createAttribute("skinnedPosition","f",3),A=u.attributes.skinnedPosition,A.init(u.vertexCount));for(var v=0;v<u.vertexCount;v++){d.get(v,y),p.get(v,x),m.get(v,T),x[3]=1-x[0]-x[1]-x[2],vi.set(E,0,0,0);for(var g=0;g<4;g++)T[g]>=0&&x[g]>1e-4&&(vi.transformMat4(b,y,_[T[g]]),vi.scaleAndAdd(E,E,b,x[g]));A.set(v,E)}}for(var v=0;v<f.length;v+=3){var S=f[v],w=f[v+1],C=f[v+2],R=s?u.attributes.skinnedPosition:d;if(R.get(S,e.array),R.get(w,t.array),R.get(C,r.array),l=h?n.intersectTriangle(e,t,r,a.culling):n.intersectTriangle(e,r,t,a.culling)){var N=new Ot;s?Ot.copy(N,l):Ot.transformMat4(N,l,a.worldTransform),o.push(new gi.Intersection(l,N,a,[S,w,C],v/3,Ot.dist(N,this._ray.origin)))}}}}}}(),_intersectionCompareFunc:function(e,t){return e.distance-t.distance}});gi.Intersection=function(e,t,r,n,i,a){this.point=e,this.pointWorld=t,this.target=r,this.triangle=n,this.triangleIndex=i,this.distance=a};var yi=Cn.isPowerOfTwo,xi=["px","nx","py","ny","pz","nz"],Ti=Qt.extend(function(){return{image:{px:null,nx:null,py:null,ny:null,pz:null,nz:null},pixels:{px:null,nx:null,py:null,ny:null,pz:null,nz:null},mipmaps:[]}},{textureType:"textureCube",update:function(e){var t=e.gl;t.bindTexture(t.TEXTURE_CUBE_MAP,this._cache.get("webgl_texture")),this.updateCommon(e);var r=this.format,n=this.type;t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_WRAP_S,this.getAvailableWrapS()),t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_WRAP_T,this.getAvailableWrapT()),t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_MAG_FILTER,this.getAvailableMagFilter()),t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_MIN_FILTER,this.getAvailableMinFilter());var i=e.getGLExtension("EXT_texture_filter_anisotropic");if(i&&this.anisotropic>1&&t.texParameterf(t.TEXTURE_CUBE_MAP,i.TEXTURE_MAX_ANISOTROPY_EXT,this.anisotropic),36193===n){e.getGLExtension("OES_texture_half_float")||(n=Ct.FLOAT)}if(this.mipmaps.length)for(var a=this.width,o=this.height,s=0;s<this.mipmaps.length;s++){var u=this.mipmaps[s];this._updateTextureData(t,u,s,a,o,r,n),a/=2,o/=2}else this._updateTextureData(t,this,0,this.width,this.height,r,n),!this.NPOT&&this.useMipmap&&t.generateMipmap(t.TEXTURE_CUBE_MAP);t.bindTexture(t.TEXTURE_CUBE_MAP,null)},_updateTextureData:function(e,t,r,n,i,a,o){for(var s=0;s<6;s++){var u=xi[s],l=t.image&&t.image[u];l?e.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+s,r,a,a,o,l):e.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+s,r,a,n,i,0,a,o,t.pixels&&t.pixels[u])}},generateMipmap:function(e){var t=e.gl;this.useMipmap&&!this.NPOT&&(t.bindTexture(t.TEXTURE_CUBE_MAP,this._cache.get("webgl_texture")),t.generateMipmap(t.TEXTURE_CUBE_MAP))},bind:function(e){e.gl.bindTexture(e.gl.TEXTURE_CUBE_MAP,this.getWebGLTexture(e))},unbind:function(e){e.gl.bindTexture(e.gl.TEXTURE_CUBE_MAP,null)},isPowerOfTwo:function(){return this.image.px?yi(this.image.px.width)&&yi(this.image.px.height):yi(this.width)&&yi(this.height)},isRenderable:function(){return this.image.px?fe(this.image.px)&&fe(this.image.nx)&&fe(this.image.py)&&fe(this.image.ny)&&fe(this.image.pz)&&fe(this.image.nz):!(!this.width||!this.height)},load:function(e,t){var r=0,n=this;return bt.each(e,function(e,i){var a=new Image;t&&(a.crossOrigin=t),a.onload=function(){r--,0===r&&(n.dirty(),n.trigger("success",n)),a.onload=null},a.onerror=function(){r--,a.onerror=null},r++,a.src=e,n.image[i]=a}),this}});Object.defineProperty(Ti.prototype,"width",{get:function(){return this.image&&this.image.px?this.image.px.width:this._width},set:function(e){this.image&&this.image.px?console.warn("Texture from image can't set width"):(this._width!==e&&this.dirty(),this._width=e)}}),Object.defineProperty(Ti.prototype,"height",{get:function(){return this.image&&this.image.px?this.image.px.height:this._height},set:function(e){this.image&&this.image.px?console.warn("Texture from image can't set height"):(this._height!==e&&this.dirty(),this._height=e)}});var Ei=Ct.FRAMEBUFFER,bi=Ct.RENDERBUFFER,Ai=Ct.DEPTH_ATTACHMENT,Si=Ct.COLOR_ATTACHMENT0,wi=At.extend({depthBuffer:!0,viewport:null,_width:0,_height:0,_textures:null,_boundRenderer:null},function(){this._cache=new Jt,this._textures={}},{getTextureWidth:function(){return this._width},getTextureHeight:function(){return this._height},bind:function(e){if(e.__currentFrameBuffer){if(e.__currentFrameBuffer===this)return;console.warn("Renderer already bound with another framebuffer. Unbind it first")}e.__currentFrameBuffer=this;var t=e.gl;t.bindFramebuffer(Ei,this._getFrameBufferGL(e)),this._boundRenderer=e;var r=this._cache;r.put("viewport",e.viewport);var n,i,a=!1;for(var o in this._textures){a=!0;var s=this._textures[o];s&&(n=s.texture.width,i=s.texture.height,this._doAttach(e,s.texture,o,s.target))}this._width=n,this._height=i,!a&&this.depthBuffer&&console.error("Must attach texture before bind, or renderbuffer may have incorrect width and height."),this.viewport?e.setViewport(this.viewport):e.setViewport(0,0,n,i,1);var u=r.get("attached_textures");if(u)for(var o in u)if(!this._textures[o]){var l=u[o];this._doDetach(t,o,l)}if(!r.get("depthtexture_attached")&&this.depthBuffer){r.miss("renderbuffer")&&r.put("renderbuffer",t.createRenderbuffer());var c=r.get("renderbuffer");n===r.get("renderbuffer_width")&&i===r.get("renderbuffer_height")||(t.bindRenderbuffer(bi,c),t.renderbufferStorage(bi,t.DEPTH_COMPONENT16,n,i),r.put("renderbuffer_width",n),r.put("renderbuffer_height",i),t.bindRenderbuffer(bi,null)),r.get("renderbuffer_attached")||(t.framebufferRenderbuffer(Ei,Ai,bi,c),r.put("renderbuffer_attached",!0))}},unbind:function(e){e.__currentFrameBuffer=null,e.gl.bindFramebuffer(Ei,null),this._boundRenderer=null,this._cache.use(e.__uid__);var t=this._cache.get("viewport");t&&e.setViewport(t),this.updateMipmap(e)},updateMipmap:function(e){var t=e.gl;for(var r in this._textures){var n=this._textures[r];if(n){var i=n.texture;if(!i.NPOT&&i.useMipmap&&i.minFilter===Qt.LINEAR_MIPMAP_LINEAR){var a="textureCube"===i.textureType?Ct.TEXTURE_CUBE_MAP:Ct.TEXTURE_2D;t.bindTexture(a,i.getWebGLTexture(e)),t.generateMipmap(a),t.bindTexture(a,null)}}}},checkStatus:function(e){return e.checkFramebufferStatus(Ei)},_getFrameBufferGL:function(e){var t=this._cache;return t.use(e.__uid__),t.miss("framebuffer")&&t.put("framebuffer",e.gl.createFramebuffer()),t.get("framebuffer")},attach:function(e,t,r){if(!e.width)throw new Error("The texture attached to color buffer is not a valid.");t=t||Si,r=r||Ct.TEXTURE_2D;var n,i=this._boundRenderer,a=i&&i.gl;if(a){var o=this._cache;o.use(i.__uid__),n=o.get("attached_textures")}var s=this._textures[t];if(!s||s.target!==r||s.texture!==e||!n||null==n[t]){var u=!0;i&&(u=this._doAttach(i,e,t,r),this.viewport||i.setViewport(0,0,e.width,e.height,1)),u&&(this._textures[t]=this._textures[t]||{},this._textures[t].texture=e,this._textures[t].target=r)}},_doAttach:function(e,t,r,n){var i=e.gl,a=t.getWebGLTexture(e),o=this._cache.get("attached_textures");if(o&&o[r]){var s=o[r];if(s.texture===t&&s.target===n)return}r=+r;var u=!0;if(r===Ai||r===Ct.DEPTH_STENCIL_ATTACHMENT){if(e.getGLExtension("WEBGL_depth_texture")||(console.error("Depth texture is not supported by the browser"),u=!1),t.format!==Ct.DEPTH_COMPONENT&&t.format!==Ct.DEPTH_STENCIL&&(console.error("The texture attached to depth buffer is not a valid."),u=!1),u){var l=this._cache.get("renderbuffer");l&&(i.framebufferRenderbuffer(Ei,Ai,bi,null),i.deleteRenderbuffer(l),this._cache.put("renderbuffer",!1)),this._cache.put("renderbuffer_attached",!1),this._cache.put("depthtexture_attached",!0)}}return i.framebufferTexture2D(Ei,r,n,a,0),o||(o={},this._cache.put("attached_textures",o)),o[r]=o[r]||{},o[r].texture=t,o[r].target=n,u},_doDetach:function(e,t,r){e.framebufferTexture2D(Ei,t,r,null,0);var n=this._cache.get("attached_textures");n&&n[t]&&(n[t]=null),t!==Ai&&t!==Ct.DEPTH_STENCIL_ATTACHMENT||this._cache.put("depthtexture_attached",!1)},detach:function(e,t){if(this._textures[e]=null,this._boundRenderer){this._cache.use(this._boundRenderer.__uid__),this._doDetach(this._boundRenderer.gl,e,t)}},dispose:function(e){var t=e.gl,r=this._cache;r.use(e.__uid__);var n=r.get("renderbuffer");n&&t.deleteRenderbuffer(n);var i=r.get("framebuffer");i&&t.deleteFramebuffer(i),r.deleteContext(e.__uid__),this._textures={}}});wi.DEPTH_ATTACHMENT=Ai,wi.COLOR_ATTACHMENT0=Si,wi.STENCIL_ATTACHMENT=Ct.STENCIL_ATTACHMENT,wi.DEPTH_STENCIL_ATTACHMENT=Ct.DEPTH_STENCIL_ATTACHMENT;var Ci=["px","nx","py","ny","pz","nz"],Ri=At.extend(function(){var e={position:new Ot,far:1e3,near:.1,texture:null,shadowMapPass:null},t=e._cameras={px:new kn({fov:90}),nx:new kn({fov:90}),py:new kn({fov:90}),ny:new kn({fov:90}),pz:new kn({fov:90}),nz:new kn({fov:90})};return t.px.lookAt(Ot.POSITIVE_X,Ot.NEGATIVE_Y),t.nx.lookAt(Ot.NEGATIVE_X,Ot.NEGATIVE_Y),t.py.lookAt(Ot.POSITIVE_Y,Ot.POSITIVE_Z),t.ny.lookAt(Ot.NEGATIVE_Y,Ot.NEGATIVE_Z),t.pz.lookAt(Ot.POSITIVE_Z,Ot.NEGATIVE_Y),t.nz.lookAt(Ot.NEGATIVE_Z,Ot.NEGATIVE_Y),e._frameBuffer=new wi,e},{getCamera:function(e){return this._cameras[e]},render:function(e,t,r){var n=e.gl;r||t.update();for(var i=this.texture.width,a=2*Math.atan(i/(i-.5))/Math.PI*180,o=0;o<6;o++){var s=Ci[o],u=this._cameras[s]
;if(Ot.copy(u.position,this.position),u.far=this.far,u.near=this.near,u.fov=a,this.shadowMapPass){u.update();var l=t.getBoundingBox();l.applyTransform(u.viewMatrix),t.viewBoundingBoxLastFrame.copy(l),this.shadowMapPass.render(e,t,u,!0)}this._frameBuffer.attach(this.texture,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+o),this._frameBuffer.bind(e),e.render(t,u,!0),this._frameBuffer.unbind(e)}},dispose:function(e){this._frameBuffer.dispose(e)}}),Ni=ei.extend({dynamic:!1,widthSegments:40,heightSegments:20,phiStart:0,phiLength:2*Math.PI,thetaStart:0,thetaLength:Math.PI,radius:1},function(){this.build()},{build:function(){var e=this.heightSegments,t=this.widthSegments,r=this.attributes.position,n=this.attributes.texcoord0,i=this.attributes.normal,a=(t+1)*(e+1);r.init(a),n.init(a),i.init(a);var o,s,u,l,c,h,f,d=a>65535?Uint32Array:Uint16Array,p=this.indices=new d(t*e*6),m=this.radius,_=this.phiStart,v=this.phiLength,g=this.thetaStart,y=this.thetaLength,m=this.radius,x=[],T=[],E=0,b=1/m;for(f=0;f<=e;f++)for(h=0;h<=t;h++)l=h/t,c=f/e,o=-m*Math.cos(_+l*v)*Math.sin(g+c*y),s=m*Math.cos(g+c*y),u=m*Math.sin(_+l*v)*Math.sin(g+c*y),x[0]=o,x[1]=s,x[2]=u,T[0]=l,T[1]=c,r.set(E,x),n.set(E,T),x[0]*=b,x[1]*=b,x[2]*=b,i.set(E,x),E++;var A,S,w,C,R=t+1,N=0;for(f=0;f<e;f++)for(h=0;h<t;h++)S=f*R+h,A=f*R+h+1,C=(f+1)*R+h+1,w=(f+1)*R+h,p[N++]=A,p[N++]=S,p[N++]=C,p[N++]=S,p[N++]=w,p[N++]=C;this.boundingBox=new Vt,this.boundingBox.max.set(m,m,m),this.boundingBox.min.set(-m,-m,-m)}});L.import("@export clay.skydome.vertex\n#define SHADER_NAME skydome\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nattribute vec2 texcoord : TEXCOORD_0;\nattribute vec3 position : POSITION;\nvarying vec2 v_Texcoord;\nvoid main()\n{\n gl_Position = worldViewProjection * vec4(position, 1.0);\n v_Texcoord = texcoord;\n}\n@end\n@export clay.skydome.fragment\nuniform sampler2D environmentMap;\nvarying vec2 v_Texcoord;\n@import clay.util.rgbm\n@import clay.util.srgb\n@import clay.util.ACES\nvoid main()\n{\n vec4 texel = decodeHDR(texture2D(environmentMap, v_Texcoord));\n#ifdef SRGB_DECODE\n texel = sRGBToLinear(texel);\n#endif\n#ifdef TONEMAPPING\n texel.rgb = ACESToneMapping(texel.rgb);\n#endif\n#ifdef SRGB_ENCODE\n texel = linearTosRGB(texel);\n#endif\n gl_FragColor = encodeHDR(vec4(texel.rgb, 1.0));\n}\n@end");var Mi=Mn.extend(function(){var e=new L(L.source("clay.skydome.vertex"),L.source("clay.skydome.fragment")),t=new sr({shader:e,depthMask:!1});return{scene:null,geometry:new Ni({widthSegments:30,heightSegments:30}),material:t,environmentMap:null,culling:!1}},function(){var e=this.scene;e&&this.attachScene(e),this.environmentMap&&this.setEnvironmentMap(this.environmentMap)},{attachScene:function(e){this.scene&&this.detachScene(),e.skydome=this,this.scene=e,e.on("beforerender",this._beforeRenderScene,this)},detachScene:function(){this.scene&&(this.scene.off("beforerender",this._beforeRenderScene),this.scene.skydome=null),this.scene=null},_beforeRenderScene:function(e,t,r){this.position.copy(r.getWorldPosition()),this.update(),e.renderPass([this],r)},setEnvironmentMap:function(e){this.material.set("environmentMap",e)},getEnvironmentMap:function(){return this.material.get("environmentMap")},dispose:function(e){this.detachScene(),this.geometry.dispose(e)}}),Li=de("DXT1"),Pi=de("DXT3"),Di=de("DXT5"),Oi={parse:function(e,t){var r=new Int32Array(e,0,31);if(542327876!==r[0])return null;if(4&!r(20))return null;var n,i,a=r(21),o=r[4],s=r[3],u=512&r[28],l=131072&r[2];switch(a){case Li:n=8,i=Qt.COMPRESSED_RGB_S3TC_DXT1_EXT;break;case Pi:n=16,i=Qt.COMPRESSED_RGBA_S3TC_DXT3_EXT;break;case Di:n=16,i=Qt.COMPRESSED_RGBA_S3TC_DXT5_EXT;break;default:return null}var c=r[1]+4,h=u?6:1,f=1;l&&(f=Math.max(1,r[7]));for(var d=[],p=0;p<h;p++){var m=o,_=s;d[p]=new Nn({width:m,height:_,format:i});for(var v=[],g=0;g<f;g++){var y=Math.max(4,m)/4*Math.max(4,_)/4*n,x=new Uint8Array(e,c,y);c+=y,m*=.5,_*=.5,v[g]=x}d[p].pixels=v[0],l&&(d[p].mipmaps=v)}if(!t)return d[0];t.width=d[0].width,t.height=d[0].height,t.format=d[0].format,t.pixels=d[0].pixels,t.mipmaps=d[0].mipmaps}},Ii=String.fromCharCode,Fi=8,Bi=32767,Ui={parseRGBE:function(e,t,r){null==r&&(r=0);var n=new Uint8Array(e),i=n.length;if("#?"===me(n,0,2)){for(var a=2;a<i&&("\n"!==Ii(n[a])||"\n"!==Ii(n[a+1]));a++);if(!(a>=i)){a+=2;for(var o="";a<i;a++){var s=Ii(n[a]);if("\n"===s)break;o+=s}var u=o.split(" "),l=parseInt(u[1]),c=parseInt(u[3]);if(c&&l){for(var h=a+1,f=[],d=0;d<c;d++){f[d]=[];for(var p=0;p<4;p++)f[d][p]=0}for(var m=new Float32Array(c*l*4),_=0,v=0;v<l;v++){var h=ge(f,n,h,c);if(!h)return null;for(var d=0;d<c;d++)pe(f[d],m,_,r),_+=4}return t||(t=new Nn),t.width=c,t.height=l,t.pixels=m,t.type=Qt.FLOAT,t}}}},parseRGBEFromPNG:function(e){}},ki={loadTexture:function(e,t,r,n){var i;if("function"==typeof t?(r=t,n=r,t={}):t=t||{},"string"==typeof e){if(e.match(/.hdr$/)||"hdr"===t.fileType)return i=new Nn({width:0,height:0,sRGB:!1}),ki._fetchTexture(e,function(e){Ui.parseRGBE(e,i,t.exposure),i.dirty(),r&&r(i)},n),i;e.match(/.dds$/)||"dds"===t.fileType?(i=new Nn({width:0,height:0}),ki._fetchTexture(e,function(e){Oi.parse(e,i),i.dirty(),r&&r(i)},n)):(i=new Nn,i.load(e),i.success(r),i.error(n))}else"object"==typeof e&&void 0!==e.px&&(i=new Ti,i.load(e),i.success(r),i.error(n));return i},loadPanorama:function(e,t,r,n,i,a){var o=this;"function"==typeof n?(i=n,a=i,n={}):n=n||{},ki.loadTexture(t,n,function(t){t.flipY=n.flipY||!1,o.panoramaToCubeMap(e,t,r,n),t.dispose(e),i&&i(r)},a)},panoramaToCubeMap:function(e,t,r,n){var i=new Ri,a=new Mi({scene:new vn});return a.setEnvironmentMap(t),n=n||{},n.encodeRGBM&&a.material.define("fragment","RGBM_ENCODE"),r.sRGB=t.sRGB,i.texture=r,i.render(e,a.scene),i.texture=null,i.dispose(e),r},heightToNormal:function(e,t){var r=document.createElement("canvas"),n=r.width=e.width,i=r.height=e.height,a=r.getContext("2d");a.drawImage(e,0,0,n,i),t=t||!1;for(var o=a.getImageData(0,0,n,i),s=a.createImageData(n,i),u=0;u<o.data.length;u+=4){if(t){var l=o.data[u],c=o.data[u+1],h=o.data[u+2];if(Math.abs(l-c)+Math.abs(c-h)>20)return console.warn("Given image is not a height map"),e}var f,d,p,m;u%(4*n)==0?(f=o.data[u],p=o.data[u+4]):u%(4*n)==4*(n-1)?(f=o.data[u-4],p=o.data[u]):(f=o.data[u-4],p=o.data[u+4]),u<4*n?(d=o.data[u],m=o.data[u+4*n]):u>n*(i-1)*4?(d=o.data[u-4*n],m=o.data[u]):(d=o.data[u-4*n],m=o.data[u+4*n]),s.data[u]=f-p+127,s.data[u+1]=d-m+127,s.data[u+2]=255,s.data[u+3]=255}return a.putImageData(s,0,0),r},isHeightImage:function(e,t,r){if(!e||!e.width||!e.height)return!1;var n=document.createElement("canvas"),i=n.getContext("2d"),a=t||32;r=r||20,n.width=n.height=a,i.drawImage(e,0,0,a,a);for(var o=i.getImageData(0,0,a,a),s=0;s<o.data.length;s+=4){var u=o.data[s],l=o.data[s+1],c=o.data[s+2];if(Math.abs(u-l)+Math.abs(l-c)>r)return!1}return!0},_fetchTexture:function(e,t,r){zr.get({url:e,responseType:"arraybuffer",onload:t,onerror:r})},createChessboard:function(e,t,r,n){e=e||512,t=t||64,r=r||"black",n=n||"white";var i=Math.ceil(e/t),a=document.createElement("canvas");a.width=e,a.height=e;var o=a.getContext("2d");o.fillStyle=n,o.fillRect(0,0,e,e),o.fillStyle=r;for(var s=0;s<i;s++)for(var u=0;u<i;u++){var l=u%2?s%2:s%2-1;l&&o.fillRect(s*t,u*t,t,t)}return new Nn({image:a,anisotropic:8})},createBlank:function(e){var t=document.createElement("canvas");t.width=1,t.height=1;var r=t.getContext("2d");return r.fillStyle=e,r.fillRect(0,0,1,1),new Nn({image:t})}};L.import("\n@export clay.compositor.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\nvarying vec2 v_Texcoord;\nvoid main()\n{\n v_Texcoord = texcoord;\n gl_Position = worldViewProjection * vec4(position, 1.0);\n}\n@end");var Hi=new _i,zi=new Mn({geometry:Hi,frustumCulling:!1}),Gi=new Hn,Vi=At.extend(function(){return{fragment:"",outputs:null,material:null,blendWithPrevious:!1,clearColor:!1,clearDepth:!0}},function(){var e=new L(L.source("clay.compositor.vertex"),this.fragment),t=new sr({shader:e});t.enableTexturesAll(),this.material=t},{setUniform:function(e,t){this.material.setUniform(e,t)},getUniform:function(e){var t=this.material.uniforms[e];if(t)return t.value},attachOutput:function(e,t){this.outputs||(this.outputs={}),t=t||Ct.COLOR_ATTACHMENT0,this.outputs[t]=e},detachOutput:function(e){for(var t in this.outputs)this.outputs[t]===e&&(this.outputs[t]=null)},bind:function(e,t){if(this.outputs)for(var r in this.outputs){var n=this.outputs[r];n&&t.attach(n,r)}t&&t.bind(e)},unbind:function(e,t){t.unbind(e)},render:function(e,t){var r=e.gl;if(t){this.bind(e,t);var n=e.getGLExtension("EXT_draw_buffers");if(n&&this.outputs){var i=[];for(var a in this.outputs)(a=+a)>=r.COLOR_ATTACHMENT0&&a<=r.COLOR_ATTACHMENT0+8&&i.push(a);n.drawBuffersEXT(i)}}this.trigger("beforerender",this,e);var o=this.clearDepth?r.DEPTH_BUFFER_BIT:0;if(r.depthMask(!0),this.clearColor){o|=r.COLOR_BUFFER_BIT,r.colorMask(!0,!0,!0,!0);var s=this.clearColor;Array.isArray(s)&&r.clearColor(s[0],s[1],s[2],s[3])}r.clear(o),this.blendWithPrevious?(r.enable(r.BLEND),this.material.transparent=!0):(r.disable(r.BLEND),this.material.transparent=!1),this.renderQuad(e),this.trigger("afterrender",this,e),t&&this.unbind(e,t)},renderQuad:function(e){zi.material=this.material,e.renderPass([zi],Gi)},dispose:function(e){}}),Wi=function(){this._pool={},this._allocatedTextures=[]};Wi.prototype={constructor:Wi,get:function(e){var t=ye(e);this._pool.hasOwnProperty(t)||(this._pool[t]=[]);var r=this._pool[t];if(!r.length){var n=new Nn(e);return this._allocatedTextures.push(n),n}return r.pop()},put:function(e){var t=ye(e);this._pool.hasOwnProperty(t)||(this._pool[t]=[]),this._pool[t].push(e)},clear:function(e){for(var t=0;t<this._allocatedTextures.length;t++)this._allocatedTextures[t].dispose(e);this._pool={},this._allocatedTextures=[]}};var ji={width:512,height:512,type:Ct.UNSIGNED_BYTE,format:Ct.RGBA,wrapS:Ct.CLAMP_TO_EDGE,wrapT:Ct.CLAMP_TO_EDGE,minFilter:Ct.LINEAR_MIPMAP_LINEAR,magFilter:Ct.LINEAR,useMipmap:!0,anisotropic:1,flipY:!0,unpackAlignment:4,premultiplyAlpha:!1},Xi=Object.keys(ji),qi=Pt.mat4,Ki=["px","nx","py","ny","pz","nz"];L.import("@export clay.sm.depth.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nattribute vec3 position : POSITION;\n#ifdef SHADOW_TRANSPARENT\nattribute vec2 texcoord : TEXCOORD_0;\n#endif\n@import clay.chunk.skinning_header\nvarying vec4 v_ViewPosition;\n#ifdef SHADOW_TRANSPARENT\nvarying vec2 v_Texcoord;\n#endif\nvoid main(){\n vec3 skinnedPosition = position;\n#ifdef SKINNING\n @import clay.chunk.skin_matrix\n skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n#endif\n v_ViewPosition = worldViewProjection * vec4(skinnedPosition, 1.0);\n gl_Position = v_ViewPosition;\n#ifdef SHADOW_TRANSPARENT\n v_Texcoord = texcoord;\n#endif\n}\n@end\n@export clay.sm.depth.fragment\nvarying vec4 v_ViewPosition;\n#ifdef SHADOW_TRANSPARENT\nvarying vec2 v_Texcoord;\n#endif\nuniform float bias : 0.001;\nuniform float slopeScale : 1.0;\n#ifdef SHADOW_TRANSPARENT\nuniform sampler2D transparentMap;\n#endif\n@import clay.util.encode_float\nvoid main(){\n float depth = v_ViewPosition.z / v_ViewPosition.w;\n#ifdef USE_VSM\n depth = depth * 0.5 + 0.5;\n float moment1 = depth;\n float moment2 = depth * depth;\n float dx = dFdx(depth);\n float dy = dFdy(depth);\n moment2 += 0.25*(dx*dx+dy*dy);\n gl_FragColor = vec4(moment1, moment2, 0.0, 1.0);\n#else\n float dx = dFdx(depth);\n float dy = dFdy(depth);\n depth += sqrt(dx*dx + dy*dy) * slopeScale + bias;\n#ifdef SHADOW_TRANSPARENT\n if (texture2D(transparentMap, v_Texcoord).a <= 0.1) {\n gl_FragColor = encodeFloat(0.9999);\n return;\n }\n#endif\n gl_FragColor = encodeFloat(depth * 0.5 + 0.5);\n#endif\n}\n@end\n@export clay.sm.debug_depth\nuniform sampler2D depthMap;\nvarying vec2 v_Texcoord;\n@import clay.util.decode_float\nvoid main() {\n vec4 tex = texture2D(depthMap, v_Texcoord);\n#ifdef USE_VSM\n gl_FragColor = vec4(tex.rgb, 1.0);\n#else\n float depth = decodeFloat(tex);\n gl_FragColor = vec4(depth, depth, depth, 1.0);\n#endif\n}\n@end\n@export clay.sm.distance.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 world : WORLD;\nattribute vec3 position : POSITION;\n@import clay.chunk.skinning_header\nvarying vec3 v_WorldPosition;\nvoid main (){\n vec3 skinnedPosition = position;\n#ifdef SKINNING\n @import clay.chunk.skin_matrix\n skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n#endif\n gl_Position = worldViewProjection * vec4(skinnedPosition , 1.0);\n v_WorldPosition = (world * vec4(skinnedPosition, 1.0)).xyz;\n}\n@end\n@export clay.sm.distance.fragment\nuniform vec3 lightPosition;\nuniform float range : 100;\nvarying vec3 v_WorldPosition;\n@import clay.util.encode_float\nvoid main(){\n float dist = distance(lightPosition, v_WorldPosition);\n#ifdef USE_VSM\n gl_FragColor = vec4(dist, dist * dist, 0.0, 0.0);\n#else\n dist = dist / range;\n gl_FragColor = encodeFloat(dist);\n#endif\n}\n@end\n@export clay.plugin.shadow_map_common\n@import clay.util.decode_float\nfloat tapShadowMap(sampler2D map, vec2 uv, float z){\n vec4 tex = texture2D(map, uv);\n return step(z, decodeFloat(tex) * 2.0 - 1.0);\n}\nfloat pcf(sampler2D map, vec2 uv, float z, float textureSize, vec2 scale) {\n float shadowContrib = tapShadowMap(map, uv, z);\n vec2 offset = vec2(1.0 / textureSize) * scale;\n#ifdef PCF_KERNEL_SIZE\n for (int _idx_ = 0; _idx_ < PCF_KERNEL_SIZE; _idx_++) {{\n shadowContrib += tapShadowMap(map, uv + offset * pcfKernel[_idx_], z);\n }}\n return shadowContrib / float(PCF_KERNEL_SIZE + 1);\n#else\n shadowContrib += tapShadowMap(map, uv+vec2(offset.x, 0.0), z);\n shadowContrib += tapShadowMap(map, uv+vec2(offset.x, offset.y), z);\n shadowContrib += tapShadowMap(map, uv+vec2(-offset.x, offset.y), z);\n shadowContrib += tapShadowMap(map, uv+vec2(0.0, offset.y), z);\n shadowContrib += tapShadowMap(map, uv+vec2(-offset.x, 0.0), z);\n shadowContrib += tapShadowMap(map, uv+vec2(-offset.x, -offset.y), z);\n shadowContrib += tapShadowMap(map, uv+vec2(offset.x, -offset.y), z);\n shadowContrib += tapShadowMap(map, uv+vec2(0.0, -offset.y), z);\n return shadowContrib / 9.0;\n#endif\n}\nfloat pcf(sampler2D map, vec2 uv, float z, float textureSize) {\n return pcf(map, uv, z, textureSize, vec2(1.0));\n}\nfloat chebyshevUpperBound(vec2 moments, float z){\n float p = 0.0;\n z = z * 0.5 + 0.5;\n if (z <= moments.x) {\n p = 1.0;\n }\n float variance = moments.y - moments.x * moments.x;\n variance = max(variance, 0.0000001);\n float mD = moments.x - z;\n float pMax = variance / (variance + mD * mD);\n pMax = clamp((pMax-0.4)/(1.0-0.4), 0.0, 1.0);\n return max(p, pMax);\n}\nfloat computeShadowContrib(\n sampler2D map, mat4 lightVPM, vec3 position, float textureSize, vec2 scale, vec2 offset\n) {\n vec4 posInLightSpace = lightVPM * vec4(position, 1.0);\n posInLightSpace.xyz /= posInLightSpace.w;\n float z = posInLightSpace.z;\n if(all(greaterThan(posInLightSpace.xyz, vec3(-0.99, -0.99, -1.0))) &&\n all(lessThan(posInLightSpace.xyz, vec3(0.99, 0.99, 1.0)))){\n vec2 uv = (posInLightSpace.xy+1.0) / 2.0;\n #ifdef USE_VSM\n vec2 moments = texture2D(map, uv * scale + offset).xy;\n return chebyshevUpperBound(moments, z);\n #else\n return pcf(map, uv * scale + offset, z, textureSize, scale);\n #endif\n }\n return 1.0;\n}\nfloat computeShadowContrib(sampler2D map, mat4 lightVPM, vec3 position, float textureSize) {\n return computeShadowContrib(map, lightVPM, position, textureSize, vec2(1.0), vec2(0.0));\n}\nfloat computeShadowContribOmni(samplerCube map, vec3 direction, float range)\n{\n float dist = length(direction);\n vec4 shadowTex = textureCube(map, direction);\n#ifdef USE_VSM\n vec2 moments = shadowTex.xy;\n float variance = moments.y - moments.x * moments.x;\n float mD = moments.x - dist;\n float p = variance / (variance + mD * mD);\n if(moments.x + 0.001 < dist){\n return clamp(p, 0.0, 1.0);\n }else{\n return 1.0;\n }\n#else\n return step(dist, (decodeFloat(shadowTex) + 0.0002) * range);\n#endif\n}\n@end\n@export clay.plugin.compute_shadow_map\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT) || defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT) || defined(POINT_LIGHT_SHADOWMAP_COUNT)\n#ifdef SPOT_LIGHT_SHADOWMAP_COUNT\nuniform sampler2D spotLightShadowMaps[SPOT_LIGHT_SHADOWMAP_COUNT]:unconfigurable;\nuniform mat4 spotLightMatrices[SPOT_LIGHT_SHADOWMAP_COUNT]:unconfigurable;\nuniform float spotLightShadowMapSizes[SPOT_LIGHT_SHADOWMAP_COUNT]:unconfigurable;\n#endif\n#ifdef DIRECTIONAL_LIGHT_SHADOWMAP_COUNT\n#if defined(SHADOW_CASCADE)\nuniform sampler2D directionalLightShadowMaps[1]:unconfigurable;\nuniform mat4 directionalLightMatrices[SHADOW_CASCADE]:unconfigurable;\nuniform float directionalLightShadowMapSizes[1]:unconfigurable;\nuniform float shadowCascadeClipsNear[SHADOW_CASCADE]:unconfigurable;\nuniform float shadowCascadeClipsFar[SHADOW_CASCADE]:unconfigurable;\n#else\nuniform sampler2D directionalLightShadowMaps[DIRECTIONAL_LIGHT_SHADOWMAP_COUNT]:unconfigurable;\nuniform mat4 directionalLightMatrices[DIRECTIONAL_LIGHT_SHADOWMAP_COUNT]:unconfigurable;\nuniform float directionalLightShadowMapSizes[DIRECTIONAL_LIGHT_SHADOWMAP_COUNT]:unconfigurable;\n#endif\n#endif\n#ifdef POINT_LIGHT_SHADOWMAP_COUNT\nuniform samplerCube pointLightShadowMaps[POINT_LIGHT_SHADOWMAP_COUNT]:unconfigurable;\n#endif\nuniform bool shadowEnabled : true;\n#ifdef PCF_KERNEL_SIZE\nuniform vec2 pcfKernel[PCF_KERNEL_SIZE];\n#endif\n@import clay.plugin.shadow_map_common\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT)\nvoid computeShadowOfSpotLights(vec3 position, inout float shadowContribs[SPOT_LIGHT_COUNT] ) {\n float shadowContrib;\n for(int _idx_ = 0; _idx_ < SPOT_LIGHT_SHADOWMAP_COUNT; _idx_++) {{\n shadowContrib = computeShadowContrib(\n spotLightShadowMaps[_idx_], spotLightMatrices[_idx_], position,\n spotLightShadowMapSizes[_idx_]\n );\n shadowContribs[_idx_] = shadowContrib;\n }}\n for(int _idx_ = SPOT_LIGHT_SHADOWMAP_COUNT; _idx_ < SPOT_LIGHT_COUNT; _idx_++){{\n shadowContribs[_idx_] = 1.0;\n }}\n}\n#endif\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n#ifdef SHADOW_CASCADE\nvoid computeShadowOfDirectionalLights(vec3 position, inout float shadowContribs[DIRECTIONAL_LIGHT_COUNT]){\n float depth = (2.0 * gl_FragCoord.z - gl_DepthRange.near - gl_DepthRange.far)\n / (gl_DepthRange.far - gl_DepthRange.near);\n float shadowContrib;\n shadowContribs[0] = 1.0;\n for (int _idx_ = 0; _idx_ < SHADOW_CASCADE; _idx_++) {{\n if (\n depth >= shadowCascadeClipsNear[_idx_] &&\n depth <= shadowCascadeClipsFar[_idx_]\n ) {\n shadowContrib = computeShadowContrib(\n directionalLightShadowMaps[0], directionalLightMatrices[_idx_], position,\n directionalLightShadowMapSizes[0],\n vec2(1.0 / float(SHADOW_CASCADE), 1.0),\n vec2(float(_idx_) / float(SHADOW_CASCADE), 0.0)\n );\n shadowContribs[0] = shadowContrib;\n }\n }}\n for(int _idx_ = DIRECTIONAL_LIGHT_SHADOWMAP_COUNT; _idx_ < DIRECTIONAL_LIGHT_COUNT; _idx_++) {{\n shadowContribs[_idx_] = 1.0;\n }}\n}\n#else\nvoid computeShadowOfDirectionalLights(vec3 position, inout float shadowContribs[DIRECTIONAL_LIGHT_COUNT]){\n float shadowContrib;\n for(int _idx_ = 0; _idx_ < DIRECTIONAL_LIGHT_SHADOWMAP_COUNT; _idx_++) {{\n shadowContrib = computeShadowContrib(\n directionalLightShadowMaps[_idx_], directionalLightMatrices[_idx_], position,\n directionalLightShadowMapSizes[_idx_]\n );\n shadowContribs[_idx_] = shadowContrib;\n }}\n for(int _idx_ = DIRECTIONAL_LIGHT_SHADOWMAP_COUNT; _idx_ < DIRECTIONAL_LIGHT_COUNT; _idx_++) {{\n shadowContribs[_idx_] = 1.0;\n }}\n}\n#endif\n#endif\n#if defined(POINT_LIGHT_SHADOWMAP_COUNT)\nvoid computeShadowOfPointLights(vec3 position, inout float shadowContribs[POINT_LIGHT_COUNT] ){\n vec3 lightPosition;\n vec3 direction;\n for(int _idx_ = 0; _idx_ < POINT_LIGHT_SHADOWMAP_COUNT; _idx_++) {{\n lightPosition = pointLightPosition[_idx_];\n direction = position - lightPosition;\n shadowContribs[_idx_] = computeShadowContribOmni(pointLightShadowMaps[_idx_], direction, pointLightRange[_idx_]);\n }}\n for(int _idx_ = POINT_LIGHT_SHADOWMAP_COUNT; _idx_ < POINT_LIGHT_COUNT; _idx_++) {{\n shadowContribs[_idx_] = 1.0;\n }}\n}\n#endif\n#endif\n@end");var Yi=At.extend(function(){return{softShadow:Yi.PCF,shadowBlur:1,lightFrustumBias:"auto",kernelPCF:new Float32Array([1,0,1,1,-1,1,0,1,-1,0,-1,-1,1,-1,0,-1]),precision:"highp",_lastRenderNotCastShadow:!1,_frameBuffer:new wi,_textures:{},_shadowMapNumber:{POINT_LIGHT:0,DIRECTIONAL_LIGHT:0,SPOT_LIGHT:0},_depthMaterials:{},_distanceMaterials:{},_receivers:[],_lightsCastShadow:[],_lightCameras:{},_lightMaterials:{},_texturePool:new Wi}},function(){this._gaussianPassH=new Vi({fragment:L.source("clay.compositor.gaussian_blur")}),this._gaussianPassV=new Vi({fragment:L.source("clay.compositor.gaussian_blur")}),this._gaussianPassH.setUniform("blurSize",this.shadowBlur),this._gaussianPassH.setUniform("blurDir",0),this._gaussianPassV.setUniform("blurSize",this.shadowBlur),this._gaussianPassV.setUniform("blurDir",1),this._outputDepthPass=new Vi({fragment:L.source("clay.sm.debug_depth")})},{render:function(e,t,r,n){r||(r=t.getMainCamera()),this.trigger("beforerender",this,e,t,r),this._renderShadowPass(e,t,r,n),this.trigger("afterrender",this,e,t,r)},renderDebug:function(e,t){e.saveClear();var r=e.viewport,n=0,i=t||r.width/4,a=i;this.softShadow===Yi.VSM?this._outputDepthPass.material.define("fragment","USE_VSM"):this._outputDepthPass.material.undefine("fragment","USE_VSM");for(var o in this._textures){var s=this._textures[o];e.setViewport(n,0,i*s.width/s.height,a),this._outputDepthPass.setUniform("depthMap",s),this._outputDepthPass.render(e),n+=i*s.width/s.height}e.setViewport(r),e.restoreClear()},_updateReceivers:function(e,t){if(t.receiveShadow?(this._receivers.push(t),t.material.set("shadowEnabled",1),t.material.set("pcfKernel",this.kernelPCF)):t.material.set("shadowEnabled",0),this.softShadow===Yi.VSM)t.material.define("fragment","USE_VSM"),t.material.undefine("fragment","PCF_KERNEL_SIZE");else{t.material.undefine("fragment","USE_VSM");var r=this.kernelPCF;r&&r.length?t.material.define("fragment","PCF_KERNEL_SIZE",r.length/2):t.material.undefine("fragment","PCF_KERNEL_SIZE")}},_update:function(e,t){var r=this;t.traverse(function(t){t.isRenderable()&&r._updateReceivers(e,t)});for(var n=0;n<t.lights.length;n++){var i=t.lights[n];i.castShadow&&!i.invisible&&this._lightsCastShadow.push(i)}},_renderShadowPass:function(e,t,r,n){function i(e){return e.height}for(var a in this._shadowMapNumber)this._shadowMapNumber[a]=0;this._lightsCastShadow.length=0,this._receivers.length=0;var o=e.gl;if(n||t.update(),r&&r.update(),t.updateLights(),this._update(e,t),this._lightsCastShadow.length||!this._lastRenderNotCastShadow){this._lastRenderNotCastShadow=0===this._lightsCastShadow,o.enable(o.DEPTH_TEST),o.depthMask(!0),o.disable(o.BLEND),o.clearColor(1,1,1,1);for(var s,u=[],l=[],c=[],h=[],f=[],d=[],p=0;p<this._lightsCastShadow.length;p++){var m=this._lightsCastShadow[p];if("DIRECTIONAL_LIGHT"===m.type){if(s){console.warn("Only one direectional light supported with shadow cascade");continue}if(m.shadowCascade>4){console.warn("Support at most 4 cascade");continue}m.shadowCascade>1&&(s=m),this.renderDirectionalLightShadow(e,t,r,m,f,h,c)}else"SPOT_LIGHT"===m.type?this.renderSpotLightShadow(e,t,m,l,u):"POINT_LIGHT"===m.type&&this.renderPointLightShadow(e,t,m,d);this._shadowMapNumber[m.type]++}for(var _ in this._shadowMapNumber)for(var v=this._shadowMapNumber[_],g=_+"_SHADOWMAP_COUNT",p=0;p<this._receivers.length;p++){var y=this._receivers[p],x=y.material;x.fragmentDefines[g]!==v&&(v>0?x.define("fragment",g,v):x.isDefined("fragment",g)&&x.undefine("fragment",g))}for(var p=0;p<this._receivers.length;p++){var y=this._receivers[p],x=y.material;s?x.define("fragment","SHADOW_CASCADE",s.shadowCascade):x.undefine("fragment","SHADOW_CASCADE")}var T=t.shadowUniforms;if(c.length>0){var E=c.map(i);if(T.directionalLightShadowMaps={value:c,type:"tv"},T.directionalLightMatrices={value:h,type:"m4v"},T.directionalLightShadowMapSizes={value:E,type:"1fv"},s){var b=f.slice(),A=f.slice();b.pop(),A.shift(),b.reverse(),A.reverse(),h.reverse(),T.shadowCascadeClipsNear={value:b,type:"1fv"},T.shadowCascadeClipsFar={value:A,type:"1fv"}}}if(u.length>0){var S=u.map(i),T=t.shadowUniforms;T.spotLightShadowMaps={value:u,type:"tv"},T.spotLightMatrices={value:l,type:"m4v"},T.spotLightShadowMapSizes={value:S,type:"1fv"}}d.length>0&&(T.pointLightShadowMaps={value:d,type:"tv"})}},renderDirectionalLightShadow:function(){var e=new sn,t=new Kt,r=new Vt,n=new Kt,i=new Kt,a=new Kt,o=new Kt;return function(s,u,l,c,h,f,d){var p=this._getDepthMaterial(c),m={getMaterial:function(e){return e.shadowDepthMaterial||p},ifRender:function(e){return e.castShadow},sortCompare:kr.opaqueSortCompare};if(!u.viewBoundingBoxLastFrame.isFinite()){var _=u.getBoundingBox();u.viewBoundingBoxLastFrame.copy(_).applyTransform(l.viewMatrix)}var v=Math.min(-u.viewBoundingBoxLastFrame.min.z,l.far),g=Math.max(-u.viewBoundingBoxLastFrame.max.z,l.near),y=this._getDirectionalLightCamera(c,u,l),x=a.array;o.copy(y.projectionMatrix),qi.invert(i.array,y.worldTransform.array),qi.multiply(i.array,i.array,l.worldTransform.array),qi.multiply(x,o.array,i.array);for(var T=[],E=l instanceof kn,b=(l.near+l.far)/(l.near-l.far),A=2*l.near*l.far/(l.near-l.far),S=0;S<=c.shadowCascade;S++){var w=g*Math.pow(v/g,S/c.shadowCascade),C=g+(v-g)*S/c.shadowCascade,R=w*c.cascadeSplitLogFactor+C*(1-c.cascadeSplitLogFactor);T.push(R),h.push(-(-R*b+A)/-R)}var N=this._getTexture(c,c.shadowCascade);d.push(N);var M=s.viewport,L=s.gl;this._frameBuffer.attach(N),this._frameBuffer.bind(s),L.clear(L.COLOR_BUFFER_BIT|L.DEPTH_BUFFER_BIT);for(var S=0;S<c.shadowCascade;S++){var P=T[S],D=T[S+1];E?qi.perspective(t.array,l.fov/180*Math.PI,l.aspect,P,D):qi.ortho(t.array,l.left,l.right,l.bottom,l.top,P,D),e.setFromProjection(t),e.getTransformedBoundingBox(r,i),r.applyProjection(o);var O=r.min.array,I=r.max.array;O[0]=Math.max(O[0],-1),O[1]=Math.max(O[1],-1),I[0]=Math.min(I[0],1),I[1]=Math.min(I[1],1),n.ortho(O[0],I[0],O[1],I[1],1,-1),y.projectionMatrix.multiplyLeft(n);var F=c.shadowResolution||512;s.setViewport((c.shadowCascade-S-1)*F,0,F,F,1);var B=u.updateRenderList(y);s.renderPass(B.opaque,y,m),this.softShadow===Yi.VSM&&this._gaussianFilter(s,N,N.width);var U=new Kt;U.copy(y.viewMatrix).multiplyLeft(y.projectionMatrix),f.push(U.array),y.projectionMatrix.copy(o)}this._frameBuffer.unbind(s),s.setViewport(M)}}(),renderSpotLightShadow:function(e,t,r,n,i){var a=this._getTexture(r),o=this._getSpotLightCamera(r),s=e.gl;this._frameBuffer.attach(a),this._frameBuffer.bind(e),s.clear(s.COLOR_BUFFER_BIT|s.DEPTH_BUFFER_BIT);var u=this._getDepthMaterial(r),l={getMaterial:function(e){return e.shadowDepthMaterial||u},ifRender:function(e){return e.castShadow},sortCompare:kr.opaqueSortCompare},c=t.updateRenderList(o);e.renderPass(c.opaque,o,l),this._frameBuffer.unbind(e),this.softShadow===Yi.VSM&&this._gaussianFilter(e,a,a.width);var h=new Kt;h.copy(o.worldTransform).invert().multiplyLeft(o.projectionMatrix),i.push(a),n.push(h.array)},renderPointLightShadow:function(e,t,r,n){var i=this._getTexture(r),a=e.gl;n.push(i);var o=this._getDepthMaterial(r),s={getMaterial:function(e){return e.shadowDepthMaterial||o},sortCompare:kr.opaqueSortCompare},u={px:[],py:[],pz:[],nx:[],ny:[],nz:[]},l=new Vt,c=r.getWorldPosition().array,h=new Vt,f=r.range;h.min.setArray(c),h.max.setArray(c);var d=new Ot(f,f,f);h.max.add(d),h.min.sub(d);var p={px:!1,py:!1,pz:!1,nx:!1,ny:!1,nz:!1};t.traverse(function(e){if(e.isRenderable()&&e.castShadow){var t=e.geometry;if(!t.boundingBox){for(var r=0;r<Ki.length;r++)u[Ki[r]].push(e);return}if(l.transformFrom(t.boundingBox,e.worldTransform),!l.intersectBoundingBox(h))return;l.updateVertices();for(var r=0;r<Ki.length;r++)p[Ki[r]]=!1;for(var r=0;r<8;r++){var n=l.vertices[r],i=n[0]-c[0],a=n[1]-c[1],o=n[2]-c[2],s=Math.abs(i),f=Math.abs(a),d=Math.abs(o);s>f?s>d?p[i>0?"px":"nx"]=!0:p[o>0?"pz":"nz"]=!0:f>d?p[a>0?"py":"ny"]=!0:p[o>0?"pz":"nz"]=!0}for(var r=0;r<Ki.length;r++)p[Ki[r]]&&u[Ki[r]].push(e)}});for(var m=0;m<6;m++){var _=Ki[m],v=this._getPointLightCamera(r,_);this._frameBuffer.attach(i,a.COLOR_ATTACHMENT0,a.TEXTURE_CUBE_MAP_POSITIVE_X+m),this._frameBuffer.bind(e),a.clear(a.COLOR_BUFFER_BIT|a.DEPTH_BUFFER_BIT),e.renderPass(u[_],v,s)}this._frameBuffer.unbind(e)},_getDepthMaterial:function(e){var t=this._lightMaterials[e.__uid__],r="POINT_LIGHT"===e.type;if(!t){var n=r?"clay.sm.distance.":"clay.sm.depth.";t=new sr({precision:this.precision,shader:new L(L.source(n+"vertex"),L.source(n+"fragment"))}),this._lightMaterials[e.__uid__]=t}return null!=e.shadowSlopeScale&&t.setUniform("slopeScale",e.shadowSlopeScale),null!=e.shadowBias&&t.setUniform("bias",e.shadowBias),this.softShadow===Yi.VSM?t.define("fragment","USE_VSM"):t.undefine("fragment","USE_VSM"),r&&(t.set("lightPosition",e.getWorldPosition().array),t.set("range",e.range)),t},_gaussianFilter:function(e,t,r){var n={width:r,height:r,type:Qt.FLOAT},i=this._texturePool.get(n);this._frameBuffer.attach(i),this._frameBuffer.bind(e),this._gaussianPassH.setUniform("texture",t),this._gaussianPassH.setUniform("textureWidth",r),this._gaussianPassH.render(e),this._frameBuffer.attach(t),this._gaussianPassV.setUniform("texture",i),this._gaussianPassV.setUniform("textureHeight",r),this._gaussianPassV.render(e),this._frameBuffer.unbind(e),this._texturePool.put(i)},_getTexture:function(e,t){var r=e.__uid__,n=this._textures[r],i=e.shadowResolution||512;return t=t||1,n||(n="POINT_LIGHT"===e.type?new Ti:new Nn,n.width=i*t,n.height=i,this.softShadow===Yi.VSM?(n.type=Qt.FLOAT,n.anisotropic=4):(n.minFilter=Ct.NEAREST,n.magFilter=Ct.NEAREST,n.useMipmap=!1),this._textures[r]=n),n},_getPointLightCamera:function(e,t){this._lightCameras.point||(this._lightCameras.point={px:new kn,nx:new kn,py:new kn,ny:new kn,pz:new kn,nz:new kn});var r=this._lightCameras.point[t];switch(r.far=e.range,r.fov=90,r.position.set(0,0,0),t){case"px":r.lookAt(Ot.POSITIVE_X,Ot.NEGATIVE_Y);break;case"nx":r.lookAt(Ot.NEGATIVE_X,Ot.NEGATIVE_Y);break;case"py":r.lookAt(Ot.POSITIVE_Y,Ot.POSITIVE_Z);break;case"ny":r.lookAt(Ot.NEGATIVE_Y,Ot.NEGATIVE_Z);break;case"pz":r.lookAt(Ot.POSITIVE_Z,Ot.NEGATIVE_Y);break;case"nz":r.lookAt(Ot.NEGATIVE_Z,Ot.NEGATIVE_Y)}return e.getWorldPosition(r.position),r.update(),r},_getDirectionalLightCamera:function(){var e=new Kt,t=new Vt,r=new Vt;return function(n,i,a){this._lightCameras.directional||(this._lightCameras.directional=new Hn);var o=this._lightCameras.directional;t.copy(i.viewBoundingBoxLastFrame),t.intersection(a.frustum.boundingBox),o.position.copy(t.min).add(t.max).scale(.5).transformMat4(a.worldTransform),o.rotation.copy(n.rotation),o.scale.copy(n.scale),o.updateWorldTransform(),Kt.invert(e,o.worldTransform),Kt.multiply(e,e,a.worldTransform),r.copy(t).applyTransform(e);var s=r.min.array,u=r.max.array;return o.position.set((s[0]+u[0])/2,(s[1]+u[1])/2,u[2]).transformMat4(o.worldTransform),o.near=0,o.far=-s[2]+u[2],isNaN(this.lightFrustumBias)?o.far*=4:o.far+=this.lightFrustumBias,o.left=s[0],o.right=u[0],o.top=u[1],o.bottom=s[1],o.update(!0),o}}(),_getSpotLightCamera:function(e){this._lightCameras.spot||(this._lightCameras.spot=new kn);var t=this._lightCameras.spot;return t.fov=2*e.penumbraAngle,t.far=e.range,t.worldTransform.copy(e.worldTransform),t.updateProjectionMatrix(),qi.invert(t.viewMatrix.array,t.worldTransform.array),t},dispose:function(e){var t=e.gl||e;this._frameBuffer&&this._frameBuffer.dispose(t);for(var r in this._textures)this._textures[r].dispose(t);this._texturePool.clear(e.gl),this._depthMaterials={},this._distanceMaterials={},this._textures={},this._lightCameras={},this._shadowMapNumber={POINT_LIGHT:0,DIRECTIONAL_LIGHT:0,SPOT_LIGHT:0},this._meshMaterials={};for(var n=0;n<this._receivers.length;n++){var i=this._receivers[n];if(i.material){var a=i.material;a.undefine("fragment","POINT_LIGHT_SHADOW_COUNT"),a.undefine("fragment","DIRECTIONAL_LIGHT_SHADOW_COUNT"),a.undefine("fragment","AMBIENT_LIGHT_SHADOW_COUNT"),a.set("shadowEnabled",0)}}this._receivers=[],
this._lightsCastShadow=[]}});Yi.VSM=1,Yi.PCF=2;var Zi=At.extend(function(){return{name:"",inputLinks:{},outputLinks:{},_prevOutputTextures:{},_outputTextures:{},_outputReferences:{},_rendering:!1,_rendered:!1,_compositor:null}},{updateParameter:function(e,t){var r=this.outputs[e],n=r.parameters,i=r._parametersCopy;if(i||(i=r._parametersCopy={}),n)for(var a in n)"width"!==a&&"height"!==a&&(i[a]=n[a]);var o,s;return o=n.width instanceof Function?n.width.call(this,t):n.width,s=n.height instanceof Function?n.height.call(this,t):n.height,i.width===o&&i.height===s||this._outputTextures[e]&&this._outputTextures[e].dispose(t.gl),i.width=o,i.height=s,i},setParameter:function(e,t){},getParameter:function(e){},setParameters:function(e){for(var t in e)this.setParameter(t,e[t])},render:function(){},getOutput:function(e,t){if(null==t)return t=e,this._outputTextures[t];var r=this.outputs[t];if(r)return this._rendered?r.outputLastFrame?this._prevOutputTextures[t]:this._outputTextures[t]:this._rendering?(this._prevOutputTextures[t]||(this._prevOutputTextures[t]=this._compositor.allocateTexture(r.parameters||{})),this._prevOutputTextures[t]):(this.render(e),this._outputTextures[t])},removeReference:function(e){if(0===--this._outputReferences[e]){this.outputs[e].keepLastFrame?(this._prevOutputTextures[e]&&this._compositor.releaseTexture(this._prevOutputTextures[e]),this._prevOutputTextures[e]=this._outputTextures[e]):this._compositor.releaseTexture(this._outputTextures[e])}},link:function(e,t,r){this.inputLinks[e]={node:t,pin:r},t.outputLinks[r]||(t.outputLinks[r]=[]),t.outputLinks[r].push({node:this,pin:e}),this.pass.material.enableTexture(e)},clear:function(){this.inputLinks={},this.outputLinks={}},updateReference:function(e){if(!this._rendering){this._rendering=!0;for(var t in this.inputLinks){var r=this.inputLinks[t];r.node.updateReference(r.pin)}this._rendering=!1}e&&this._outputReferences[e]++},beforeFrame:function(){this._rendered=!1;for(var e in this.outputLinks)this._outputReferences[e]=0},afterFrame:function(){for(var e in this.outputLinks)if(this._outputReferences[e]>0){var t=this.outputs[e];t.keepLastFrame?(this._prevOutputTextures[e]&&this._compositor.releaseTexture(this._prevOutputTextures[e]),this._prevOutputTextures[e]=this._outputTextures[e]):this._compositor.releaseTexture(this._outputTextures[e])}}}),Ji=At.extend(function(){return{nodes:[]}},{dirty:function(){this._dirty=!0},addNode:function(e){this.nodes.indexOf(e)>=0||(this.nodes.push(e),this._dirty=!0)},removeNode:function(e){"string"==typeof e&&(e=this.getNodeByName(e));var t=this.nodes.indexOf(e);t>=0&&(this.nodes.splice(t,1),this._dirty=!0)},getNodeByName:function(e){for(var t=0;t<this.nodes.length;t++)if(this.nodes[t].name===e)return this.nodes[t]},update:function(){for(var e=0;e<this.nodes.length;e++)this.nodes[e].clear();for(var e=0;e<this.nodes.length;e++){var t=this.nodes[e];if(t.inputs)for(var r in t.inputs)if(t.inputs[r])if(!t.pass||t.pass.material.isUniformEnabled(r)){var n=t.inputs[r],i=this.findPin(n);i?t.link(r,i.node,i.pin):"string"==typeof n?console.warn("Node "+n+" not exist"):console.warn("Pin of "+n.node+"."+n.pin+" not exist")}else console.warn("Pin "+t.name+"."+r+" not used.")}},findPin:function(e){var t;if(("string"==typeof e||e instanceof Zi)&&(e={node:e}),"string"==typeof e.node)for(var r=0;r<this.nodes.length;r++){var n=this.nodes[r];n.name===e.node&&(t=n)}else t=e.node;if(t){var i=e.pin;if(i||t.outputs&&(i=Object.keys(t.outputs)[0]),t.outputs[i])return{node:t,pin:i}}}}),Qi=Ji.extend(function(){return{_outputs:[],_texturePool:new Wi,_frameBuffer:new wi({depthBuffer:!1})}},{addNode:function(e){Ji.prototype.addNode.call(this,e),e._compositor=this},render:function(e,t){if(this._dirty){this.update(),this._dirty=!1,this._outputs.length=0;for(var r=0;r<this.nodes.length;r++)this.nodes[r].outputs||this._outputs.push(this.nodes[r])}for(var r=0;r<this.nodes.length;r++)this.nodes[r].beforeFrame();for(var r=0;r<this._outputs.length;r++)this._outputs[r].updateReference();for(var r=0;r<this._outputs.length;r++)this._outputs[r].render(e,t);for(var r=0;r<this.nodes.length;r++)this.nodes[r].afterFrame()},allocateTexture:function(e){return this._texturePool.get(e)},releaseTexture:function(e){this._texturePool.put(e)},getFrameBuffer:function(){return this._frameBuffer},dispose:function(e){this._texturePool.clear(e)}}),$i=Zi.extend({name:"scene",scene:null,camera:null,autoUpdateScene:!0,preZ:!1},function(){this.frameBuffer=new wi},{render:function(e){this._rendering=!0;var t=e.gl;this.trigger("beforerender");var r;if(this.outputs){var n=this.frameBuffer;for(var i in this.outputs){var a=this.updateParameter(i,e),o=this.outputs[i],s=this._compositor.allocateTexture(a);this._outputTextures[i]=s;var u=o.attachment||t.COLOR_ATTACHMENT0;"string"==typeof u&&(u=t[u]),n.attach(s,u)}n.bind(e);var l=e.getGLExtension("EXT_draw_buffers");if(l){var c=[];for(var u in this.outputs)(u=parseInt(u))>=t.COLOR_ATTACHMENT0&&u<=t.COLOR_ATTACHMENT0+8&&c.push(u);l.drawBuffersEXT(c)}e.saveClear(),e.clearBit=Ct.DEPTH_BUFFER_BIT|Ct.COLOR_BUFFER_BIT,r=e.render(this.scene,this.camera,!this.autoUpdateScene,this.preZ),e.restoreClear(),n.unbind(e)}else r=e.render(this.scene,this.camera,!this.autoUpdateScene,this.preZ);this.trigger("afterrender",r),this._rendering=!1,this._rendered=!0}}),ea=Zi.extend(function(){return{texture:null,outputs:{color:{}}}},function(){},{getOutput:function(e,t){return this.texture},beforeFrame:function(){},afterFrame:function(){}}),ta=Zi.extend(function(){return{name:"",inputs:{},outputs:null,shader:"",inputLinks:{},outputLinks:{},pass:null,_prevOutputTextures:{},_outputTextures:{},_outputReferences:{},_rendering:!1,_rendered:!1,_compositor:null}},function(){var e=new Vi({fragment:this.shader});this.pass=e},{render:function(e,t){this.trigger("beforerender",e),this._rendering=!0;var r=e.gl;for(var n in this.inputLinks){var i=this.inputLinks[n],a=i.node.getOutput(e,i.pin);this.pass.setUniform(n,a)}if(this.outputs){this.pass.outputs={};var o={};for(var s in this.outputs){var u=this.updateParameter(s,e);isNaN(u.width)&&this.updateParameter(s,e);var l=this.outputs[s],c=this._compositor.allocateTexture(u);this._outputTextures[s]=c;var h=l.attachment||r.COLOR_ATTACHMENT0;"string"==typeof h&&(h=r[h]),o[h]=c}this._compositor.getFrameBuffer().bind(e);for(var h in o)this._compositor.getFrameBuffer().attach(o[h],h);this.pass.render(e),this._compositor.getFrameBuffer().updateMipmap(e.gl)}else this.pass.outputs=null,this._compositor.getFrameBuffer().unbind(e),this.pass.render(e,t);for(var n in this.inputLinks){var i=this.inputLinks[n];i.node.removeReference(i.pin)}this._rendering=!1,this._rendered=!0,this.trigger("afterrender",e)},updateParameter:function(e,t){var r=this.outputs[e],n=r.parameters,i=r._parametersCopy;if(i||(i=r._parametersCopy={}),n)for(var a in n)"width"!==a&&"height"!==a&&(i[a]=n[a]);var o,s;return o=n.width instanceof Function?n.width.call(this,t):n.width,s=n.height instanceof Function?n.height.call(this,t):n.height,i.width===o&&i.height===s||this._outputTextures[e]&&this._outputTextures[e].dispose(t),i.width=o,i.height=s,i},setParameter:function(e,t){this.pass.setUniform(e,t)},getParameter:function(e){return this.pass.getUniform(e)},setParameters:function(e){for(var t in e)this.setParameter(t,e[t])},define:function(e,t){this.pass.material.define("fragment",e,t)},undefine:function(e){this.pass.material.undefine("fragment",e)},removeReference:function(e){if(0===--this._outputReferences[e]){this.outputs[e].keepLastFrame?(this._prevOutputTextures[e]&&this._compositor.releaseTexture(this._prevOutputTextures[e]),this._prevOutputTextures[e]=this._outputTextures[e]):this._compositor.releaseTexture(this._outputTextures[e])}},clear:function(){Zi.prototype.clear.call(this),this.pass.material.disableTexturesAll()}}),ra="@export clay.compositor.kernel.gaussian_9\nfloat gaussianKernel[9];\ngaussianKernel[0] = 0.07;\ngaussianKernel[1] = 0.09;\ngaussianKernel[2] = 0.12;\ngaussianKernel[3] = 0.14;\ngaussianKernel[4] = 0.16;\ngaussianKernel[5] = 0.14;\ngaussianKernel[6] = 0.12;\ngaussianKernel[7] = 0.09;\ngaussianKernel[8] = 0.07;\n@end\n@export clay.compositor.kernel.gaussian_13\nfloat gaussianKernel[13];\ngaussianKernel[0] = 0.02;\ngaussianKernel[1] = 0.03;\ngaussianKernel[2] = 0.06;\ngaussianKernel[3] = 0.08;\ngaussianKernel[4] = 0.11;\ngaussianKernel[5] = 0.13;\ngaussianKernel[6] = 0.14;\ngaussianKernel[7] = 0.13;\ngaussianKernel[8] = 0.11;\ngaussianKernel[9] = 0.08;\ngaussianKernel[10] = 0.06;\ngaussianKernel[11] = 0.03;\ngaussianKernel[12] = 0.02;\n@end\n@export clay.compositor.gaussian_blur\n#define SHADER_NAME gaussian_blur\nuniform sampler2D texture;varying vec2 v_Texcoord;\nuniform float blurSize : 2.0;\nuniform vec2 textureSize : [512.0, 512.0];\nuniform float blurDir : 0.0;\n@import clay.util.rgbm\n@import clay.util.clamp_sample\nvoid main (void)\n{\n @import clay.compositor.kernel.gaussian_9\n vec2 off = blurSize / textureSize;\n off *= vec2(1.0 - blurDir, blurDir);\n vec4 sum = vec4(0.0);\n float weightAll = 0.0;\n for (int i = 0; i < 9; i++) {\n float w = gaussianKernel[i];\n vec4 texel = decodeHDR(clampSample(texture, v_Texcoord + float(i - 4) * off));\n sum += texel * w;\n weightAll += w;\n }\n gl_FragColor = encodeHDR(sum / max(weightAll, 0.01));\n}\n@end\n",na="@export clay.compositor.output\n#define OUTPUT_ALPHA\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\n@import clay.util.rgbm\nvoid main()\n{\n vec4 tex = decodeHDR(texture2D(texture, v_Texcoord));\n gl_FragColor.rgb = tex.rgb;\n#ifdef OUTPUT_ALPHA\n gl_FragColor.a = tex.a;\n#else\n gl_FragColor.a = 1.0;\n#endif\n gl_FragColor = encodeHDR(gl_FragColor);\n#ifdef PREMULTIPLY_ALPHA\n gl_FragColor.rgb *= gl_FragColor.a;\n#endif\n}\n@end",ia="@export clay.compositor.bright\nuniform sampler2D texture;\nuniform float threshold : 1;\nuniform float scale : 1.0;\nuniform vec2 textureSize: [512, 512];\nvarying vec2 v_Texcoord;\nconst vec3 lumWeight = vec3(0.2125, 0.7154, 0.0721);\n@import clay.util.rgbm\nvec4 median(vec4 a, vec4 b, vec4 c)\n{\n return a + b + c - min(min(a, b), c) - max(max(a, b), c);\n}\nvoid main()\n{\n vec4 texel = decodeHDR(texture2D(texture, v_Texcoord));\n#ifdef ANTI_FLICKER\n vec3 d = 1.0 / textureSize.xyx * vec3(1.0, 1.0, 0.0);\n vec4 s1 = decodeHDR(texture2D(texture, v_Texcoord - d.xz));\n vec4 s2 = decodeHDR(texture2D(texture, v_Texcoord + d.xz));\n vec4 s3 = decodeHDR(texture2D(texture, v_Texcoord - d.zy));\n vec4 s4 = decodeHDR(texture2D(texture, v_Texcoord + d.zy));\n texel = median(median(texel, s1, s2), s3, s4);\n#endif\n float lum = dot(texel.rgb , lumWeight);\n vec4 color;\n if (lum > threshold && texel.a > 0.0)\n {\n color = vec4(texel.rgb * scale, texel.a * scale);\n }\n else\n {\n color = vec4(0.0);\n }\n gl_FragColor = encodeHDR(color);\n}\n@end\n",aa="@export clay.compositor.downsample\nuniform sampler2D texture;\nuniform vec2 textureSize : [512, 512];\nvarying vec2 v_Texcoord;\n@import clay.util.rgbm\nfloat brightness(vec3 c)\n{\n return max(max(c.r, c.g), c.b);\n}\n@import clay.util.clamp_sample\nvoid main()\n{\n vec4 d = vec4(-1.0, -1.0, 1.0, 1.0) / textureSize.xyxy;\n#ifdef ANTI_FLICKER\n vec3 s1 = decodeHDR(clampSample(texture, v_Texcoord + d.xy)).rgb;\n vec3 s2 = decodeHDR(clampSample(texture, v_Texcoord + d.zy)).rgb;\n vec3 s3 = decodeHDR(clampSample(texture, v_Texcoord + d.xw)).rgb;\n vec3 s4 = decodeHDR(clampSample(texture, v_Texcoord + d.zw)).rgb;\n float s1w = 1.0 / (brightness(s1) + 1.0);\n float s2w = 1.0 / (brightness(s2) + 1.0);\n float s3w = 1.0 / (brightness(s3) + 1.0);\n float s4w = 1.0 / (brightness(s4) + 1.0);\n float oneDivideSum = 1.0 / (s1w + s2w + s3w + s4w);\n vec4 color = vec4(\n (s1 * s1w + s2 * s2w + s3 * s3w + s4 * s4w) * oneDivideSum,\n 1.0\n );\n#else\n vec4 color = decodeHDR(clampSample(texture, v_Texcoord + d.xy));\n color += decodeHDR(clampSample(texture, v_Texcoord + d.zy));\n color += decodeHDR(clampSample(texture, v_Texcoord + d.xw));\n color += decodeHDR(clampSample(texture, v_Texcoord + d.zw));\n color *= 0.25;\n#endif\n gl_FragColor = encodeHDR(color);\n}\n@end",oa="\n@export clay.compositor.upsample\n#define HIGH_QUALITY\nuniform sampler2D texture;\nuniform vec2 textureSize : [512, 512];\nuniform float sampleScale: 0.5;\nvarying vec2 v_Texcoord;\n@import clay.util.rgbm\n@import clay.util.clamp_sample\nvoid main()\n{\n#ifdef HIGH_QUALITY\n vec4 d = vec4(1.0, 1.0, -1.0, 0.0) / textureSize.xyxy * sampleScale;\n vec4 s;\n s = decodeHDR(clampSample(texture, v_Texcoord - d.xy));\n s += decodeHDR(clampSample(texture, v_Texcoord - d.wy)) * 2.0;\n s += decodeHDR(clampSample(texture, v_Texcoord - d.zy));\n s += decodeHDR(clampSample(texture, v_Texcoord + d.zw)) * 2.0;\n s += decodeHDR(clampSample(texture, v_Texcoord )) * 4.0;\n s += decodeHDR(clampSample(texture, v_Texcoord + d.xw)) * 2.0;\n s += decodeHDR(clampSample(texture, v_Texcoord + d.zy));\n s += decodeHDR(clampSample(texture, v_Texcoord + d.wy)) * 2.0;\n s += decodeHDR(clampSample(texture, v_Texcoord + d.xy));\n gl_FragColor = encodeHDR(s / 16.0);\n#else\n vec4 d = vec4(-1.0, -1.0, +1.0, +1.0) / textureSize.xyxy;\n vec4 s;\n s = decodeHDR(clampSample(texture, v_Texcoord + d.xy));\n s += decodeHDR(clampSample(texture, v_Texcoord + d.zy));\n s += decodeHDR(clampSample(texture, v_Texcoord + d.xw));\n s += decodeHDR(clampSample(texture, v_Texcoord + d.zw));\n gl_FragColor = encodeHDR(s / 4.0);\n#endif\n}\n@end",sa="@export clay.compositor.hdr.composite\nuniform sampler2D texture;\n#ifdef BLOOM_ENABLED\nuniform sampler2D bloom;\n#endif\n#ifdef LENSFLARE_ENABLED\nuniform sampler2D lensflare;\nuniform sampler2D lensdirt;\n#endif\n#ifdef LUM_ENABLED\nuniform sampler2D lum;\n#endif\n#ifdef LUT_ENABLED\nuniform sampler2D lut;\n#endif\n#ifdef COLOR_CORRECTION\nuniform float brightness : 0.0;\nuniform float contrast : 1.0;\nuniform float saturation : 1.0;\n#endif\n#ifdef VIGNETTE\nuniform float vignetteDarkness: 1.0;\nuniform float vignetteOffset: 1.0;\n#endif\nuniform float exposure : 1.0;\nuniform float bloomIntensity : 0.25;\nuniform float lensflareIntensity : 1;\nvarying vec2 v_Texcoord;\n@import clay.util.srgb\nvec3 ACESToneMapping(vec3 color)\n{\n const float A = 2.51;\n const float B = 0.03;\n const float C = 2.43;\n const float D = 0.59;\n const float E = 0.14;\n return (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nfloat eyeAdaption(float fLum)\n{\n return mix(0.2, fLum, 0.5);\n}\n#ifdef LUT_ENABLED\nvec3 lutTransform(vec3 color) {\n float blueColor = color.b * 63.0;\n vec2 quad1;\n quad1.y = floor(floor(blueColor) / 8.0);\n quad1.x = floor(blueColor) - (quad1.y * 8.0);\n vec2 quad2;\n quad2.y = floor(ceil(blueColor) / 8.0);\n quad2.x = ceil(blueColor) - (quad2.y * 8.0);\n vec2 texPos1;\n texPos1.x = (quad1.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.r);\n texPos1.y = (quad1.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.g);\n vec2 texPos2;\n texPos2.x = (quad2.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.r);\n texPos2.y = (quad2.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.g);\n vec4 newColor1 = texture2D(lut, texPos1);\n vec4 newColor2 = texture2D(lut, texPos2);\n vec4 newColor = mix(newColor1, newColor2, fract(blueColor));\n return newColor.rgb;\n}\n#endif\n@import clay.util.rgbm\nvoid main()\n{\n vec4 texel = vec4(0.0);\n vec4 originalTexel = vec4(0.0);\n#ifdef TEXTURE_ENABLED\n texel = decodeHDR(texture2D(texture, v_Texcoord));\n originalTexel = texel;\n#endif\n#ifdef BLOOM_ENABLED\n vec4 bloomTexel = decodeHDR(texture2D(bloom, v_Texcoord));\n texel.rgb += bloomTexel.rgb * bloomIntensity;\n texel.a += bloomTexel.a * bloomIntensity;\n#endif\n#ifdef LENSFLARE_ENABLED\n texel += decodeHDR(texture2D(lensflare, v_Texcoord)) * texture2D(lensdirt, v_Texcoord) * lensflareIntensity;\n#endif\n texel.a = min(texel.a, 1.0);\n#ifdef LUM_ENABLED\n float fLum = texture2D(lum, vec2(0.5, 0.5)).r;\n float adaptedLumDest = 3.0 / (max(0.1, 1.0 + 10.0*eyeAdaption(fLum)));\n float exposureBias = adaptedLumDest * exposure;\n#else\n float exposureBias = exposure;\n#endif\n texel.rgb *= exposureBias;\n texel.rgb = ACESToneMapping(texel.rgb);\n texel = linearTosRGB(texel);\n#ifdef LUT_ENABLED\n texel.rgb = lutTransform(clamp(texel.rgb,vec3(0.0),vec3(1.0)));\n#endif\n#ifdef COLOR_CORRECTION\n texel.rgb = clamp(texel.rgb + vec3(brightness), 0.0, 1.0);\n texel.rgb = clamp((texel.rgb - vec3(0.5))*contrast+vec3(0.5), 0.0, 1.0);\n float lum = dot(texel.rgb, vec3(0.2125, 0.7154, 0.0721));\n texel.rgb = mix(vec3(lum), texel.rgb, saturation);\n#endif\n#ifdef VIGNETTE\n vec2 uv = (v_Texcoord - vec2(0.5)) * vec2(vignetteOffset);\n texel.rgb = mix(texel.rgb, vec3(1.0 - vignetteDarkness), dot(uv, uv));\n#endif\n gl_FragColor = encodeHDR(texel);\n#ifdef DEBUG\n #if DEBUG == 1\n gl_FragColor = encodeHDR(decodeHDR(texture2D(texture, v_Texcoord)));\n #elif DEBUG == 2\n gl_FragColor = encodeHDR(decodeHDR(texture2D(bloom, v_Texcoord)) * bloomIntensity);\n #elif DEBUG == 3\n gl_FragColor = encodeHDR(decodeHDR(texture2D(lensflare, v_Texcoord) * lensflareIntensity));\n #endif\n#endif\n if (originalTexel.a <= 0.01 && gl_FragColor.a > 1e-5) {\n gl_FragColor.a = dot(gl_FragColor.rgb, vec3(0.2125, 0.7154, 0.0721));\n }\n#ifdef PREMULTIPLY_ALPHA\n gl_FragColor.rgb *= gl_FragColor.a;\n#endif\n}\n@end",ua="@export clay.compositor.blend\n#define SHADER_NAME blend\n#ifdef TEXTURE1_ENABLED\nuniform sampler2D texture1;\nuniform float weight1 : 1.0;\n#endif\n#ifdef TEXTURE2_ENABLED\nuniform sampler2D texture2;\nuniform float weight2 : 1.0;\n#endif\n#ifdef TEXTURE3_ENABLED\nuniform sampler2D texture3;\nuniform float weight3 : 1.0;\n#endif\n#ifdef TEXTURE4_ENABLED\nuniform sampler2D texture4;\nuniform float weight4 : 1.0;\n#endif\n#ifdef TEXTURE5_ENABLED\nuniform sampler2D texture5;\nuniform float weight5 : 1.0;\n#endif\n#ifdef TEXTURE6_ENABLED\nuniform sampler2D texture6;\nuniform float weight6 : 1.0;\n#endif\nvarying vec2 v_Texcoord;\n@import clay.util.rgbm\nvoid main()\n{\n vec4 tex = vec4(0.0);\n#ifdef TEXTURE1_ENABLED\n tex += decodeHDR(texture2D(texture1, v_Texcoord)) * weight1;\n#endif\n#ifdef TEXTURE2_ENABLED\n tex += decodeHDR(texture2D(texture2, v_Texcoord)) * weight2;\n#endif\n#ifdef TEXTURE3_ENABLED\n tex += decodeHDR(texture2D(texture3, v_Texcoord)) * weight3;\n#endif\n#ifdef TEXTURE4_ENABLED\n tex += decodeHDR(texture2D(texture4, v_Texcoord)) * weight4;\n#endif\n#ifdef TEXTURE5_ENABLED\n tex += decodeHDR(texture2D(texture5, v_Texcoord)) * weight5;\n#endif\n#ifdef TEXTURE6_ENABLED\n tex += decodeHDR(texture2D(texture6, v_Texcoord)) * weight6;\n#endif\n gl_FragColor = encodeHDR(tex);\n}\n@end",la="@export clay.compositor.fxaa\nuniform sampler2D texture;\nuniform vec4 viewport : VIEWPORT;\nvarying vec2 v_Texcoord;\n#define FXAA_REDUCE_MIN (1.0/128.0)\n#define FXAA_REDUCE_MUL (1.0/8.0)\n#define FXAA_SPAN_MAX 8.0\n@import clay.util.rgbm\nvoid main()\n{\n vec2 resolution = 1.0 / viewport.zw;\n vec3 rgbNW = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( -1.0, -1.0 ) ) * resolution ) ).xyz;\n vec3 rgbNE = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( 1.0, -1.0 ) ) * resolution ) ).xyz;\n vec3 rgbSW = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( -1.0, 1.0 ) ) * resolution ) ).xyz;\n vec3 rgbSE = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( 1.0, 1.0 ) ) * resolution ) ).xyz;\n vec4 rgbaM = decodeHDR( texture2D( texture, gl_FragCoord.xy * resolution ) );\n vec3 rgbM = rgbaM.xyz;\n float opacity = rgbaM.w;\n vec3 luma = vec3( 0.299, 0.587, 0.114 );\n float lumaNW = dot( rgbNW, luma );\n float lumaNE = dot( rgbNE, luma );\n float lumaSW = dot( rgbSW, luma );\n float lumaSE = dot( rgbSE, luma );\n float lumaM = dot( rgbM, luma );\n float lumaMin = min( lumaM, min( min( lumaNW, lumaNE ), min( lumaSW, lumaSE ) ) );\n float lumaMax = max( lumaM, max( max( lumaNW, lumaNE) , max( lumaSW, lumaSE ) ) );\n vec2 dir;\n dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\n dir.y = ((lumaNW + lumaSW) - (lumaNE + lumaSE));\n float dirReduce = max( ( lumaNW + lumaNE + lumaSW + lumaSE ) * ( 0.25 * FXAA_REDUCE_MUL ), FXAA_REDUCE_MIN );\n float rcpDirMin = 1.0 / ( min( abs( dir.x ), abs( dir.y ) ) + dirReduce );\n dir = min( vec2( FXAA_SPAN_MAX, FXAA_SPAN_MAX),\n max( vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\n dir * rcpDirMin)) * resolution;\n vec3 rgbA = decodeHDR( texture2D( texture, gl_FragCoord.xy * resolution + dir * ( 1.0 / 3.0 - 0.5 ) ) ).xyz;\n rgbA += decodeHDR( texture2D( texture, gl_FragCoord.xy * resolution + dir * ( 2.0 / 3.0 - 0.5 ) ) ).xyz;\n rgbA *= 0.5;\n vec3 rgbB = decodeHDR( texture2D( texture, gl_FragCoord.xy * resolution + dir * -0.5 ) ).xyz;\n rgbB += decodeHDR( texture2D( texture, gl_FragCoord.xy * resolution + dir * 0.5 ) ).xyz;\n rgbB *= 0.25;\n rgbB += rgbA * 0.5;\n float lumaB = dot( rgbB, luma );\n if ( ( lumaB < lumaMin ) || ( lumaB > lumaMax ) )\n {\n gl_FragColor = vec4( rgbA, opacity );\n }\n else {\n gl_FragColor = vec4( rgbB, opacity );\n }\n}\n@end";L.import("@export clay.compositor.coloradjust\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float brightness : 0.0;\nuniform float contrast : 1.0;\nuniform float exposure : 0.0;\nuniform float gamma : 1.0;\nuniform float saturation : 1.0;\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\nvoid main()\n{\n vec4 tex = texture2D( texture, v_Texcoord);\n vec3 color = clamp(tex.rgb + vec3(brightness), 0.0, 1.0);\n color = clamp( (color-vec3(0.5))*contrast+vec3(0.5), 0.0, 1.0);\n color = clamp( color * pow(2.0, exposure), 0.0, 1.0);\n color = clamp( pow(color, vec3(gamma)), 0.0, 1.0);\n float luminance = dot( color, w );\n color = mix(vec3(luminance), color, saturation);\n gl_FragColor = vec4(color, tex.a);\n}\n@end\n@export clay.compositor.brightness\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float brightness : 0.0;\nvoid main()\n{\n vec4 tex = texture2D( texture, v_Texcoord);\n vec3 color = tex.rgb + vec3(brightness);\n gl_FragColor = vec4(color, tex.a);\n}\n@end\n@export clay.compositor.contrast\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float contrast : 1.0;\nvoid main()\n{\n vec4 tex = texture2D( texture, v_Texcoord);\n vec3 color = (tex.rgb-vec3(0.5))*contrast+vec3(0.5);\n gl_FragColor = vec4(color, tex.a);\n}\n@end\n@export clay.compositor.exposure\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float exposure : 0.0;\nvoid main()\n{\n vec4 tex = texture2D(texture, v_Texcoord);\n vec3 color = tex.rgb * pow(2.0, exposure);\n gl_FragColor = vec4(color, tex.a);\n}\n@end\n@export clay.compositor.gamma\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float gamma : 1.0;\nvoid main()\n{\n vec4 tex = texture2D(texture, v_Texcoord);\n vec3 color = pow(tex.rgb, vec3(gamma));\n gl_FragColor = vec4(color, tex.a);\n}\n@end\n@export clay.compositor.saturation\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float saturation : 1.0;\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\nvoid main()\n{\n vec4 tex = texture2D(texture, v_Texcoord);\n vec3 color = tex.rgb;\n float luminance = dot(color, w);\n color = mix(vec3(luminance), color, saturation);\n gl_FragColor = vec4(color, tex.a);\n}\n@end"),L.import(ra),L.import("@export clay.compositor.hdr.log_lum\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\n@import clay.util.rgbm\nvoid main()\n{\n vec4 tex = decodeHDR(texture2D(texture, v_Texcoord));\n float luminance = dot(tex.rgb, w);\n luminance = log(luminance + 0.001);\n gl_FragColor = encodeHDR(vec4(vec3(luminance), 1.0));\n}\n@end\n@export clay.compositor.hdr.lum_adaption\nvarying vec2 v_Texcoord;\nuniform sampler2D adaptedLum;\nuniform sampler2D currentLum;\nuniform float frameTime : 0.02;\n@import clay.util.rgbm\nvoid main()\n{\n float fAdaptedLum = decodeHDR(texture2D(adaptedLum, vec2(0.5, 0.5))).r;\n float fCurrentLum = exp(encodeHDR(texture2D(currentLum, vec2(0.5, 0.5))).r);\n fAdaptedLum += (fCurrentLum - fAdaptedLum) * (1.0 - pow(0.98, 30.0 * frameTime));\n gl_FragColor = encodeHDR(vec4(vec3(fAdaptedLum), 1.0));\n}\n@end\n@export clay.compositor.lum\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\nvoid main()\n{\n vec4 tex = texture2D( texture, v_Texcoord );\n float luminance = dot(tex.rgb, w);\n gl_FragColor = vec4(vec3(luminance), 1.0);\n}\n@end"),L.import("\n@export clay.compositor.lut\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform sampler2D lookup;\nvoid main()\n{\n vec4 tex = texture2D(texture, v_Texcoord);\n float blueColor = tex.b * 63.0;\n vec2 quad1;\n quad1.y = floor(floor(blueColor) / 8.0);\n quad1.x = floor(blueColor) - (quad1.y * 8.0);\n vec2 quad2;\n quad2.y = floor(ceil(blueColor) / 8.0);\n quad2.x = ceil(blueColor) - (quad2.y * 8.0);\n vec2 texPos1;\n texPos1.x = (quad1.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.r);\n texPos1.y = (quad1.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.g);\n vec2 texPos2;\n texPos2.x = (quad2.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.r);\n texPos2.y = (quad2.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.g);\n vec4 newColor1 = texture2D(lookup, texPos1);\n vec4 newColor2 = texture2D(lookup, texPos2);\n vec4 newColor = mix(newColor1, newColor2, fract(blueColor));\n gl_FragColor = vec4(newColor.rgb, tex.w);\n}\n@end"),L.import("@export clay.compositor.vignette\n#define OUTPUT_ALPHA\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float darkness: 1;\nuniform float offset: 1;\n@import clay.util.rgbm\nvoid main()\n{\n vec4 texel = decodeHDR(texture2D(texture, v_Texcoord));\n gl_FragColor.rgb = texel.rgb;\n vec2 uv = (v_Texcoord - vec2(0.5)) * vec2(offset);\n gl_FragColor = encodeHDR(vec4(mix(texel.rgb, vec3(1.0 - darkness), dot(uv, uv)), texel.a));\n}\n@end"),L.import(na),L.import(ia),L.import(aa),L.import(oa),L.import(sa),
L.import("@export clay.compositor.dof.coc\nuniform sampler2D depth;\nuniform float zNear: 0.1;\nuniform float zFar: 2000;\nuniform float focalDist: 3;\nuniform float focalRange: 1;\nuniform float focalLength: 30;\nuniform float fstop: 2.8;\nvarying vec2 v_Texcoord;\n@import clay.util.encode_float\nvoid main()\n{\n float z = texture2D(depth, v_Texcoord).r * 2.0 - 1.0;\n float dist = 2.0 * zNear * zFar / (zFar + zNear - z * (zFar - zNear));\n float aperture = focalLength / fstop;\n float coc;\n float uppper = focalDist + focalRange;\n float lower = focalDist - focalRange;\n if (dist <= uppper && dist >= lower) {\n coc = 0.5;\n }\n else {\n float focalAdjusted = dist > uppper ? uppper : lower;\n coc = abs(aperture * (focalLength * (dist - focalAdjusted)) / (dist * (focalAdjusted - focalLength)));\n coc = clamp(coc, 0.0, 0.4) / 0.4000001;\n if (dist < lower) {\n coc = -coc;\n }\n coc = coc * 0.5 + 0.5;\n }\n gl_FragColor = encodeFloat(coc);\n}\n@end\n@export clay.compositor.dof.premultiply\nuniform sampler2D texture;\nuniform sampler2D coc;\nvarying vec2 v_Texcoord;\n@import clay.util.rgbm\n@import clay.util.decode_float\nvoid main() {\n float fCoc = max(abs(decodeFloat(texture2D(coc, v_Texcoord)) * 2.0 - 1.0), 0.1);\n gl_FragColor = encodeHDR(\n vec4(decodeHDR(texture2D(texture, v_Texcoord)).rgb * fCoc, 1.0)\n );\n}\n@end\n@export clay.compositor.dof.min_coc\nuniform sampler2D coc;\nvarying vec2 v_Texcoord;\nuniform vec2 textureSize : [512.0, 512.0];\n@import clay.util.float\nvoid main()\n{\n vec4 d = vec4(-1.0, -1.0, 1.0, 1.0) / textureSize.xyxy;\n float fCoc = decodeFloat(texture2D(coc, v_Texcoord + d.xy));\n fCoc = min(fCoc, decodeFloat(texture2D(coc, v_Texcoord + d.zy)));\n fCoc = min(fCoc, decodeFloat(texture2D(coc, v_Texcoord + d.xw)));\n fCoc = min(fCoc, decodeFloat(texture2D(coc, v_Texcoord + d.zw)));\n gl_FragColor = encodeFloat(fCoc);\n}\n@end\n@export clay.compositor.dof.max_coc\nuniform sampler2D coc;\nvarying vec2 v_Texcoord;\nuniform vec2 textureSize : [512.0, 512.0];\n@import clay.util.float\nvoid main()\n{\n vec4 d = vec4(-1.0, -1.0, 1.0, 1.0) / textureSize.xyxy;\n float fCoc = decodeFloat(texture2D(coc, v_Texcoord + d.xy));\n fCoc = max(fCoc, decodeFloat(texture2D(coc, v_Texcoord + d.zy)));\n fCoc = max(fCoc, decodeFloat(texture2D(coc, v_Texcoord + d.xw)));\n fCoc = max(fCoc, decodeFloat(texture2D(coc, v_Texcoord + d.zw)));\n gl_FragColor = encodeFloat(fCoc);\n}\n@end\n@export clay.compositor.dof.coc_upsample\n#define HIGH_QUALITY\nuniform sampler2D coc;\nuniform vec2 textureSize : [512, 512];\nuniform float sampleScale: 0.5;\nvarying vec2 v_Texcoord;\n@import clay.util.float\nvoid main()\n{\n#ifdef HIGH_QUALITY\n vec4 d = vec4(1.0, 1.0, -1.0, 0.0) / textureSize.xyxy * sampleScale;\n float s;\n s = decodeFloat(texture2D(coc, v_Texcoord - d.xy));\n s += decodeFloat(texture2D(coc, v_Texcoord - d.wy)) * 2.0;\n s += decodeFloat(texture2D(coc, v_Texcoord - d.zy));\n s += decodeFloat(texture2D(coc, v_Texcoord + d.zw)) * 2.0;\n s += decodeFloat(texture2D(coc, v_Texcoord )) * 4.0;\n s += decodeFloat(texture2D(coc, v_Texcoord + d.xw)) * 2.0;\n s += decodeFloat(texture2D(coc, v_Texcoord + d.zy));\n s += decodeFloat(texture2D(coc, v_Texcoord + d.wy)) * 2.0;\n s += decodeFloat(texture2D(coc, v_Texcoord + d.xy));\n gl_FragColor = encodeFloat(s / 16.0);\n#else\n vec4 d = vec4(-1.0, -1.0, +1.0, +1.0) / textureSize.xyxy;\n float s;\n s = decodeFloat(texture2D(coc, v_Texcoord + d.xy));\n s += decodeFloat(texture2D(coc, v_Texcoord + d.zy));\n s += decodeFloat(texture2D(coc, v_Texcoord + d.xw));\n s += decodeFloat(texture2D(coc, v_Texcoord + d.zw));\n gl_FragColor = encodeFloat(s / 4.0);\n#endif\n}\n@end\n@export clay.compositor.dof.upsample\n#define HIGH_QUALITY\nuniform sampler2D coc;\nuniform sampler2D texture;\nuniform vec2 textureSize : [512, 512];\nuniform float sampleScale: 0.5;\nvarying vec2 v_Texcoord;\n@import clay.util.rgbm\n@import clay.util.decode_float\nfloat tap(vec2 uv, inout vec4 color, float baseWeight) {\n float weight = abs(decodeFloat(texture2D(coc, uv)) * 2.0 - 1.0) * baseWeight;\n color += decodeHDR(texture2D(texture, uv)) * weight;\n return weight;\n}\nvoid main()\n{\n#ifdef HIGH_QUALITY\n vec4 d = vec4(1.0, 1.0, -1.0, 0.0) / textureSize.xyxy * sampleScale;\n vec4 color = vec4(0.0);\n float baseWeight = 1.0 / 16.0;\n float w = tap(v_Texcoord - d.xy, color, baseWeight);\n w += tap(v_Texcoord - d.wy, color, baseWeight * 2.0);\n w += tap(v_Texcoord - d.zy, color, baseWeight);\n w += tap(v_Texcoord + d.zw, color, baseWeight * 2.0);\n w += tap(v_Texcoord , color, baseWeight * 4.0);\n w += tap(v_Texcoord + d.xw, color, baseWeight * 2.0);\n w += tap(v_Texcoord + d.zy, color, baseWeight);\n w += tap(v_Texcoord + d.wy, color, baseWeight * 2.0);\n w += tap(v_Texcoord + d.xy, color, baseWeight);\n gl_FragColor = encodeHDR(color / w);\n#else\n vec4 d = vec4(-1.0, -1.0, +1.0, +1.0) / textureSize.xyxy;\n vec4 color = vec4(0.0);\n float baseWeight = 1.0 / 4.0;\n float w = tap(v_Texcoord + d.xy, color, baseWeight);\n w += tap(v_Texcoord + d.zy, color, baseWeight);\n w += tap(v_Texcoord + d.xw, color, baseWeight);\n w += tap(v_Texcoord + d.zw, color, baseWeight);\n gl_FragColor = encodeHDR(color / w);\n#endif\n}\n@end\n@export clay.compositor.dof.downsample\nuniform sampler2D texture;\nuniform sampler2D coc;\nuniform vec2 textureSize : [512, 512];\nvarying vec2 v_Texcoord;\n@import clay.util.rgbm\n@import clay.util.decode_float\nfloat tap(vec2 uv, inout vec4 color) {\n float weight = abs(decodeFloat(texture2D(coc, uv)) * 2.0 - 1.0) * 0.25;\n color += decodeHDR(texture2D(texture, uv)) * weight;\n return weight;\n}\nvoid main()\n{\n vec4 d = vec4(-1.0, -1.0, 1.0, 1.0) / textureSize.xyxy;\n vec4 color = vec4(0.0);\n float weight = tap(v_Texcoord + d.xy, color);\n weight += tap(v_Texcoord + d.zy, color);\n weight += tap(v_Texcoord + d.xw, color);\n weight += tap(v_Texcoord + d.zw, color);\n color /= weight;\n gl_FragColor = encodeHDR(color);\n}\n@end\n@export clay.compositor.dof.hexagonal_blur_frag\n@import clay.util.float\nvec4 doBlur(sampler2D targetTexture, vec2 offset) {\n#ifdef BLUR_COC\n float cocSum = 0.0;\n#else\n vec4 color = vec4(0.0);\n#endif\n float weightSum = 0.0;\n float kernelWeight = 1.0 / float(KERNEL_SIZE);\n for (int i = 0; i < KERNEL_SIZE; i++) {\n vec2 coord = v_Texcoord + offset * float(i);\n float w = kernelWeight;\n#ifdef BLUR_COC\n float fCoc = decodeFloat(texture2D(targetTexture, coord)) * 2.0 - 1.0;\n cocSum += clamp(fCoc, -1.0, 0.0) * w;\n#else\n float fCoc = decodeFloat(texture2D(coc, coord)) * 2.0 - 1.0;\n vec4 texel = texture2D(targetTexture, coord);\n #if !defined(BLUR_NEARFIELD)\n w *= abs(fCoc);\n #endif\n color += decodeHDR(texel) * w;\n#endif\n weightSum += w;\n }\n#ifdef BLUR_COC\n return encodeFloat(clamp(cocSum / weightSum, -1.0, 0.0) * 0.5 + 0.5);\n#else\n return color / weightSum;\n#endif\n}\n@end\n@export clay.compositor.dof.hexagonal_blur_1\n#define KERNEL_SIZE 5\nuniform sampler2D texture;\nuniform sampler2D coc;\nvarying vec2 v_Texcoord;\nuniform float blurSize : 1.0;\nuniform vec2 textureSize : [512.0, 512.0];\n@import clay.util.rgbm\n@import clay.compositor.dof.hexagonal_blur_frag\nvoid main()\n{\n vec2 offset = blurSize / textureSize;\n#if !defined(BLUR_NEARFIELD) && !defined(BLUR_COC)\n offset *= abs(decodeFloat(texture2D(coc, v_Texcoord)) * 2.0 - 1.0);\n#endif\n gl_FragColor = doBlur(texture, vec2(0.0, offset.y));\n#if !defined(BLUR_COC)\n gl_FragColor = encodeHDR(gl_FragColor);\n#endif\n}\n@end\n@export clay.compositor.dof.hexagonal_blur_2\n#define KERNEL_SIZE 5\nuniform sampler2D texture;\nuniform sampler2D coc;\nvarying vec2 v_Texcoord;\nuniform float blurSize : 1.0;\nuniform vec2 textureSize : [512.0, 512.0];\n@import clay.util.rgbm\n@import clay.compositor.dof.hexagonal_blur_frag\nvoid main()\n{\n vec2 offset = blurSize / textureSize;\n#if !defined(BLUR_NEARFIELD) && !defined(BLUR_COC)\n offset *= abs(decodeFloat(texture2D(coc, v_Texcoord)) * 2.0 - 1.0);\n#endif\n offset.y /= 2.0;\n gl_FragColor = doBlur(texture, -offset);\n#if !defined(BLUR_COC)\n gl_FragColor = encodeHDR(gl_FragColor);\n#endif\n}\n@end\n@export clay.compositor.dof.hexagonal_blur_3\n#define KERNEL_SIZE 5\nuniform sampler2D texture1;\nuniform sampler2D texture2;\nuniform sampler2D coc;\nvarying vec2 v_Texcoord;\nuniform float blurSize : 1.0;\nuniform vec2 textureSize : [512.0, 512.0];\n@import clay.util.rgbm\n@import clay.compositor.dof.hexagonal_blur_frag\nvoid main()\n{\n vec2 offset = blurSize / textureSize;\n#if !defined(BLUR_NEARFIELD) && !defined(BLUR_COC)\n offset *= abs(decodeFloat(texture2D(coc, v_Texcoord)) * 2.0 - 1.0);\n#endif\n offset.y /= 2.0;\n vec2 vDownRight = vec2(offset.x, -offset.y);\n vec4 texel1 = doBlur(texture1, -offset);\n vec4 texel2 = doBlur(texture1, vDownRight);\n vec4 texel3 = doBlur(texture2, vDownRight);\n#ifdef BLUR_COC\n float coc1 = decodeFloat(texel1) * 2.0 - 1.0;\n float coc2 = decodeFloat(texel2) * 2.0 - 1.0;\n float coc3 = decodeFloat(texel3) * 2.0 - 1.0;\n gl_FragColor = encodeFloat(\n ((coc1 + coc2 + coc3) / 3.0) * 0.5 + 0.5\n );\n#else\n vec4 color = (texel1 + texel2 + texel3) / 3.0;\n gl_FragColor = encodeHDR(color);\n#endif\n}\n@end\n@export clay.compositor.dof.composite\n#define DEBUG 0\nuniform sampler2D original;\nuniform sampler2D blurred;\nuniform sampler2D nearfield;\nuniform sampler2D coc;\nuniform sampler2D nearcoc;\nvarying vec2 v_Texcoord;\n@import clay.util.rgbm\n@import clay.util.float\nvoid main()\n{\n vec4 blurredColor = decodeHDR(texture2D(blurred, v_Texcoord));\n vec4 originalColor = decodeHDR(texture2D(original, v_Texcoord));\n float fCoc = decodeFloat(texture2D(coc, v_Texcoord));\n fCoc = abs(fCoc * 2.0 - 1.0);\n float weight = smoothstep(0.0, 1.0, fCoc);\n#ifdef NEARFIELD_ENABLED\n vec4 nearfieldColor = decodeHDR(texture2D(nearfield, v_Texcoord));\n float fNearCoc = decodeFloat(texture2D(nearcoc, v_Texcoord));\n fNearCoc = abs(fNearCoc * 2.0 - 1.0);\n gl_FragColor = encodeHDR(\n mix(\n nearfieldColor, mix(originalColor, blurredColor, weight),\n pow(1.0 - fNearCoc, 4.0)\n )\n );\n#else\n gl_FragColor = encodeHDR(mix(originalColor, blurredColor, weight));\n#endif\n#if DEBUG == 1\n gl_FragColor = vec4(vec3(fCoc), 1.0);\n#elif DEBUG == 2\n gl_FragColor = vec4(vec3(fNearCoc), 1.0);\n#elif DEBUG == 3\n gl_FragColor = encodeHDR(blurredColor);\n#elif DEBUG == 4\n gl_FragColor = encodeHDR(nearfieldColor);\n#endif\n}\n@end"),L.import("@export clay.compositor.lensflare\n#define SAMPLE_NUMBER 8\nuniform sampler2D texture;\nuniform sampler2D lenscolor;\nuniform vec2 textureSize : [512, 512];\nuniform float dispersal : 0.3;\nuniform float haloWidth : 0.4;\nuniform float distortion : 1.0;\nvarying vec2 v_Texcoord;\n@import clay.util.rgbm\nvec4 textureDistorted(\n in vec2 texcoord,\n in vec2 direction,\n in vec3 distortion\n) {\n return vec4(\n decodeHDR(texture2D(texture, texcoord + direction * distortion.r)).r,\n decodeHDR(texture2D(texture, texcoord + direction * distortion.g)).g,\n decodeHDR(texture2D(texture, texcoord + direction * distortion.b)).b,\n 1.0\n );\n}\nvoid main()\n{\n vec2 texcoord = -v_Texcoord + vec2(1.0); vec2 textureOffset = 1.0 / textureSize;\n vec2 ghostVec = (vec2(0.5) - texcoord) * dispersal;\n vec2 haloVec = normalize(ghostVec) * haloWidth;\n vec3 distortion = vec3(-textureOffset.x * distortion, 0.0, textureOffset.x * distortion);\n vec4 result = vec4(0.0);\n for (int i = 0; i < SAMPLE_NUMBER; i++)\n {\n vec2 offset = fract(texcoord + ghostVec * float(i));\n float weight = length(vec2(0.5) - offset) / length(vec2(0.5));\n weight = pow(1.0 - weight, 10.0);\n result += textureDistorted(offset, normalize(ghostVec), distortion) * weight;\n }\n result *= texture2D(lenscolor, vec2(length(vec2(0.5) - texcoord)) / length(vec2(0.5)));\n float weight = length(vec2(0.5) - fract(texcoord + haloVec)) / length(vec2(0.5));\n weight = pow(1.0 - weight, 10.0);\n vec2 offset = fract(texcoord + haloVec);\n result += textureDistorted(offset, normalize(ghostVec), distortion) * weight;\n gl_FragColor = result;\n}\n@end"),L.import(ua),L.import(la);var ca=/^#source\((.*?)\)/;L.import("@export ecgl.ssao.estimate\n\n#define SHADER_NAME SSAO\n\nuniform sampler2D depthTex;\n\nuniform sampler2D normalTex;\n\nuniform sampler2D noiseTex;\n\nuniform vec2 depthTexSize;\n\nuniform vec2 noiseTexSize;\n\nuniform mat4 projection;\n\nuniform mat4 projectionInv;\n\nuniform mat4 viewInverseTranspose;\n\nuniform vec3 kernel[KERNEL_SIZE];\n\nuniform float radius : 1;\n\nuniform float power : 1;\n\nuniform float bias: 0.01;\n\nuniform float intensity: 1.0;\n\nvarying vec2 v_Texcoord;\n\nfloat ssaoEstimator(in vec3 originPos, in vec3 N, in mat3 kernelBasis) {\n float occlusion = 0.0;\n\n for (int i = 0; i < KERNEL_SIZE; i++) {\n vec3 samplePos = kernel[i];\n#ifdef NORMALTEX_ENABLED\n samplePos = kernelBasis * samplePos;\n#endif\n samplePos = samplePos * radius + originPos;\n\n vec4 texCoord = projection * vec4(samplePos, 1.0);\n texCoord.xy /= texCoord.w;\n texCoord.xy = texCoord.xy * 0.5 + 0.5;\n\n vec4 depthTexel = texture2D(depthTex, texCoord.xy);\n float z = depthTexel.r * 2.0 - 1.0;\n#ifdef ALCHEMY\n vec4 projectedPos = vec4(texCoord.xy * 2.0 - 1.0, z, 1.0);\n vec4 p4 = projectionInv * projectedPos;\n p4.xyz /= p4.w;\n vec3 cDir = p4.xyz - originPos;\n\n float vv = dot(cDir, cDir);\n float vn = dot(cDir, N);\n\n float radius2 = radius * radius;\n\n vn = max(vn + p4.z * bias, 0.0);\n float f = max(radius2 - vv, 0.0) / radius2;\n occlusion += f * f * f * max(vn / (0.01 + vv), 0.0);\n#else\n if (projection[3][3] == 0.0) {\n z = projection[3][2] / (z * projection[2][3] - projection[2][2]);\n }\n else {\n z = (z - projection[3][2]) / projection[2][2];\n }\n float factor = step(samplePos.z, z - bias);\n float rangeCheck = smoothstep(0.0, 1.0, radius / abs(originPos.z - z));\n occlusion += rangeCheck * factor;\n#endif\n }\n#ifdef NORMALTEX_ENABLED\n occlusion = 1.0 - occlusion / float(KERNEL_SIZE);\n#else\n occlusion = 1.0 - clamp((occlusion / float(KERNEL_SIZE) - 0.6) * 2.5, 0.0, 1.0);\n#endif\n return pow(occlusion, power);\n}\n\nvoid main()\n{\n\n vec4 depthTexel = texture2D(depthTex, v_Texcoord);\n\n#ifdef NORMALTEX_ENABLED\n vec4 tex = texture2D(normalTex, v_Texcoord);\n if (dot(tex.rgb, tex.rgb) == 0.0) {\n gl_FragColor = vec4(1.0);\n return;\n }\n vec3 N = tex.rgb * 2.0 - 1.0;\n N = (viewInverseTranspose * vec4(N, 0.0)).xyz;\n\n vec2 noiseTexCoord = depthTexSize / vec2(noiseTexSize) * v_Texcoord;\n vec3 rvec = texture2D(noiseTex, noiseTexCoord).rgb * 2.0 - 1.0;\n vec3 T = normalize(rvec - N * dot(rvec, N));\n vec3 BT = normalize(cross(N, T));\n mat3 kernelBasis = mat3(T, BT, N);\n#else\n if (depthTexel.r > 0.99999) {\n gl_FragColor = vec4(1.0);\n return;\n }\n mat3 kernelBasis;\n#endif\n\n float z = depthTexel.r * 2.0 - 1.0;\n\n vec4 projectedPos = vec4(v_Texcoord * 2.0 - 1.0, z, 1.0);\n vec4 p4 = projectionInv * projectedPos;\n\n vec3 position = p4.xyz / p4.w;\n\n float ao = ssaoEstimator(position, N, kernelBasis);\n ao = clamp(1.0 - (1.0 - ao) * intensity, 0.0, 1.0);\n gl_FragColor = vec4(vec3(ao), 1.0);\n}\n\n@end\n\n\n@export ecgl.ssao.blur\n#define SHADER_NAME SSAO_BLUR\n\nuniform sampler2D ssaoTexture;\n\n#ifdef NORMALTEX_ENABLED\nuniform sampler2D normalTex;\n#endif\n\nvarying vec2 v_Texcoord;\n\nuniform vec2 textureSize;\nuniform float blurSize : 1.0;\n\nuniform int direction: 0.0;\n\n#ifdef DEPTHTEX_ENABLED\nuniform sampler2D depthTex;\nuniform mat4 projection;\nuniform float depthRange : 0.05;\n\nfloat getLinearDepth(vec2 coord)\n{\n float depth = texture2D(depthTex, coord).r * 2.0 - 1.0;\n return projection[3][2] / (depth * projection[2][3] - projection[2][2]);\n}\n#endif\n\nvoid main()\n{\n float kernel[5];\n kernel[0] = 0.122581;\n kernel[1] = 0.233062;\n kernel[2] = 0.288713;\n kernel[3] = 0.233062;\n kernel[4] = 0.122581;\n\n vec2 off = vec2(0.0);\n if (direction == 0) {\n off[0] = blurSize / textureSize.x;\n }\n else {\n off[1] = blurSize / textureSize.y;\n }\n\n vec2 coord = v_Texcoord;\n\n float sum = 0.0;\n float weightAll = 0.0;\n\n#ifdef NORMALTEX_ENABLED\n vec3 centerNormal = texture2D(normalTex, v_Texcoord).rgb * 2.0 - 1.0;\n#endif\n#if defined(DEPTHTEX_ENABLED)\n float centerDepth = getLinearDepth(v_Texcoord);\n#endif\n\n for (int i = 0; i < 5; i++) {\n vec2 coord = clamp(v_Texcoord + vec2(float(i) - 2.0) * off, vec2(0.0), vec2(1.0));\n\n float w = kernel[i];\n#ifdef NORMALTEX_ENABLED\n vec3 normal = texture2D(normalTex, coord).rgb * 2.0 - 1.0;\n w *= clamp(dot(normal, centerNormal), 0.0, 1.0);\n#endif\n#ifdef DEPTHTEX_ENABLED\n float d = getLinearDepth(coord);\n w *= (1.0 - smoothstep(abs(centerDepth - d) / depthRange, 0.0, 1.0));\n#endif\n\n weightAll += w;\n sum += texture2D(ssaoTexture, coord).r * w;\n }\n\n gl_FragColor = vec4(vec3(sum / weightAll), 1.0);\n}\n@end\n"),De.prototype.setDepthTexture=function(e){this._depthTex=e},De.prototype.setNormalTexture=function(e){this._normalTex=e,this._ssaoPass.material[e?"enableTexture":"disableTexture"]("normalTex"),this.setKernelSize(this._kernelSize)},De.prototype.update=function(e,t,r){var n=e.getWidth(),i=e.getHeight(),a=this._ssaoPass,o=this._blurPass;a.setUniform("kernel",this._kernels[r%this._kernels.length]),a.setUniform("depthTex",this._depthTex),null!=this._normalTex&&a.setUniform("normalTex",this._normalTex),a.setUniform("depthTexSize",[this._depthTex.width,this._depthTex.height]);var s=new Kt;Kt.transpose(s,t.worldTransform),a.setUniform("projection",t.projectionMatrix.array),a.setUniform("projectionInv",t.invProjectionMatrix.array),a.setUniform("viewInverseTranspose",s.array);var u=this._ssaoTexture,l=this._blurTexture;u.width=n,u.height=i,l.width=n,l.height=i,this._framebuffer.attach(u),this._framebuffer.bind(e),e.gl.clearColor(1,1,1,1),e.gl.clear(e.gl.COLOR_BUFFER_BIT),a.render(e),o.setUniform("textureSize",[n,i]),o.setUniform("projection",t.projectionMatrix.array),this._framebuffer.attach(l),o.setUniform("direction",0),o.setUniform("ssaoTexture",u),o.render(e),this._framebuffer.attach(u),o.setUniform("direction",1),o.setUniform("ssaoTexture",l),o.render(e),this._framebuffer.unbind(e);var c=e.clearColor;e.gl.clearColor(c[0],c[1],c[2],c[3])},De.prototype.getTargetTexture=function(){return this._ssaoTexture},De.prototype.setParameter=function(e,t){"noiseTexSize"===e?this.setNoiseSize(t):"kernelSize"===e?this.setKernelSize(t):"intensity"===e?this._ssaoPass.material.set("intensity",t):this._ssaoPass.setUniform(e,t)},De.prototype.setKernelSize=function(e){this._kernelSize=e,this._ssaoPass.material.define("fragment","KERNEL_SIZE",e),this._kernels=this._kernels||[];for(var t=0;t<30;t++)this._kernels[t]=Pe(e,t*e,!!this._normalTex)},De.prototype.setNoiseSize=function(e){var t=this._ssaoPass.getUniform("noiseTex");t?(t.data=Me(e),t.width=t.height=e,t.dirty()):(t=Le(e),this._ssaoPass.setUniform("noiseTex",Le(e))),this._ssaoPass.setUniform("noiseTexSize",[e,e])},De.prototype.dispose=function(e){this._blurTexture.dispose(e),this._ssaoTexture.dispose(e)},De.prototype.isFinished=function(e){return e>30};var ha=new Kt,fa=ei.extend({dynamic:!1,widthSegments:1,heightSegments:1,depthSegments:1,inside:!1},function(){this.build()},{build:function(){var e={px:Oe("px",this.depthSegments,this.heightSegments),nx:Oe("nx",this.depthSegments,this.heightSegments),py:Oe("py",this.widthSegments,this.depthSegments),ny:Oe("ny",this.widthSegments,this.depthSegments),pz:Oe("pz",this.widthSegments,this.heightSegments),nz:Oe("nz",this.widthSegments,this.heightSegments)},t=["position","texcoord0","normal"],r=0,n=0;for(var i in e)r+=e[i].vertexCount,n+=e[i].indices.length;for(var a=0;a<t.length;a++)this.attributes[t[a]].init(r);this.indices=new Mt.Uint16Array(n);var o=0,s=0;for(var i in e){for(var u=e[i],a=0;a<t.length;a++)for(var l=t[a],c=u.attributes[l].value,h=u.attributes[l].size,f="normal"===l,d=0;d<c.length;d++){var p=c[d];this.inside&&f&&(p=-p),this.attributes[l].value[d+h*s]=p}for(var m=u.indices.length,d=0;d<u.indices.length;d++)this.indices[d+o]=s+u.indices[this.inside?m-d-1:d];o+=u.indices.length,s+=u.vertexCount}this.boundingBox=new Vt,this.boundingBox.max.set(1,1,1),this.boundingBox.min.set(-1,-1,-1)}});L.import(ti);var da=Mn.extend(function(){var e=new L({vertex:L.source("clay.skybox.vertex"),fragment:L.source("clay.skybox.fragment")}),t=new sr({shader:e,depthMask:!1});return{scene:null,geometry:new fa,material:t,environmentMap:null,culling:!1}},function(){var e=this.scene;e&&this.attachScene(e),this.environmentMap&&this.setEnvironmentMap(this.environmentMap)},{attachScene:function(e){this.scene&&this.detachScene(),e.skybox=this,this.scene=e,e.on("beforerender",this._beforeRenderScene,this)},detachScene:function(){this.scene&&(this.scene.off("beforerender",this._beforeRenderScene),this.scene.skybox=null),this.scene=null},dispose:function(e){this.detachScene(),this.geometry.dispose(e)},setEnvironmentMap:function(e){this.material.set("environmentMap",e)},getEnvironmentMap:function(){return this.material.get("environmentMap")},_beforeRenderScene:function(e,t,r){this.renderSkybox(e,r)},renderSkybox:function(e,t){this.position.copy(t.getWorldPosition()),this.update(),e.gl.disable(e.gl.BLEND),this.material.get("lod")>0?this.material.define("fragment","LOD"):this.material.undefine("fragment","LOD"),e.renderPass([this],t)}}),pa={},ma=["px","nx","py","ny","pz","nz"];pa.prefilterEnvironmentMap=function(e,t,r,n,i){i&&n||(n=pa.generateNormalDistribution(),i=pa.integrateBRDF(e,n)),r=r||{};var a=r.width||64,o=r.height||64,s=r.type||t.type,u=new Ti({width:a,height:o,type:s,flipY:!1,mipmaps:[]});u.isPowerOfTwo()||console.warn("Width and height must be power of two to enable mipmap.");var l=Math.min(a,o),c=Math.log(l)/Math.log(2)+1,h=new sr({shader:new L({vertex:L.source("clay.skybox.vertex"),fragment:"#define SHADER_NAME prefilter\n#define SAMPLE_NUMBER 1024\n#define PI 3.14159265358979\nuniform mat4 viewInverse : VIEWINVERSE;\nuniform samplerCube environmentMap;\nuniform sampler2D normalDistribution;\nuniform float roughness : 0.5;\nuniform int maxSampleNumber: 1024\nvarying vec2 v_Texcoord;\nvarying vec3 v_WorldPosition;\n@import clay.util.rgbm\nvec3 importanceSampleNormal(float i, float roughness, vec3 N) {\n vec3 H = texture2D(normalDistribution, vec2(roughness, i)).rgb;\n vec3 upVector = abs(N.y) > 0.999 ? vec3(1.0, 0.0, 0.0) : vec3(0.0, 1.0, 0.0);\n vec3 tangentX = normalize(cross(N, upVector));\n vec3 tangentZ = cross(N, tangentX);\n return normalize(tangentX * H.x + N * H.y + tangentZ * H.z);\n}\nvoid main() {\n vec3 eyePos = viewInverse[3].xyz;\n vec3 V = normalize(v_WorldPosition - eyePos);\n vec3 N = V;\n vec3 prefilteredColor = vec3(0.0);\n float totalWeight = 0.0;\n float fMaxSampleNumber = float(maxSampleNumber);\n for (int i = 0; i < SAMPLE_NUMBER; i++) {\n if (i > maxSampleNumber) {\n break;\n }\n vec3 H = importanceSampleNormal(float(i) / fMaxSampleNumber, roughness, N);\n vec3 L = reflect(-V, H);\n float NoL = clamp(dot(N, L), 0.0, 1.0);\n if (NoL > 0.0) {\n prefilteredColor += decodeHDR(textureCube(environmentMap, L)).rgb * NoL;\n totalWeight += NoL;\n }\n }\n gl_FragColor = encodeHDR(vec4(prefilteredColor / totalWeight, 1.0));\n}\n"})});h.set("normalDistribution",n),r.encodeRGBM&&h.define("fragment","RGBM_ENCODE"),r.decodeRGBM&&h.define("fragment","RGBM_DECODE");var f,d=new vn;if("texture2D"===t.textureType){var p=new Ti({width:a,height:o,type:s===Qt.FLOAT?Qt.HALF_FLOAT:s});ki.panoramaToCubeMap(e,t,p,{encodeRGBM:r.decodeRGBM}),t=p}f=new da({scene:d,material:h}),f.material.set("environmentMap",t);var m=new Ri({texture:u});r.encodeRGBM&&(s=u.type=Qt.UNSIGNED_BYTE);for(var _=new Nn({width:a,height:o,type:s}),v=new wi({depthBuffer:!1}),g=Mt[s===Qt.UNSIGNED_BYTE?"Uint8Array":"Float32Array"],y=0;y<c;y++){u.mipmaps[y]={pixels:{}},f.material.set("roughness",y/(ma.length-1));var x=_.width*_.height;_.width>=32&&(x/=4),f.material.set("maxSampleNumber",Math.min(x,1024));for(var T=_.width,E=2*Math.atan(T/(T-.5))/Math.PI*180,b=0;b<ma.length;b++){var A=new g(_.width*_.height*4);v.attach(_),v.bind(e);var S=m.getCamera(ma[b]);S.fov=E,e.render(d,S),e.gl.readPixels(0,0,_.width,_.height,Qt.RGBA,s,A),v.unbind(e),u.mipmaps[y].pixels[ma[b]]=A}_.width/=2,_.height/=2,_.dirty()}return v.dispose(e),_.dispose(e),f.dispose(e),n.dispose(e),{environmentMap:u,brdfLookup:i,normalDistribution:n,maxMipmapLevel:c}},pa.integrateBRDF=function(e,t){t=t||pa.generateNormalDistribution();var r=new wi({depthBuffer:!1}),n=new Vi({fragment:"#define SAMPLE_NUMBER 1024\n#define PI 3.14159265358979\nuniform sampler2D normalDistribution;\nuniform vec2 viewportSize : [512, 256];\nconst vec3 N = vec3(0.0, 0.0, 1.0);\nconst float fSampleNumber = float(SAMPLE_NUMBER);\nvec3 importanceSampleNormal(float i, float roughness, vec3 N) {\n vec3 H = texture2D(normalDistribution, vec2(roughness, i)).rgb;\n vec3 upVector = abs(N.y) > 0.999 ? vec3(1.0, 0.0, 0.0) : vec3(0.0, 1.0, 0.0);\n vec3 tangentX = normalize(cross(N, upVector));\n vec3 tangentZ = cross(N, tangentX);\n return normalize(tangentX * H.x + N * H.y + tangentZ * H.z);\n}\nfloat G_Smith(float roughness, float NoV, float NoL) {\n float k = roughness * roughness / 2.0;\n float G1V = NoV / (NoV * (1.0 - k) + k);\n float G1L = NoL / (NoL * (1.0 - k) + k);\n return G1L * G1V;\n}\nvoid main() {\n vec2 uv = gl_FragCoord.xy / viewportSize;\n float NoV = uv.x;\n float roughness = uv.y;\n vec3 V;\n V.x = sqrt(1.0 - NoV * NoV);\n V.y = 0.0;\n V.z = NoV;\n float A = 0.0;\n float B = 0.0;\n for (int i = 0; i < SAMPLE_NUMBER; i++) {\n vec3 H = importanceSampleNormal(float(i) / fSampleNumber, roughness, N);\n vec3 L = reflect(-V, H);\n float NoL = clamp(L.z, 0.0, 1.0);\n float NoH = clamp(H.z, 0.0, 1.0);\n float VoH = clamp(dot(V, H), 0.0, 1.0);\n if (NoL > 0.0) {\n float G = G_Smith(roughness, NoV, NoL);\n float G_Vis = G * VoH / (NoH * NoV);\n float Fc = pow(1.0 - VoH, 5.0);\n A += (1.0 - Fc) * G_Vis;\n B += Fc * G_Vis;\n }\n }\n gl_FragColor = vec4(vec2(A, B) / fSampleNumber, 0.0, 1.0);\n}\n"}),i=new Nn({width:512,height:256,type:Qt.HALF_FLOAT,wrapS:Qt.CLAMP_TO_EDGE,wrapT:Qt.CLAMP_TO_EDGE,minFilter:Qt.NEAREST,magFilter:Qt.NEAREST,useMipmap:!1});return n.setUniform("normalDistribution",t),n.setUniform("viewportSize",[512,256]),n.attachOutput(i),n.render(e,r),r.dispose(e),i},pa.generateNormalDistribution=function(e,t){for(var e=e||256,t=t||1024,r=new Nn({width:e,height:t,type:Qt.FLOAT,minFilter:Qt.NEAREST,magFilter:Qt.NEAREST,wrapS:Qt.CLAMP_TO_EDGE,wrapT:Qt.CLAMP_TO_EDGE,useMipmap:!1}),n=new Float32Array(t*e*4),i=[],a=0;a<e;a++){for(var o=a/e,s=o*o,u=0;u<t;u++){var l=(u<<16|u>>>16)>>>0;l=((1431655765&l)<<1|(2863311530&l)>>>1)>>>0,l=((858993459&l)<<2|(3435973836&l)>>>2)>>>0,l=((252645135&l)<<4|(4042322160&l)>>>4)>>>0,l=(((16711935&l)<<8|(4278255360&l)>>>8)>>>0)/4294967296;var c=Math.sqrt((1-l)/(1+(s*s-1)*l));i[u]=c}for(var u=0;u<t;u++){var h=4*(u*e+a),c=i[u],f=Math.sqrt(1-c*c),d=u/t,p=2*Math.PI*d;n[h]=f*Math.cos(p),n[h+1]=c,n[h+2]=f*Math.sin(p),n[h+3]=1}}return r.pixels=n,r}
;L.import("@export ecgl.ssr.main\n\n#define SHADER_NAME SSR\n#define MAX_ITERATION 20;\n#define SAMPLE_PER_FRAME 5;\n#define TOTAL_SAMPLES 128;\n\nuniform sampler2D sourceTexture;\nuniform sampler2D gBufferTexture1;\nuniform sampler2D gBufferTexture2;\nuniform sampler2D gBufferTexture3;\nuniform samplerCube specularCubemap;\nuniform sampler2D brdfLookup;\nuniform float specularIntensity: 1;\n\nuniform mat4 projection;\nuniform mat4 projectionInv;\nuniform mat4 toViewSpace;\nuniform mat4 toWorldSpace;\n\nuniform float maxRayDistance: 200;\n\nuniform float pixelStride: 16;\nuniform float pixelStrideZCutoff: 50; \nuniform float screenEdgeFadeStart: 0.9; \nuniform float eyeFadeStart : 0.2; uniform float eyeFadeEnd: 0.8; \nuniform float minGlossiness: 0.2; uniform float zThicknessThreshold: 1;\n\nuniform float nearZ;\nuniform vec2 viewportSize : VIEWPORT_SIZE;\n\nuniform float jitterOffset: 0;\n\nvarying vec2 v_Texcoord;\n\n#ifdef DEPTH_DECODE\n@import clay.util.decode_float\n#endif\n\n#ifdef PHYSICALLY_CORRECT\nuniform sampler2D normalDistribution;\nuniform float sampleOffset: 0;\nuniform vec2 normalDistributionSize;\n\nvec3 transformNormal(vec3 H, vec3 N) {\n vec3 upVector = N.y > 0.999 ? vec3(1.0, 0.0, 0.0) : vec3(0.0, 1.0, 0.0);\n vec3 tangentX = normalize(cross(N, upVector));\n vec3 tangentZ = cross(N, tangentX);\n return normalize(tangentX * H.x + N * H.y + tangentZ * H.z);\n}\nvec3 importanceSampleNormalGGX(float i, float roughness, vec3 N) {\n float p = fract((i + sampleOffset) / float(TOTAL_SAMPLES));\n vec3 H = texture2D(normalDistribution,vec2(roughness, p)).rgb;\n return transformNormal(H, N);\n}\nfloat G_Smith(float g, float ndv, float ndl) {\n float roughness = 1.0 - g;\n float k = roughness * roughness / 2.0;\n float G1V = ndv / (ndv * (1.0 - k) + k);\n float G1L = ndl / (ndl * (1.0 - k) + k);\n return G1L * G1V;\n}\nvec3 F_Schlick(float ndv, vec3 spec) {\n return spec + (1.0 - spec) * pow(1.0 - ndv, 5.0);\n}\n#endif\n\nfloat fetchDepth(sampler2D depthTexture, vec2 uv)\n{\n vec4 depthTexel = texture2D(depthTexture, uv);\n return depthTexel.r * 2.0 - 1.0;\n}\n\nfloat linearDepth(float depth)\n{\n if (projection[3][3] == 0.0) {\n return projection[3][2] / (depth * projection[2][3] - projection[2][2]);\n }\n else {\n return (depth - projection[3][2]) / projection[2][2];\n }\n}\n\nbool rayIntersectDepth(float rayZNear, float rayZFar, vec2 hitPixel)\n{\n if (rayZFar > rayZNear)\n {\n float t = rayZFar; rayZFar = rayZNear; rayZNear = t;\n }\n float cameraZ = linearDepth(fetchDepth(gBufferTexture2, hitPixel));\n return rayZFar <= cameraZ && rayZNear >= cameraZ - zThicknessThreshold;\n}\n\n\nbool traceScreenSpaceRay(\n vec3 rayOrigin, vec3 rayDir, float jitter,\n out vec2 hitPixel, out vec3 hitPoint, out float iterationCount\n)\n{\n float rayLength = ((rayOrigin.z + rayDir.z * maxRayDistance) > -nearZ)\n ? (-nearZ - rayOrigin.z) / rayDir.z : maxRayDistance;\n\n vec3 rayEnd = rayOrigin + rayDir * rayLength;\n\n vec4 H0 = projection * vec4(rayOrigin, 1.0);\n vec4 H1 = projection * vec4(rayEnd, 1.0);\n\n float k0 = 1.0 / H0.w, k1 = 1.0 / H1.w;\n\n vec3 Q0 = rayOrigin * k0, Q1 = rayEnd * k1;\n\n vec2 P0 = (H0.xy * k0 * 0.5 + 0.5) * viewportSize;\n vec2 P1 = (H1.xy * k1 * 0.5 + 0.5) * viewportSize;\n\n P1 += dot(P1 - P0, P1 - P0) < 0.0001 ? 0.01 : 0.0;\n vec2 delta = P1 - P0;\n\n bool permute = false;\n if (abs(delta.x) < abs(delta.y)) {\n permute = true;\n delta = delta.yx;\n P0 = P0.yx;\n P1 = P1.yx;\n }\n float stepDir = sign(delta.x);\n float invdx = stepDir / delta.x;\n\n vec3 dQ = (Q1 - Q0) * invdx;\n float dk = (k1 - k0) * invdx;\n\n vec2 dP = vec2(stepDir, delta.y * invdx);\n\n float strideScaler = 1.0 - min(1.0, -rayOrigin.z / pixelStrideZCutoff);\n float pixStride = 1.0 + strideScaler * pixelStride;\n\n dP *= pixStride; dQ *= pixStride; dk *= pixStride;\n\n vec4 pqk = vec4(P0, Q0.z, k0);\n vec4 dPQK = vec4(dP, dQ.z, dk);\n\n pqk += dPQK * jitter;\n float rayZFar = (dPQK.z * 0.5 + pqk.z) / (dPQK.w * 0.5 + pqk.w);\n float rayZNear;\n\n bool intersect = false;\n\n vec2 texelSize = 1.0 / viewportSize;\n\n iterationCount = 0.0;\n\n for (int i = 0; i < MAX_ITERATION; i++)\n {\n pqk += dPQK;\n\n rayZNear = rayZFar;\n rayZFar = (dPQK.z * 0.5 + pqk.z) / (dPQK.w * 0.5 + pqk.w);\n\n hitPixel = permute ? pqk.yx : pqk.xy;\n hitPixel *= texelSize;\n\n intersect = rayIntersectDepth(rayZNear, rayZFar, hitPixel);\n\n iterationCount += 1.0;\n\n dPQK *= 1.2;\n\n if (intersect) {\n break;\n }\n }\n\n Q0.xy += dQ.xy * iterationCount;\n Q0.z = pqk.z;\n hitPoint = Q0 / pqk.w;\n\n return intersect;\n}\n\nfloat calculateAlpha(\n float iterationCount, float reflectivity,\n vec2 hitPixel, vec3 hitPoint, float dist, vec3 rayDir\n)\n{\n float alpha = clamp(reflectivity, 0.0, 1.0);\n alpha *= 1.0 - (iterationCount / float(MAX_ITERATION));\n vec2 hitPixelNDC = hitPixel * 2.0 - 1.0;\n float maxDimension = min(1.0, max(abs(hitPixelNDC.x), abs(hitPixelNDC.y)));\n alpha *= 1.0 - max(0.0, maxDimension - screenEdgeFadeStart) / (1.0 - screenEdgeFadeStart);\n\n float _eyeFadeStart = eyeFadeStart;\n float _eyeFadeEnd = eyeFadeEnd;\n if (_eyeFadeStart > _eyeFadeEnd) {\n float tmp = _eyeFadeEnd;\n _eyeFadeEnd = _eyeFadeStart;\n _eyeFadeStart = tmp;\n }\n\n float eyeDir = clamp(rayDir.z, _eyeFadeStart, _eyeFadeEnd);\n alpha *= 1.0 - (eyeDir - _eyeFadeStart) / (_eyeFadeEnd - _eyeFadeStart);\n\n alpha *= 1.0 - clamp(dist / maxRayDistance, 0.0, 1.0);\n\n return alpha;\n}\n\n@import clay.util.rand\n\n@import clay.util.rgbm\n\nvoid main()\n{\n vec4 normalAndGloss = texture2D(gBufferTexture1, v_Texcoord);\n\n if (dot(normalAndGloss.rgb, vec3(1.0)) == 0.0) {\n discard;\n }\n\n float g = normalAndGloss.a;\n#if !defined(PHYSICALLY_CORRECT)\n if (g <= minGlossiness) {\n discard;\n }\n#endif\n\n float reflectivity = (g - minGlossiness) / (1.0 - minGlossiness);\n\n vec3 N = normalize(normalAndGloss.rgb * 2.0 - 1.0);\n N = normalize((toViewSpace * vec4(N, 0.0)).xyz);\n\n vec4 projectedPos = vec4(v_Texcoord * 2.0 - 1.0, fetchDepth(gBufferTexture2, v_Texcoord), 1.0);\n vec4 pos = projectionInv * projectedPos;\n vec3 rayOrigin = pos.xyz / pos.w;\n vec3 V = -normalize(rayOrigin);\n\n float ndv = clamp(dot(N, V), 0.0, 1.0);\n float iterationCount;\n float jitter = rand(fract(v_Texcoord + jitterOffset));\n\n vec4 albedoMetalness = texture2D(gBufferTexture3, v_Texcoord);\n vec3 albedo = albedoMetalness.rgb;\n float m = albedoMetalness.a;\n vec3 diffuseColor = albedo * (1.0 - m);\n vec3 spec = mix(vec3(0.04), albedo, m);\n\n#ifdef PHYSICALLY_CORRECT\n vec4 color = vec4(vec3(0.0), 1.0);\n\n float jitter2 = rand(fract(v_Texcoord)) * float(TOTAL_SAMPLES);\n\n for (int i = 0; i < SAMPLE_PER_FRAME; i++) {\n vec3 H = importanceSampleNormalGGX(float(i) + jitter2, 1.0 - g, N);\n vec3 rayDir = normalize(reflect(-V, H));\n#else\n vec3 rayDir = normalize(reflect(-V, N));\n#endif\n vec2 hitPixel;\n vec3 hitPoint;\n\n bool intersect = traceScreenSpaceRay(rayOrigin, rayDir, jitter, hitPixel, hitPoint, iterationCount);\n\n float dist = distance(rayOrigin, hitPoint);\n\n vec3 hitNormal = texture2D(gBufferTexture1, hitPixel).rgb * 2.0 - 1.0;\n hitNormal = normalize((toViewSpace * vec4(hitNormal, 0.0)).xyz);\n#ifdef PHYSICALLY_CORRECT\n float ndl = clamp(dot(N, rayDir), 0.0, 1.0);\n float vdh = clamp(dot(V, H), 0.0, 1.0);\n float ndh = clamp(dot(N, H), 0.0, 1.0);\n vec3 litTexel = vec3(0.0);\n if (dot(hitNormal, rayDir) < 0.0 && intersect) {\n litTexel = texture2D(sourceTexture, hitPixel).rgb;\n litTexel *= pow(clamp(1.0 - dist / 200.0, 0.0, 1.0), 3.0);\n\n }\n else {\n #ifdef SPECULARCUBEMAP_ENABLED\n vec3 rayDirW = normalize(toWorldSpace * vec4(rayDir, 0.0)).rgb;\n litTexel = RGBMDecode(textureCubeLodEXT(specularCubemap, rayDirW, 0.0), 8.12).rgb * specularIntensity;\n#endif\n }\n color.rgb += ndl * litTexel * (\n F_Schlick(ndl, spec) * G_Smith(g, ndv, ndl) * vdh / (ndh * ndv + 0.001)\n );\n }\n color.rgb /= float(SAMPLE_PER_FRAME);\n#else\n #if !defined(SPECULARCUBEMAP_ENABLED)\n if (dot(hitNormal, rayDir) >= 0.0) {\n discard;\n }\n if (!intersect) {\n discard;\n }\n#endif\n float alpha = clamp(calculateAlpha(iterationCount, reflectivity, hitPixel, hitPoint, dist, rayDir), 0.0, 1.0);\n vec4 color = texture2D(sourceTexture, hitPixel);\n color.rgb *= alpha;\n\n#ifdef SPECULARCUBEMAP_ENABLED\n vec3 rayDirW = normalize(toWorldSpace * vec4(rayDir, 0.0)).rgb;\n alpha = alpha * (intersect ? 1.0 : 0.0);\n float bias = (1.0 - g) * 5.0;\n vec2 brdfParam2 = texture2D(brdfLookup, vec2(1.0 - g, ndv)).xy;\n color.rgb += (1.0 - alpha)\n * RGBMDecode(textureCubeLodEXT(specularCubemap, rayDirW, bias), 8.12).rgb\n * (spec * brdfParam2.x + brdfParam2.y)\n * specularIntensity;\n#endif\n\n#endif\n\n gl_FragColor = encodeHDR(color);\n}\n@end\n\n@export ecgl.ssr.blur\n\nuniform sampler2D texture;\nuniform sampler2D gBufferTexture1;\nuniform sampler2D gBufferTexture2;\nuniform mat4 projection;\nuniform float depthRange : 0.05;\n\nvarying vec2 v_Texcoord;\n\nuniform vec2 textureSize;\nuniform float blurSize : 1.0;\n\n#ifdef BLEND\n #ifdef SSAOTEX_ENABLED\nuniform sampler2D ssaoTex;\n #endif\nuniform sampler2D sourceTexture;\n#endif\n\nfloat getLinearDepth(vec2 coord)\n{\n float depth = texture2D(gBufferTexture2, coord).r * 2.0 - 1.0;\n return projection[3][2] / (depth * projection[2][3] - projection[2][2]);\n}\n\n@import clay.util.rgbm\n\n\nvoid main()\n{\n @import clay.compositor.kernel.gaussian_9\n\n vec4 centerNTexel = texture2D(gBufferTexture1, v_Texcoord);\n float g = centerNTexel.a;\n float maxBlurSize = clamp(1.0 - g, 0.0, 1.0) * blurSize;\n#ifdef VERTICAL\n vec2 off = vec2(0.0, maxBlurSize / textureSize.y);\n#else\n vec2 off = vec2(maxBlurSize / textureSize.x, 0.0);\n#endif\n\n vec2 coord = v_Texcoord;\n\n vec4 sum = vec4(0.0);\n float weightAll = 0.0;\n\n vec3 cN = centerNTexel.rgb * 2.0 - 1.0;\n float cD = getLinearDepth(v_Texcoord);\n for (int i = 0; i < 9; i++) {\n vec2 coord = clamp((float(i) - 4.0) * off + v_Texcoord, vec2(0.0), vec2(1.0));\n float w = gaussianKernel[i]\n * clamp(dot(cN, texture2D(gBufferTexture1, coord).rgb * 2.0 - 1.0), 0.0, 1.0);\n float d = getLinearDepth(coord);\n w *= (1.0 - smoothstep(abs(cD - d) / depthRange, 0.0, 1.0));\n\n weightAll += w;\n sum += decodeHDR(texture2D(texture, coord)) * w;\n }\n\n#ifdef BLEND\n float aoFactor = 1.0;\n #ifdef SSAOTEX_ENABLED\n aoFactor = texture2D(ssaoTex, v_Texcoord).r;\n #endif\n gl_FragColor = encodeHDR(\n sum / weightAll * aoFactor + decodeHDR(texture2D(sourceTexture, v_Texcoord))\n );\n#else\n gl_FragColor = encodeHDR(sum / weightAll);\n#endif\n}\n\n@end"),Ie.prototype.setAmbientCubemap=function(e,t,r){this._ssrPass.material.set("specularCubemap",e),this._ssrPass.material.set("brdfLookup",t),this._ssrPass.material.set("specularIntensity",r);var n=e&&r;this._ssrPass.material[n?"enableTexture":"disableTexture"]("specularCubemap")},Ie.prototype.update=function(e,t,r,n){var i=e.getWidth(),a=e.getHeight(),o=this._ssrTexture,s=this._texture2,u=this._texture3;o.width=this._prevTexture.width=this._currentTexture.width=i/this._downScale,o.height=this._prevTexture.height=this._currentTexture.height=a/this._downScale,s.width=u.width=i,s.height=u.height=a;var l=this._frameBuffer,c=this._ssrPass,h=this._blurPass1,f=this._blurPass2,d=this._blendPass,p=new Kt,m=new Kt;Kt.transpose(p,t.worldTransform),Kt.transpose(m,t.viewMatrix),c.setUniform("sourceTexture",r),c.setUniform("projection",t.projectionMatrix.array),c.setUniform("projectionInv",t.invProjectionMatrix.array),c.setUniform("toViewSpace",p.array),c.setUniform("toWorldSpace",m.array),c.setUniform("nearZ",t.near);var _=n/this._totalSamples*this._samplePerFrame;if(c.setUniform("jitterOffset",_),c.setUniform("sampleOffset",n*this._samplePerFrame),h.setUniform("textureSize",[o.width,o.height]),f.setUniform("textureSize",[i,a]),f.setUniform("sourceTexture",r),h.setUniform("projection",t.projectionMatrix.array),f.setUniform("projection",t.projectionMatrix.array),l.attach(o),l.bind(e),c.render(e),this._physicallyCorrect&&(l.attach(this._currentTexture),d.setUniform("texture1",this._prevTexture),d.setUniform("texture2",o),d.material.set({weight1:n>=1?.95:0,weight2:n>=1?.05:1}),d.render(e)),l.attach(s),h.setUniform("texture",this._physicallyCorrect?this._currentTexture:o),h.render(e),l.attach(u),f.setUniform("texture",s),f.render(e),l.unbind(e),this._physicallyCorrect){var v=this._prevTexture;this._prevTexture=this._currentTexture,this._currentTexture=v}},Ie.prototype.getTargetTexture=function(){return this._texture3},Ie.prototype.setParameter=function(e,t){"maxIteration"===e?this._ssrPass.material.define("fragment","MAX_ITERATION",t):this._ssrPass.setUniform(e,t)},Ie.prototype.setPhysicallyCorrect=function(e){e?(this._normalDistribution||(this._normalDistribution=pa.generateNormalDistribution(64,this._totalSamples)),this._ssrPass.material.define("fragment","PHYSICALLY_CORRECT"),this._ssrPass.material.set("normalDistribution",this._normalDistribution),this._ssrPass.material.set("normalDistributionSize",[64,this._totalSamples])):this._ssrPass.material.undefine("fragment","PHYSICALLY_CORRECT"),this._physicallyCorrect=e},Ie.prototype.setSSAOTexture=function(e){var t=this._blurPass2;e?(t.material.enableTexture("ssaoTex"),t.material.set("ssaoTex",e)):t.material.disableTexture("ssaoTex")},Ie.prototype.isFinished=function(e){return!this._physicallyCorrect||e>this._totalSamples/this._samplePerFrame},Ie.prototype.dispose=function(e){this._ssrTexture.dispose(e),this._texture2.dispose(e),this._texture3.dispose(e),this._prevTexture.dispose(e),this._currentTexture.dispose(e),this._frameBuffer.dispose(e)};var _a=[0,0,-.321585265978,-.154972575841,.458126042375,.188473391593,.842080129861,.527766490688,.147304551086,-.659453822776,-.331943915203,-.940619700594,.0479226680259,.54812163202,.701581552186,-.709825561388,-.295436780218,.940589268233,-.901489676764,.237713156085,.973570876096,-.109899459384,-.866792314779,-.451805525005,.330975007087,.800048655954,-.344275183665,.381779221166,-.386139432542,-.437418421534,-.576478634965,-.0148463392551,.385798197415,-.262426961053,-.666302061145,.682427250835,-.628010632582,-.732836215494,.10163141741,-.987658134403,.711995289051,-.320024291314,.0296005138058,.950296523438,.0130612307608,-.351024443122,-.879596633704,-.10478487883,.435712737232,.504254490347,.779203817497,.206477676721,.388264289969,-.896736162545,-.153106280781,-.629203242522,-.245517550697,.657969239148,.126830499058,.26862328493,-.634888119007,-.302301223431,.617074219636,.779817204925],va="@export clay.deferred.gbuffer.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 worldInverseTranspose : WORLDINVERSETRANSPOSE;\nuniform mat4 world : WORLD;\nuniform vec2 uvRepeat;\nuniform vec2 uvOffset;\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\n#ifdef FIRST_PASS\nattribute vec3 normal : NORMAL;\n#endif\n@import clay.chunk.skinning_header\n#ifdef FIRST_PASS\nvarying vec3 v_Normal;\nattribute vec4 tangent : TANGENT;\nvarying vec3 v_Tangent;\nvarying vec3 v_Bitangent;\nvarying vec3 v_WorldPosition;\n#endif\nvarying vec2 v_Texcoord;\nvoid main()\n{\n vec3 skinnedPosition = position;\n#ifdef FIRST_PASS\n vec3 skinnedNormal = normal;\n vec3 skinnedTangent = tangent.xyz;\n bool hasTangent = dot(tangent, tangent) > 0.0;\n#endif\n#ifdef SKINNING\n @import clay.chunk.skin_matrix\n skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n #ifdef FIRST_PASS\n skinnedNormal = (skinMatrixWS * vec4(normal, 0.0)).xyz;\n if (hasTangent) {\n skinnedTangent = (skinMatrixWS * vec4(tangent.xyz, 0.0)).xyz;\n }\n #endif\n#endif\n gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0);\n v_Texcoord = texcoord * uvRepeat + uvOffset;\n#ifdef FIRST_PASS\n v_Normal = normalize((worldInverseTranspose * vec4(skinnedNormal, 0.0)).xyz);\n if (hasTangent) {\n v_Tangent = normalize((worldInverseTranspose * vec4(skinnedTangent, 0.0)).xyz);\n v_Bitangent = normalize(cross(v_Normal, v_Tangent) * tangent.w);\n }\n v_WorldPosition = (world * vec4(skinnedPosition, 1.0)).xyz;\n#endif\n}\n@end\n@export clay.deferred.gbuffer1.fragment\nuniform mat4 viewInverse : VIEWINVERSE;\nuniform float glossiness;\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\nuniform sampler2D normalMap;\nvarying vec3 v_Tangent;\nvarying vec3 v_Bitangent;\nuniform sampler2D roughGlossMap;\nuniform bool useRoughGlossMap;\nuniform bool useRoughness;\nuniform bool doubleSided;\nuniform int roughGlossChannel: 0;\nfloat indexingTexel(in vec4 texel, in int idx) {\n if (idx == 3) return texel.a;\n else if (idx == 1) return texel.g;\n else if (idx == 2) return texel.b;\n else return texel.r;\n}\nvoid main()\n{\n vec3 N = v_Normal;\n if (doubleSided) {\n vec3 eyePos = viewInverse[3].xyz;\n vec3 V = eyePos - v_WorldPosition;\n if (dot(N, V) < 0.0) {\n N = -N;\n }\n }\n if (dot(v_Tangent, v_Tangent) > 0.0) {\n vec3 normalTexel = texture2D(normalMap, v_Texcoord).xyz;\n if (dot(normalTexel, normalTexel) > 0.0) { N = normalTexel * 2.0 - 1.0;\n mat3 tbn = mat3(v_Tangent, v_Bitangent, v_Normal);\n N = normalize(tbn * N);\n }\n }\n gl_FragColor.rgb = (N + 1.0) * 0.5;\n float g = glossiness;\n if (useRoughGlossMap) {\n float g2 = indexingTexel(texture2D(roughGlossMap, v_Texcoord), roughGlossChannel);\n if (useRoughness) {\n g2 = 1.0 - g2;\n }\n g = clamp(g2 + (g - 0.5) * 2.0, 0.0, 1.0);\n }\n gl_FragColor.a = g + 0.005;\n}\n@end\n@export clay.deferred.gbuffer2.fragment\nuniform sampler2D diffuseMap;\nuniform sampler2D metalnessMap;\nuniform vec3 color;\nuniform float metalness;\nuniform bool useMetalnessMap;\nuniform bool linear;\nvarying vec2 v_Texcoord;\n@import clay.util.srgb\nvoid main ()\n{\n float m = metalness;\n if (useMetalnessMap) {\n vec4 metalnessTexel = texture2D(metalnessMap, v_Texcoord);\n m = clamp(metalnessTexel.r + (m * 2.0 - 1.0), 0.0, 1.0);\n }\n vec4 texel = texture2D(diffuseMap, v_Texcoord);\n if (linear) {\n texel = sRGBToLinear(texel);\n }\n gl_FragColor.rgb = texel.rgb * color;\n gl_FragColor.a = m + 0.005;\n}\n@end\n@export clay.deferred.gbuffer.debug\n@import clay.deferred.chunk.light_head\nuniform int debug: 0;\nvoid main ()\n{\n @import clay.deferred.chunk.gbuffer_read\n if (debug == 0) {\n gl_FragColor = vec4(N, 1.0);\n }\n else if (debug == 1) {\n gl_FragColor = vec4(vec3(z), 1.0);\n }\n else if (debug == 2) {\n gl_FragColor = vec4(position, 1.0);\n }\n else if (debug == 3) {\n gl_FragColor = vec4(vec3(glossiness), 1.0);\n }\n else if (debug == 4) {\n gl_FragColor = vec4(vec3(metalness), 1.0);\n }\n else {\n gl_FragColor = vec4(albedo, 1.0);\n }\n}\n@end";L.import(va),L.import("@export clay.deferred.chunk.light_head\nuniform sampler2D gBufferTexture1;\nuniform sampler2D gBufferTexture2;\nuniform sampler2D gBufferTexture3;\nuniform vec2 windowSize: WINDOW_SIZE;\nuniform vec4 viewport: VIEWPORT;\nuniform mat4 viewProjectionInv;\n#ifdef DEPTH_ENCODED\n@import clay.util.decode_float\n#endif\n@end\n@export clay.deferred.chunk.gbuffer_read\n vec2 uv = gl_FragCoord.xy / windowSize;\n vec2 uv2 = (gl_FragCoord.xy - viewport.xy) / viewport.zw;\n vec4 texel1 = texture2D(gBufferTexture1, uv);\n vec4 texel3 = texture2D(gBufferTexture3, uv);\n if (dot(texel1.rgb, vec3(1.0)) == 0.0) {\n discard;\n }\n float glossiness = texel1.a;\n float metalness = texel3.a;\n vec3 N = texel1.rgb * 2.0 - 1.0;\n float z = texture2D(gBufferTexture2, uv).r * 2.0 - 1.0;\n vec2 xy = uv2 * 2.0 - 1.0;\n vec4 projectedPos = vec4(xy, z, 1.0);\n vec4 p4 = viewProjectionInv * projectedPos;\n vec3 position = p4.xyz / p4.w;\n vec3 albedo = texel3.rgb;\n vec3 diffuseColor = albedo * (1.0 - metalness);\n vec3 specularColor = mix(vec3(0.04), albedo, metalness);\n@end\n@export clay.deferred.chunk.light_equation\nfloat D_Phong(in float g, in float ndh) {\n float a = pow(8192.0, g);\n return (a + 2.0) / 8.0 * pow(ndh, a);\n}\nfloat D_GGX(in float g, in float ndh) {\n float r = 1.0 - g;\n float a = r * r;\n float tmp = ndh * ndh * (a - 1.0) + 1.0;\n return a / (3.1415926 * tmp * tmp);\n}\nvec3 F_Schlick(in float ndv, vec3 spec) {\n return spec + (1.0 - spec) * pow(1.0 - ndv, 5.0);\n}\nvec3 lightEquation(\n in vec3 lightColor, in vec3 diffuseColor, in vec3 specularColor,\n in float ndl, in float ndh, in float ndv, in float g\n)\n{\n return ndl * lightColor\n * (diffuseColor + D_Phong(g, ndh) * F_Schlick(ndv, specularColor));\n}\n@end");var ga=At.extend(function(){return{enableTargetTexture1:!0,enableTargetTexture2:!0,enableTargetTexture3:!0,renderTransparent:!1,_gBufferRenderList:[],_gBufferTex1:new Nn({minFilter:Qt.NEAREST,magFilter:Qt.NEAREST,type:Qt.HALF_FLOAT}),_gBufferTex2:new Nn({minFilter:Qt.NEAREST,magFilter:Qt.NEAREST,format:Qt.DEPTH_STENCIL,type:Qt.UNSIGNED_INT_24_8_WEBGL}),_gBufferTex3:new Nn({minFilter:Qt.NEAREST,magFilter:Qt.NEAREST}),_defaultNormalMap:new Nn({image:Fe("#000")}),_defaultRoughnessMap:new Nn({image:Fe("#fff")}),_defaultMetalnessMap:new Nn({image:Fe("#fff")}),_defaultDiffuseMap:new Nn({image:Fe("#fff")}),_frameBuffer:new wi,_gBufferMaterial1:new sr({shader:new L(L.source("clay.deferred.gbuffer.vertex"),L.source("clay.deferred.gbuffer1.fragment")),vertexDefines:{FIRST_PASS:null},fragmentDefines:{FIRST_PASS:null}}),_gBufferMaterial2:new sr({shader:new L(L.source("clay.deferred.gbuffer.vertex"),L.source("clay.deferred.gbuffer2.fragment"))}),_debugPass:new Vi({fragment:L.source("clay.deferred.gbuffer.debug")})}},{resize:function(e,t){this._gBufferTex1.width===e&&this._gBufferTex1.height===t||(this._gBufferTex1.width=e,this._gBufferTex1.height=t,this._gBufferTex2.width=e,this._gBufferTex2.height=t,this._gBufferTex3.width=e,this._gBufferTex3.height=t)},setViewport:function(e,t,r,n,i){var a;a="object"==typeof e?e:{x:e,y:t,width:r,height:n,devicePixelRatio:i||1},this._frameBuffer.viewport=a},getViewport:function(){return this._frameBuffer.viewport?this._frameBuffer.viewport:{x:0,y:0,width:this._gBufferTex1.width,height:this._gBufferTex1.height,devicePixelRatio:1}},update:function(e,t,r){for(var n=e.gl,i=this._frameBuffer,a=i.viewport,o=t.updateRenderList(r,!0),s=o.opaque,u=o.transparent,l=0,c=this._gBufferRenderList,h=0;h<s.length;h++)s[h].ignoreGBuffer||(c[l++]=s[h]);if(this.renderTransparent)for(var h=0;h<u.length;h++)u[h].ignoreGBuffer||(c[l++]=u[h]);c.length=l,n.clearColor(0,0,0,0),n.depthMask(!0),n.colorMask(!0,!0,!0,!0),n.disable(n.BLEND);var f=this.enableTargetTexture1,d=this.enableTargetTexture2,p=this.enableTargetTexture3;if(f||p||(console.warn("Can't disable targetTexture1 targetTexture3 both"),f=!0),d&&i.attach(this._gBufferTex2,e.gl.DEPTH_STENCIL_ATTACHMENT),e.bindSceneRendering(t),f){if(i.attach(this._gBufferTex1),i.bind(e),a){var m=a.devicePixelRatio;n.enable(n.SCISSOR_TEST),n.scissor(a.x*m,a.y*m,a.width*m,a.height*m)}n.clear(n.COLOR_BUFFER_BIT|n.DEPTH_BUFFER_BIT),a&&n.disable(n.SCISSOR_TEST);var _=this._gBufferMaterial1,v={getMaterial:function(){return _},beforeRender:Ue(n,this._defaultNormalMap,this._defaultRoughnessMap),sortCompare:e.opaqueSortCompare};e.renderPass(c,r,v)}if(p){if(i.attach(this._gBufferTex3),i.bind(e),a){var m=a.devicePixelRatio;n.enable(n.SCISSOR_TEST),n.scissor(a.x*m,a.y*m,a.width*m,a.height*m)}n.clear(n.COLOR_BUFFER_BIT|n.DEPTH_BUFFER_BIT),a&&n.disable(n.SCISSOR_TEST);var g=this._gBufferMaterial2,v={getMaterial:function(){return g},beforeRender:ke(n,this._defaultDiffuseMap,this._defaultMetalnessMap),sortCompare:e.opaqueSortCompare};e.renderPass(c,r,v)}e.bindSceneRendering(null),i.unbind(e)},renderDebug:function(e,t,r,n){var i={normal:0,depth:1,position:2,glossiness:3,metalness:4,albedo:5};null==i[r]&&(console.warn('Unkown type "'+r+'"'),r="normal"),e.saveClear(),e.saveViewport(),e.clearBit=e.gl.DEPTH_BUFFER_BIT,n&&e.setViewport(n);var a=new Kt;Kt.multiply(a,t.worldTransform,t.invProjectionMatrix);var o=this._debugPass;o.setUniform("viewportSize",[e.getWidth(),e.getHeight()]),o.setUniform("gBufferTexture1",this._gBufferTex1),o.setUniform("gBufferTexture2",this._gBufferTex2),o.setUniform("gBufferTexture3",this._gBufferTex3),o.setUniform("debug",i[r]),o.setUniform("viewProjectionInv",a.array),o.render(e),e.restoreViewport(),e.restoreClear()},getTargetTexture1:function(){return this._gBufferTex1},getTargetTexture2:function(){return this._gBufferTex2},getTargetTexture3:function(){return this._gBufferTex3},dispose:function(e){}}),ya=function(){this.head=null,this.tail=null,this._len=0},xa=ya.prototype;xa.insert=function(e){var t=new Ta(e);return this.insertEntry(t),t},xa.insertEntry=function(e){this.head?(this.tail.next=e,e.prev=this.tail,e.next=null,this.tail=e):this.head=this.tail=e,this._len++},xa.remove=function(e){var t=e.prev,r=e.next;t?t.next=r:this.head=r,r?r.prev=t:this.tail=t,e.next=e.prev=null,this._len--},xa.len=function(){return this._len},xa.clear=function(){this.head=this.tail=null,this._len=0};var Ta=function(e){this.value=e,this.next,this.prev},Ea=function(e){this._list=new ya,this._map={},this._maxSize=e||10,this._lastRemovedEntry=null},ba=Ea.prototype;ba.put=function(e,t){var r=this._list,n=this._map,i=null;if(null==n[e]){var a=r.len(),o=this._lastRemovedEntry;if(a>=this._maxSize&&a>0){var s=r.head;r.remove(s),delete n[s.key],i=s.value,this._lastRemovedEntry=s}o?o.value=t:o=new Ta(t),o.key=e,r.insertEntry(o),n[e]=o}return i},ba.get=function(e){var t=this._map[e],r=this._list;if(null!=t)return t!==r.tail&&(r.remove(t),r.insertEntry(t)),t.value},ba.clear=function(){this._list.clear(),this._map={}};var Aa=Yr.extend({cubemap:null,castShadow:!1,_normalDistribution:null,_brdfLookup:null},{type:"AMBIENT_CUBEMAP_LIGHT",prefilter:function(e,t){this._brdfLookup||(this._normalDistribution=pa.generateNormalDistribution(),this._brdfLookup=pa.integrateBRDF(e,this._normalDistribution));var r=this.cubemap;if(!r.__prefiltered){var n=pa.prefilterEnvironmentMap(e,r,{encodeRGBM:!0,width:t,height:t},this._normalDistribution,this._brdfLookup);this.cubemap=n.environmentMap,this.cubemap.__prefiltered=!0,r.dispose(e)}},getBRDFLookup:function(){return this._brdfLookup},uniformTemplates:{ambientCubemapLightColor:{type:"3f",value:function(e){var t=e.color,r=e.intensity;return[t[0]*r,t[1]*r,t[2]*r]}},ambientCubemapLightCubemap:{type:"t",value:function(e){return e.cubemap}},ambientCubemapLightBRDFLookup:{type:"t",value:function(e){return e._brdfLookup}}}}),Sa=Yr.extend({castShadow:!1,coefficients:[]},function(){this._coefficientsTmpArr=new Mt.Float32Array(27)},{type:"AMBIENT_SH_LIGHT",uniformTemplates:{ambientSHLightColor:{type:"3f",value:function(e){var t=e.color,r=e.intensity;return[t[0]*r,t[1]*r,t[2]*r]}},ambientSHLightCoefficients:{type:"3f",value:function(e){for(var t=e._coefficientsTmpArr,r=0;r<e.coefficients.length;r++)t[r]=e.coefficients[r];return t}}}}),wa=Pt.vec3,Ca={},Ra=["px","nx","py","ny","pz","nz"],Na={px:[2,1,0,-1,-1,1],nx:[2,1,0,1,-1,-1],py:[0,2,1,1,-1,-1],ny:[0,2,1,1,1,1],pz:[0,1,2,-1,-1,-1],nz:[0,1,2,1,-1,1]};Ca.projectEnvironmentMap=function(e,t,r){r=r||{},r.lod=r.lod||0;var n,i=new vn,a=64;"texture2D"===t.textureType?n=new Mi({scene:i,environmentMap:t}):(a=t.image&&t.image.px?t.image.px.width:t.width,n=new da({scene:i,environmentMap:t}));var o=Math.ceil(a/Math.pow(2,r.lod)),s=Math.ceil(a/Math.pow(2,r.lod)),u=new Nn({width:o,height:s}),l=new wi;n.material.define("fragment","RGBM_ENCODE"),r.decodeRGBM&&n.material.define("fragment","RGBM_DECODE"),n.material.set("lod",r.lod);for(var c=new Ri({texture:u}),h={},f=0;f<Ra.length;f++){h[Ra[f]]=new Uint8Array(o*s*4);var d=c.getCamera(Ra[f]);d.fov=90,l.attach(u),l.bind(e),e.render(i,d),e.gl.readPixels(0,0,o,s,Qt.RGBA,Qt.UNSIGNED_BYTE,h[Ra[f]]),l.unbind(e)}return n.dispose(e),l.dispose(e),u.dispose(e),ze(e,h,o,s)};var Ma={transparent:[0,0,0,0],aliceblue:[240,248,255,1],antiquewhite:[250,235,215,1],aqua:[0,255,255,1],aquamarine:[127,255,212,1],azure:[240,255,255,1],beige:[245,245,220,1],bisque:[255,228,196,1],black:[0,0,0,1],blanchedalmond:[255,235,205,1],blue:[0,0,255,1],blueviolet:[138,43,226,1],brown:[165,42,42,1],burlywood:[222,184,135,1],cadetblue:[95,158,160,1],chartreuse:[127,255,0,1],chocolate:[210,105,30,1],coral:[255,127,80,1],cornflowerblue:[100,149,237,1],cornsilk:[255,248,220,1],crimson:[220,20,60,1],cyan:[0,255,255,1],darkblue:[0,0,139,1],darkcyan:[0,139,139,1],darkgoldenrod:[184,134,11,1],darkgray:[169,169,169,1],darkgreen:[0,100,0,1],darkgrey:[169,169,169,1],darkkhaki:[189,183,107,1],darkmagenta:[139,0,139,1],darkolivegreen:[85,107,47,1],darkorange:[255,140,0,1],darkorchid:[153,50,204,1],darkred:[139,0,0,1],darksalmon:[233,150,122,1],darkseagreen:[143,188,143,1],darkslateblue:[72,61,139,1],darkslategray:[47,79,79,1],darkslategrey:[47,79,79,1],darkturquoise:[0,206,209,1],darkviolet:[148,0,211,1],deeppink:[255,20,147,1],deepskyblue:[0,191,255,1],dimgray:[105,105,105,1],dimgrey:[105,105,105,1],dodgerblue:[30,144,255,1],firebrick:[178,34,34,1],floralwhite:[255,250,240,1],forestgreen:[34,139,34,1],fuchsia:[255,0,255,1],gainsboro:[220,220,220,1],ghostwhite:[248,248,255,1],gold:[255,215,0,1],goldenrod:[218,165,32,1],gray:[128,128,128,1],green:[0,128,0,1],greenyellow:[173,255,47,1],grey:[128,128,128,1],honeydew:[240,255,240,1],hotpink:[255,105,180,1],indianred:[205,92,92,1],indigo:[75,0,130,1],ivory:[255,255,240,1],khaki:[240,230,140,1],lavender:[230,230,250,1],lavenderblush:[255,240,245,1],lawngreen:[124,252,0,1],lemonchiffon:[255,250,205,1],lightblue:[173,216,230,1],lightcoral:[240,128,128,1],lightcyan:[224,255,255,1],lightgoldenrodyellow:[250,250,210,1],lightgray:[211,211,211,1],lightgreen:[144,238,144,1],lightgrey:[211,211,211,1],lightpink:[255,182,193,1],lightsalmon:[255,160,122,1],lightseagreen:[32,178,170,1],lightskyblue:[135,206,250,1],lightslategray:[119,136,153,1],lightslategrey:[119,136,153,1],lightsteelblue:[176,196,222,1],lightyellow:[255,255,224,1],lime:[0,255,0,1],limegreen:[50,205,50,1],linen:[250,240,230,1],magenta:[255,0,255,1],maroon:[128,0,0,1],mediumaquamarine:[102,205,170,1],mediumblue:[0,0,205,1],mediumorchid:[186,85,211,1],mediumpurple:[147,112,219,1],mediumseagreen:[60,179,113,1],mediumslateblue:[123,104,238,1],mediumspringgreen:[0,250,154,1],mediumturquoise:[72,209,204,1],mediumvioletred:[199,21,133,1],midnightblue:[25,25,112,1],mintcream:[245,255,250,1],mistyrose:[255,228,225,1],moccasin:[255,228,181,1],navajowhite:[255,222,173,1],navy:[0,0,128,1],oldlace:[253,245,230,1],olive:[128,128,0,1],olivedrab:[107,142,35,1],orange:[255,165,0,1],orangered:[255,69,0,1],orchid:[218,112,214,1],palegoldenrod:[238,232,170,1],palegreen:[152,251,152,1],paleturquoise:[175,238,238,1],palevioletred:[219,112,147,1],papayawhip:[255,239,213,1],peachpuff:[255,218,185,1],peru:[205,133,63,1],pink:[255,192,203,1],plum:[221,160,221,1],powderblue:[176,224,230,1],purple:[128,0,128,1],red:[255,0,0,1],rosybrown:[188,143,143,1],royalblue:[65,105,225,1],saddlebrown:[139,69,19,1],salmon:[250,128,114,1],sandybrown:[244,164,96,1],seagreen:[46,139,87,1],seashell:[255,245,238,1],sienna:[160,82,45,1],silver:[192,192,192,1],skyblue:[135,206,235,1],slateblue:[106,90,205,1],slategray:[112,128,144,1],slategrey:[112,128,144,1],snow:[255,250,250,1],springgreen:[0,255,127,1],steelblue:[70,130,180,1],tan:[210,180,140,1],teal:[0,128,128,1],thistle:[216,191,216,1],tomato:[255,99,71,1],turquoise:[64,224,208,1],violet:[238,130,238,1],wheat:[245,222,179,1],white:[255,255,255,1],whitesmoke:[245,245,245,1],yellow:[255,255,0,1],yellowgreen:[154,205,50,1]},La=new Ea(20),Pa=null;sr.prototype.setTextureImage=function(e,t,r,n){if(this.shader){var i,a=this;return a.disableTexture(e),$e(t)||(i=Da.loadTexture(t,r,n,function(t){a.enableTexture(e),r.refresh()}),a.set(e,i)),i}};var Da={},Oa=ki.createBlank("rgba(255,255,255,0)").image;Da.firstNotNull=function(){for(var e=0,t=arguments.length;e<t;e++)if(null!=arguments[e])return arguments[e]},Da.loadTexture=function(e,t,r,n){"function"==typeof r&&(n=r,r={}),r=r||{};for(var i=Object.keys(r).sort(),a="",o=0;o<i.length;o++)a+=i[o]+"_"+r[i[o]]+"_";var s=t.__textureCache=t.__textureCache||new Ea(20);if(et(e)){var u=e.__textureid__,l=s.get(a+u);if(!l){l={texture:new Nn({image:e,convertToPOT:!0,dynamic:e instanceof HTMLVideoElement})}
;for(var o=0;o<i.length;o++)l.texture[i[o]]=r[i[o]];u=e.__textureid__||"__ecgl_image__"+l.texture.__GUID__,e.__textureid__=u,s.put(a+u,l),n&&n(l.texture)}return l.texture}var l=s.get(a+e);if(l)l.callbacks?l.callbacks.push(n):n&&n(l.texture);else if(e.match(/.hdr$|^data:application\/octet-stream/)){l={callbacks:[n]};var c=ki.loadTexture(e,{exposure:r.exposure,fileType:"hdr"},function(){c.dirty(),l.callbacks.forEach(function(e){e&&e(c)}),l.callbacks=null});l.texture=c,s.put(a+e,l)}else{for(var h=e.split(".").pop(),f="mp4"===h||"webm"===h||"ogg"===h,c=new Nn({convertToPOT:!0,image:f?document.createElement("video"):new Image,dynamic:f}),o=0;o<i.length;o++)c[i[o]]=r[i[o]];l={texture:c,callbacks:[n]};var d=c.image,p=function(){c.image=d,c.dirty(),l.callbacks.forEach(function(e){e&&e(c)}),l.callbacks=null};f?d.oncanplay=function(){d.width=d.videoWidth,d.height=d.videoHeight,d.oncanplay=null,d.loop=!0,d.play(),p()}:d.onload=p,d.src=e,c.image=Oa,s.put(a+e,l)}return l.texture},Da.createAmbientCubemap=function(e,t,r){e=e||{};var n,i,a=t.getRenderer(),o=e.texture,s=Da.firstNotNull(e.exposure,1);return 0!==e.diffuseIntensity&&(i=new Sa({coefficients:[.844,.712,.691,-.037,.083,.167,.343,.288,.299,-.041,-.021,-.009,-.003,-.041,-.064,-.011,-.007,-.004,-.031,.034,.081,-.06,-.049,-.06,.046,.056,.05]})),0!==e.specularIntensity?(n=new Aa,n.cubemap=Da.loadTexture(o,t,{exposure:s},function(e){n.cubemap=e,e.flipY=!1,n.prefilter(a,64),i.coefficients=Ca.projectEnvironmentMap(a,n.cubemap,{lod:1}),setTimeout(function(){r&&r()})})):setTimeout(function(){r&&r()}),{specular:n,diffuse:i}},Da.createBlankTexture=ki.createBlank,Da.isImage=et,Da.additiveBlend=function(e){e.blendEquation(e.FUNC_ADD),e.blendFunc(e.SRC_ALPHA,e.ONE)},Da.parseColor=function(e,t){return e instanceof Array?(t||(t=[]),t[0]=e[0],t[1]=e[1],t[2]=e[2],e.length>3?t[3]=e[3]:t[3]=1,t):(t=Ze(e||"#000",t)||[0,0,0,0],t[0]/=255,t[1]/=255,t[2]/=255,t)},Da.stringifyColor=function(e,t){return e=e.slice(),e[0]=Math.round(255*e[0]),e[1]=Math.round(255*e[1]),e[2]=Math.round(255*e[2]),"hex"===t?"#"+((1<<24)+(e[0]<<16)+(e[1]<<8)+e[2]).toString(16).slice(1):Qe(e,t)},Da.directionFromAlphaBeta=function(e,t){var r=e/180*Math.PI+Math.PI/2,n=-t/180*Math.PI+Math.PI/2,i=[],a=Math.sin(r);return i[0]=a*Math.cos(n),i[1]=-Math.cos(r),i[2]=a*Math.sin(n),i};var Ia={type:"compositor",nodes:[{name:"source",type:"texture",outputs:{color:{}}},{name:"source_half",shader:"#source(clay.compositor.downsample)",inputs:{texture:"source"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 2)",height:"expr(height * 1.0 / 2)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0, height * 1.0] )"}},{name:"bright",shader:"#source(clay.compositor.bright)",inputs:{texture:"source_half"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 2)",height:"expr(height * 1.0 / 2)",type:"HALF_FLOAT"}}},parameters:{threshold:2,scale:4,textureSize:"expr([width * 1.0 / 2, height / 2])"}},{name:"bright_downsample_4",shader:"#source(clay.compositor.downsample)",inputs:{texture:"bright"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 4)",height:"expr(height * 1.0 / 4)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0 / 2, height / 2] )"}},{name:"bright_downsample_8",shader:"#source(clay.compositor.downsample)",inputs:{texture:"bright_downsample_4"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 8)",height:"expr(height * 1.0 / 8)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0 / 4, height / 4] )"}},{name:"bright_downsample_16",shader:"#source(clay.compositor.downsample)",inputs:{texture:"bright_downsample_8"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 16)",height:"expr(height * 1.0 / 16)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0 / 8, height / 8] )"}},{name:"bright_downsample_32",shader:"#source(clay.compositor.downsample)",inputs:{texture:"bright_downsample_16"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 32)",height:"expr(height * 1.0 / 32)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0 / 16, height / 16] )"}},{name:"bright_upsample_16_blur_h",shader:"#source(clay.compositor.gaussian_blur)",inputs:{texture:"bright_downsample_32"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 16)",height:"expr(height * 1.0 / 16)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:0,textureSize:"expr( [width * 1.0 / 32, height / 32] )"}},{name:"bright_upsample_16_blur_v",shader:"#source(clay.compositor.gaussian_blur)",inputs:{texture:"bright_upsample_16_blur_h"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 16)",height:"expr(height * 1.0 / 16)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:1,textureSize:"expr( [width * 1.0 / 32, height * 1.0 / 32] )"}},{name:"bright_upsample_8_blur_h",shader:"#source(clay.compositor.gaussian_blur)",inputs:{texture:"bright_downsample_16"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 8)",height:"expr(height * 1.0 / 8)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:0,textureSize:"expr( [width * 1.0 / 16, height * 1.0 / 16] )"}},{name:"bright_upsample_8_blur_v",shader:"#source(clay.compositor.gaussian_blur)",inputs:{texture:"bright_upsample_8_blur_h"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 8)",height:"expr(height * 1.0 / 8)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:1,textureSize:"expr( [width * 1.0 / 16, height * 1.0 / 16] )"}},{name:"bright_upsample_8_blend",shader:"#source(clay.compositor.blend)",inputs:{texture1:"bright_upsample_8_blur_v",texture2:"bright_upsample_16_blur_v"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 8)",height:"expr(height * 1.0 / 8)",type:"HALF_FLOAT"}}},parameters:{weight1:.3,weight2:.7}},{name:"bright_upsample_4_blur_h",shader:"#source(clay.compositor.gaussian_blur)",inputs:{texture:"bright_downsample_8"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 4)",height:"expr(height * 1.0 / 4)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:0,textureSize:"expr( [width * 1.0 / 8, height * 1.0 / 8] )"}},{name:"bright_upsample_4_blur_v",shader:"#source(clay.compositor.gaussian_blur)",inputs:{texture:"bright_upsample_4_blur_h"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 4)",height:"expr(height * 1.0 / 4)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:1,textureSize:"expr( [width * 1.0 / 8, height * 1.0 / 8] )"}},{name:"bright_upsample_4_blend",shader:"#source(clay.compositor.blend)",inputs:{texture1:"bright_upsample_4_blur_v",texture2:"bright_upsample_8_blend"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 4)",height:"expr(height * 1.0 / 4)",type:"HALF_FLOAT"}}},parameters:{weight1:.3,weight2:.7}},{name:"bright_upsample_2_blur_h",shader:"#source(clay.compositor.gaussian_blur)",inputs:{texture:"bright_downsample_4"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 2)",height:"expr(height * 1.0 / 2)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:0,textureSize:"expr( [width * 1.0 / 4, height * 1.0 / 4] )"}},{name:"bright_upsample_2_blur_v",shader:"#source(clay.compositor.gaussian_blur)",inputs:{texture:"bright_upsample_2_blur_h"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 2)",height:"expr(height * 1.0 / 2)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:1,textureSize:"expr( [width * 1.0 / 4, height * 1.0 / 4] )"}},{name:"bright_upsample_2_blend",shader:"#source(clay.compositor.blend)",inputs:{texture1:"bright_upsample_2_blur_v",texture2:"bright_upsample_4_blend"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 2)",height:"expr(height * 1.0 / 2)",type:"HALF_FLOAT"}}},parameters:{weight1:.3,weight2:.7}},{name:"bright_upsample_full_blur_h",shader:"#source(clay.compositor.gaussian_blur)",inputs:{texture:"bright"},outputs:{color:{parameters:{width:"expr(width * 1.0)",height:"expr(height * 1.0)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:0,textureSize:"expr( [width * 1.0 / 2, height * 1.0 / 2] )"}},{name:"bright_upsample_full_blur_v",shader:"#source(clay.compositor.gaussian_blur)",inputs:{texture:"bright_upsample_full_blur_h"},outputs:{color:{parameters:{width:"expr(width * 1.0)",height:"expr(height * 1.0)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:1,textureSize:"expr( [width * 1.0 / 2, height * 1.0 / 2] )"}},{name:"bloom_composite",shader:"#source(clay.compositor.blend)",inputs:{texture1:"bright_upsample_full_blur_v",texture2:"bright_upsample_2_blend"},outputs:{color:{parameters:{width:"expr(width * 1.0)",height:"expr(height * 1.0)",type:"HALF_FLOAT"}}},parameters:{weight1:.3,weight2:.7}},{name:"coc",shader:"#source(ecgl.dof.coc)",outputs:{color:{parameters:{minFilter:"NEAREST",magFilter:"NEAREST",width:"expr(width * 1.0)",height:"expr(height * 1.0)"}}},parameters:{focalDist:50,focalRange:30}},{name:"dof_far_blur",shader:"#source(ecgl.dof.diskBlur)",inputs:{texture:"source",coc:"coc"},outputs:{color:{parameters:{width:"expr(width * 1.0)",height:"expr(height * 1.0)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0, height * 1.0] )"}},{name:"dof_near_blur",shader:"#source(ecgl.dof.diskBlur)",inputs:{texture:"source",coc:"coc"},outputs:{color:{parameters:{width:"expr(width * 1.0)",height:"expr(height * 1.0)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0, height * 1.0] )"},defines:{BLUR_NEARFIELD:null}},{name:"dof_coc_blur",shader:"#source(ecgl.dof.diskBlur)",inputs:{texture:"coc"},outputs:{color:{parameters:{minFilter:"NEAREST",magFilter:"NEAREST",width:"expr(width * 1.0)",height:"expr(height * 1.0)"}}},parameters:{textureSize:"expr( [width * 1.0, height * 1.0] )"},defines:{BLUR_COC:null}},{name:"dof_composite",shader:"#source(ecgl.dof.composite)",inputs:{original:"source",blurred:"dof_far_blur",nearfield:"dof_near_blur",coc:"coc",nearcoc:"dof_coc_blur"},outputs:{color:{parameters:{width:"expr(width * 1.0)",height:"expr(height * 1.0)",type:"HALF_FLOAT"}}}},{name:"composite",shader:"#source(clay.compositor.hdr.composite)",inputs:{texture:"source",bloom:"bloom_composite"},defines:{}},{name:"FXAA",shader:"#source(clay.compositor.fxaa)",inputs:{texture:"composite"}}]};L.import(ra),L.import(na),L.import(ia),L.import(aa),L.import(oa),L.import(sa),L.import(ua),L.import(la),L.import(va),L.import("@export ecgl.dof.coc\n\nuniform sampler2D depth;\n\nuniform float zNear: 0.1;\nuniform float zFar: 2000;\n\nuniform float focalDistance: 3;\nuniform float focalRange: 1;\nuniform float focalLength: 30;\nuniform float fstop: 2.8;\n\nvarying vec2 v_Texcoord;\n\n@import clay.util.encode_float\n\nvoid main()\n{\n float z = texture2D(depth, v_Texcoord).r * 2.0 - 1.0;\n\n float dist = 2.0 * zNear * zFar / (zFar + zNear - z * (zFar - zNear));\n\n float aperture = focalLength / fstop;\n\n float coc;\n\n float uppper = focalDistance + focalRange;\n float lower = focalDistance - focalRange;\n if (dist <= uppper && dist >= lower) {\n coc = 0.5;\n }\n else {\n float focalAdjusted = dist > uppper ? uppper : lower;\n\n coc = abs(aperture * (focalLength * (dist - focalAdjusted)) / (dist * (focalAdjusted - focalLength)));\n coc = clamp(coc, 0.0, 2.0) / 2.00001;\n\n if (dist < lower) {\n coc = -coc;\n }\n coc = coc * 0.5 + 0.5;\n }\n\n gl_FragColor = encodeFloat(coc);\n}\n@end\n\n\n@export ecgl.dof.composite\n\n#define DEBUG 0\n\nuniform sampler2D original;\nuniform sampler2D blurred;\nuniform sampler2D nearfield;\nuniform sampler2D coc;\nuniform sampler2D nearcoc;\nvarying vec2 v_Texcoord;\n\n@import clay.util.rgbm\n@import clay.util.float\n\nvoid main()\n{\n vec4 blurredColor = decodeHDR(texture2D(blurred, v_Texcoord));\n vec4 originalColor = decodeHDR(texture2D(original, v_Texcoord));\n\n float fCoc = decodeFloat(texture2D(coc, v_Texcoord));\n\n fCoc = abs(fCoc * 2.0 - 1.0);\n\n float weight = smoothstep(0.0, 1.0, fCoc);\n \n#ifdef NEARFIELD_ENABLED\n vec4 nearfieldColor = decodeHDR(texture2D(nearfield, v_Texcoord));\n float fNearCoc = decodeFloat(texture2D(nearcoc, v_Texcoord));\n fNearCoc = abs(fNearCoc * 2.0 - 1.0);\n\n gl_FragColor = encodeHDR(\n mix(\n nearfieldColor, mix(originalColor, blurredColor, weight),\n pow(1.0 - fNearCoc, 4.0)\n )\n );\n#else\n gl_FragColor = encodeHDR(mix(originalColor, blurredColor, weight));\n#endif\n\n}\n\n@end\n\n\n\n@export ecgl.dof.diskBlur\n\n#define POISSON_KERNEL_SIZE 16;\n\nuniform sampler2D texture;\nuniform sampler2D coc;\nvarying vec2 v_Texcoord;\n\nuniform float blurRadius : 10.0;\nuniform vec2 textureSize : [512.0, 512.0];\n\nuniform vec2 poissonKernel[POISSON_KERNEL_SIZE];\n\nuniform float percent;\n\nfloat nrand(const in vec2 n) {\n return fract(sin(dot(n.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\n@import clay.util.rgbm\n@import clay.util.float\n\n\nvoid main()\n{\n vec2 offset = blurRadius / textureSize;\n\n float rnd = 6.28318 * nrand(v_Texcoord + 0.07 * percent );\n float cosa = cos(rnd);\n float sina = sin(rnd);\n vec4 basis = vec4(cosa, -sina, sina, cosa);\n\n#if !defined(BLUR_NEARFIELD) && !defined(BLUR_COC)\n offset *= abs(decodeFloat(texture2D(coc, v_Texcoord)) * 2.0 - 1.0);\n#endif\n\n#ifdef BLUR_COC\n float cocSum = 0.0;\n#else\n vec4 color = vec4(0.0);\n#endif\n\n\n float weightSum = 0.0;\n\n for (int i = 0; i < POISSON_KERNEL_SIZE; i++) {\n vec2 ofs = poissonKernel[i];\n\n ofs = vec2(dot(ofs, basis.xy), dot(ofs, basis.zw));\n\n vec2 uv = v_Texcoord + ofs * offset;\n vec4 texel = texture2D(texture, uv);\n\n float w = 1.0;\n#ifdef BLUR_COC\n float fCoc = decodeFloat(texel) * 2.0 - 1.0;\n cocSum += clamp(fCoc, -1.0, 0.0) * w;\n#else\n texel = decodeHDR(texel);\n #if !defined(BLUR_NEARFIELD)\n float fCoc = decodeFloat(texture2D(coc, uv)) * 2.0 - 1.0;\n w *= abs(fCoc);\n #endif\n color += texel * w;\n#endif\n\n weightSum += w;\n }\n\n#ifdef BLUR_COC\n gl_FragColor = encodeFloat(clamp(cocSum / weightSum, -1.0, 0.0) * 0.5 + 0.5);\n#else\n color /= weightSum;\n gl_FragColor = encodeHDR(color);\n#endif\n}\n\n@end"),L.import("@export ecgl.edge\n\nuniform sampler2D texture;\n\nuniform sampler2D normalTexture;\nuniform sampler2D depthTexture;\n\nuniform mat4 projectionInv;\n\nuniform vec2 textureSize;\n\nuniform vec4 edgeColor: [0,0,0,0.8];\n\nvarying vec2 v_Texcoord;\n\nvec3 packColor(vec2 coord) {\n float z = texture2D(depthTexture, coord).r * 2.0 - 1.0;\n vec4 p = vec4(v_Texcoord * 2.0 - 1.0, z, 1.0);\n vec4 p4 = projectionInv * p;\n\n return vec3(\n texture2D(normalTexture, coord).rg,\n -p4.z / p4.w / 5.0\n );\n}\n\nvoid main() {\n vec2 cc = v_Texcoord;\n vec3 center = packColor(cc);\n\n float size = clamp(1.0 - (center.z - 10.0) / 100.0, 0.0, 1.0) * 0.5;\n float dx = size / textureSize.x;\n float dy = size / textureSize.y;\n\n vec2 coord;\n vec3 topLeft = packColor(cc+vec2(-dx, -dy));\n vec3 top = packColor(cc+vec2(0.0, -dy));\n vec3 topRight = packColor(cc+vec2(dx, -dy));\n vec3 left = packColor(cc+vec2(-dx, 0.0));\n vec3 right = packColor(cc+vec2(dx, 0.0));\n vec3 bottomLeft = packColor(cc+vec2(-dx, dy));\n vec3 bottom = packColor(cc+vec2(0.0, dy));\n vec3 bottomRight = packColor(cc+vec2(dx, dy));\n\n vec3 v = -topLeft-2.0*top-topRight+bottomLeft+2.0*bottom+bottomRight;\n vec3 h = -bottomLeft-2.0*left-topLeft+bottomRight+2.0*right+topRight;\n\n float edge = sqrt(dot(h, h) + dot(v, v));\n\n edge = smoothstep(0.8, 1.0, edge);\n\n gl_FragColor = mix(texture2D(texture, v_Texcoord), vec4(edgeColor.rgb, 1.0), edgeColor.a * edge);\n}\n@end");var Fa={color:{parameters:{width:function(e){return e.getWidth()},height:function(e){return e.getHeight()}}}},Ba=["composite","FXAA"];tt.prototype.resize=function(e,t,r){r=r||1,e*=r,t*=r;var n=this._sourceTexture,i=this._depthTexture;n.width=e,n.height=t,i.width=e,i.height=t,this._gBufferPass.resize(e,t)},tt.prototype._ifRenderNormalPass=function(){return this._enableSSAO||this._enableEdge||this._enableSSR},tt.prototype._getPrevNode=function(e){for(var t=Ba.indexOf(e.name)-1,r=this._finalNodesChain[t];r&&!this._compositor.getNodeByName(r.name);)t-=1,r=this._finalNodesChain[t];return r},tt.prototype._getNextNode=function(e){for(var t=Ba.indexOf(e.name)+1,r=this._finalNodesChain[t];r&&!this._compositor.getNodeByName(r.name);)t+=1,r=this._finalNodesChain[t];return r},tt.prototype._addChainNode=function(e){var t=this._getPrevNode(e),r=this._getNextNode(e);t&&(t.outputs=Fa,e.inputs.texture=t.name,r?(e.outputs=Fa,r.inputs.texture=e.name):e.outputs=null,this._compositor.addNode(e))},tt.prototype._removeChainNode=function(e){var t=this._getPrevNode(e),r=this._getNextNode(e);t&&(r?(t.outputs=Fa,r.inputs.texture=t.name):t.outputs=null,this._compositor.removeNode(e))},tt.prototype.updateGBuffer=function(e,t,r,n){this._ifRenderNormalPass()&&this._gBufferPass.update(e,t,r)},tt.prototype.updateSSAO=function(e,t,r,n){this._ssaoPass.update(e,r,n)},tt.prototype.enableSSAO=function(){this._enableSSAO=!0},tt.prototype.disableSSAO=function(){this._enableSSAO=!1},tt.prototype.enableSSR=function(){this._enableSSR=!0,this._gBufferPass.enableTargetTexture3=!0},tt.prototype.disableSSR=function(){this._enableSSR=!1,this._gBufferPass.enableTargetTexture3=!1},tt.prototype.getSSAOTexture=function(){return this._ssaoPass.getTargetTexture()},tt.prototype.getSourceFrameBuffer=function(){return this._framebuffer},tt.prototype.getSourceTexture=function(){return this._sourceTexture},tt.prototype.disableFXAA=function(){this._removeChainNode(this._fxaaNode)},tt.prototype.enableFXAA=function(){this._addChainNode(this._fxaaNode)},tt.prototype.enableBloom=function(){this._compositeNode.inputs.bloom="bloom_composite",this._compositor.dirty()},tt.prototype.disableBloom=function(){this._compositeNode.inputs.bloom=null,this._compositor.dirty()},tt.prototype.enableDOF=function(){this._compositeNode.inputs.texture="dof_composite",this._compositor.dirty()},tt.prototype.disableDOF=function(){this._compositeNode.inputs.texture="source",this._compositor.dirty()},tt.prototype.enableColorCorrection=function(){this._compositeNode.define("COLOR_CORRECTION"),this._enableColorCorrection=!0},tt.prototype.disableColorCorrection=function(){this._compositeNode.undefine("COLOR_CORRECTION"),this._enableColorCorrection=!1},tt.prototype.enableEdge=function(){this._enableEdge=!0},tt.prototype.disableEdge=function(){this._enableEdge=!1},tt.prototype.setBloomIntensity=function(e){null!=e&&this._compositeNode.setParameter("bloomIntensity",e)},tt.prototype.setSSAOParameter=function(e,t){if(null!=t)switch(e){case"quality":var r={low:6,medium:12,high:32,ultra:62}[t]||12;this._ssaoPass.setParameter("kernelSize",r);break;case"radius":this._ssaoPass.setParameter(e,t),this._ssaoPass.setParameter("bias",t/50);break;case"intensity":this._ssaoPass.setParameter(e,t)}},tt.prototype.setDOFParameter=function(e,t){if(null!=t)switch(e){case"focalDistance":case"focalRange":case"fstop":this._cocNode.setParameter(e,t);break;case"blurRadius":for(var r=0;r<this._dofBlurNodes.length;r++)this._dofBlurNodes[r].setParameter("blurRadius",t);break;case"quality":var n={low:4,medium:8,high:16,ultra:32}[t]||8;this._dofBlurKernelSize=n;for(var r=0;r<this._dofBlurNodes.length;r++)this._dofBlurNodes[r].define("POISSON_KERNEL_SIZE",n);this._dofBlurKernel=new Float32Array(2*n)}},tt.prototype.setSSRParameter=function(e,t){if(null!=t)switch(e){case"quality":var r={low:10,medium:15,high:30,ultra:80}[t]||20,n={low:32,medium:16,high:8,ultra:4}[t]||16;this._ssrPass.setParameter("maxIteration",r),this._ssrPass.setParameter("pixelStride",n);break;case"maxRoughness":this._ssrPass.setParameter("minGlossiness",Math.max(Math.min(1-t,1),0));break;case"physical":this.setPhysicallyCorrectSSR(t);break;default:console.warn("Unkown SSR parameter "+e)}},tt.prototype.setPhysicallyCorrectSSR=function(e){this._ssrPass.setPhysicallyCorrect(e)},tt.prototype.setEdgeColor=function(e){},tt.prototype.setExposure=function(e){null!=e&&this._compositeNode.setParameter("exposure",Math.pow(2,e))},tt.prototype.setColorLookupTexture=function(e,t){this._compositeNode.pass.material.setTextureImage("lut",this._enableColorCorrection?e:"none",t,{minFilter:Qt.NEAREST,magFilter:Qt.NEAREST,flipY:!1})},tt.prototype.setColorCorrection=function(e,t){this._compositeNode.setParameter(e,t)},tt.prototype.composite=function(e,t,r,n,i){var a=this._sourceTexture,o=a;if(this._enableSSR){this._ssrPass.update(e,r,a,i),o=this._ssrPass.getTargetTexture(),this._ssrPass.setSSAOTexture(this._enableSSAO?this._ssaoPass.getTargetTexture():null);for(var s=t.getLights(),u=0;u<s.length;u++)s[u].cubemap&&this._ssrPass.setAmbientCubemap(s[u].cubemap,s[u]._brdfLookup,s[u].intensity)}this._sourceNode.texture=o,this._cocNode.setParameter("depth",this._depthTexture);for(var l=this._dofBlurKernel,c=this._dofBlurKernelSize,h=Math.floor(_a.length/2/c),f=i%h,u=0;u<2*c;u++)l[u]=_a[u+f*c*2];for(var u=0;u<this._dofBlurNodes.length;u++)this._dofBlurNodes[u].setParameter("percent",i/30),this._dofBlurNodes[u].setParameter("poissonKernel",l);this._cocNode.setParameter("zNear",r.near),this._cocNode.setParameter("zFar",r.far),this._compositor.render(e,n)},tt.prototype.isSSRFinished=function(e){return!this._ssrPass||this._ssrPass.isFinished(e)},tt.prototype.isSSAOFinished=function(e){return!this._ssaoPass||this._ssaoPass.isFinished(e)},tt.prototype.isSSREnabled=function(){return this._enableSSR},tt.prototype.dispose=function(e){this._sourceTexture.dispose(e),this._depthTexture.dispose(e),this._framebuffer.dispose(e),this._compositor.dispose(e),this._gBufferPass.dispose(e),this._ssaoPass.dispose(e)},rt.prototype={constructor:rt,jitterProjection:function(e,t){var r=e.viewport,n=r.devicePixelRatio||e.getDevicePixelRatio(),i=r.width*n,a=r.height*n,o=this._haltonSequence[this._frame%this._haltonSequence.length],s=new Kt;s.array[12]=(2*o[0]-1)/i,s.array[13]=(2*o[1]-1)/a,Kt.mul(t.projectionMatrix,s,t.projectionMatrix),Kt.invert(t.invProjectionMatrix,t.projectionMatrix)},resetFrame:function(){this._frame=0},getFrame:function(){return this._frame},getSourceFrameBuffer:function(){return this._sourceFb},resize:function(e,t){this._sourceTex.width===e&&this._sourceTex.height===t||(this._prevFrameTex.width=e,this._prevFrameTex.height=t,this._outputTex.width=e,this._outputTex.height=t,this._sourceTex.width=e,this._sourceTex.height=t,this._prevFrameTex.dirty(),this._outputTex.dirty(),this._sourceTex.dirty())},isFinished:function(){return this._frame>=this._haltonSequence.length},render:function(e){var t=this._blendPass;0===this._frame?(t.setUniform("weight1",0),t.setUniform("weight2",1)):(t.setUniform("weight1",.9),t.setUniform("weight2",.1)),t.setUniform("texture1",this._prevFrameTex),t.setUniform("texture2",this._sourceTex),this._blendFb.attach(this._outputTex),this._blendFb.bind(e),t.render(e),this._blendFb.unbind(e),this._outputPass.setUniform("texture",this._outputTex),this._outputPass.render(e);var r=this._prevFrameTex;this._prevFrameTex=this._outputTex,this._outputTex=r,this._frame++},dispose:function(e){this._sourceFb.dispose(e),this._blendFb.dispose(e),this._prevFrameTex.dispose(e),this._outputTex.dispose(e),this._sourceTex.dispose(e),this._outputPass.dispose(e),this._blendPass.dispose(e)}},nt.prototype.setProjection=function(e){var t=this.camera;t&&t.update(),"perspective"===e?this.camera instanceof kn||(this.camera=new kn,t&&this.camera.setLocalTransform(t.localTransform)):this.camera instanceof Hn||(this.camera=new Hn,t&&this.camera.setLocalTransform(t.localTransform)),this.camera.near=.1,this.camera.far=2e3},nt.prototype.setViewport=function(e,t,r,n,i){this.camera instanceof kn&&(this.camera.aspect=r/n),i=i||1,this.viewport.x=e,this.viewport.y=t,this.viewport.width=r,this.viewport.height=n,this.viewport.devicePixelRatio=i,this._compositor.resize(r*i,n*i),this._temporalSS.resize(r*i,n*i)},nt.prototype.containPoint=function(e,t){var r=this.viewport;return t=this.layer.renderer.getHeight()-t,e>=r.x&&t>=r.y&&e<=r.x+r.width&&t<=r.y+r.height};var Ua=new lr;nt.prototype.castRay=function(e,t,r){var n=this.layer.renderer,i=n.viewport;return n.viewport=this.viewport,n.screenToNDC(e,t,Ua),this.camera.castRay(Ua,r),n.viewport=i,r},nt.prototype.prepareRender=function(){this.scene.update(),this.scene.updateLights(),this.scene.updateRenderList(this.camera),this.camera.update(),this._frame=0,this._temporalSS.resetFrame();for(var e=this.scene.getLights(),t=0;t<e.length;t++)e[t].cubemap&&(this._compositor&&this._compositor.isSSREnabled()?e[t].invisible=!0:e[t].invisible=!1)},nt.prototype.render=function(e){this._doRender(e,this._frame),this._frame++},nt.prototype.needsAccumulate=function(){return this.needsTemporalSS()||this._needsSortProgressively},nt.prototype.needsTemporalSS=function(){var e=this._enableTemporalSS;return"auto"===e&&(e=this._enablePostEffect),e},nt.prototype.hasDOF=function(){return this._enableDOF},nt.prototype.isAccumulateFinished=function(){var e=this._frame;return!(this.needsTemporalSS()&&!this._temporalSS.isFinished(e)||this._compositor&&!this._compositor.isSSAOFinished(e)||this._compositor&&!this._compositor.isSSRFinished(e)||this._compositor&&e<30)},nt.prototype._doRender=function(e,t){var r=this.scene,n=this.camera,i=this.renderer;t=t||0,!e&&this._shadowMapPass&&(this._shadowMapPass.kernelPCF=this._pcfKernels[0],this._shadowMapPass.render(i,r,n,!0)),this._updateShadowPCFKernel(t),i.gl.clearColor(0,0,0,0),this._enablePostEffect&&(this.needsTemporalSS()&&this._temporalSS.jitterProjection(i,n),this._compositor.updateGBuffer(i,r,n,this._temporalSS.getFrame())),this._updateSSAO(i,r,n,this._temporalSS.getFrame());var a;this._enablePostEffect?(a=this._compositor.getSourceFrameBuffer(),a.bind(i),i.gl.clear(i.gl.DEPTH_BUFFER_BIT|i.gl.COLOR_BUFFER_BIT),i.render(r,n,!0,this.preZ),this.afterRenderScene(i,r,n),a.unbind(i),this.needsTemporalSS()&&e?(this._compositor.composite(i,r,n,this._temporalSS.getSourceFrameBuffer(),this._temporalSS.getFrame()),i.setViewport(this.viewport),this._temporalSS.render(i)):(i.setViewport(this.viewport),this._compositor.composite(i,r,n,null,0))):this.needsTemporalSS()&&e?(a=this._temporalSS.getSourceFrameBuffer(),a.bind(i),i.saveClear(),i.clearBit=i.gl.DEPTH_BUFFER_BIT|i.gl.COLOR_BUFFER_BIT,i.render(r,n,!0,this.preZ),this.afterRenderScene(i,r,n),i.restoreClear(),a.unbind(i),i.setViewport(this.viewport),this._temporalSS.render(i)):(i.setViewport(this.viewport),i.render(r,n,!0,this.preZ),this.afterRenderScene(i,r,n)),this.afterRenderAll(i,r,n)},nt.prototype.afterRenderScene=function(e,t,r){},nt.prototype.afterRenderAll=function(e,t,r){},nt.prototype._updateSSAO=function(e,t,r,n){function i(e){for(var t=0;t<e.length;t++){var r=e[t];r.material[a?"enableTexture":"disableTexture"]("ssaoMap"),a&&r.material.set("ssaoMap",o.getSSAOTexture())}}var a=this._enableSSAO&&this._enablePostEffect,o=this._compositor;a&&this._compositor.updateSSAO(e,t,r,this._temporalSS.getFrame()),i(t.getRenderList(r).opaque),i(t.getRenderList(r).transparent)},nt.prototype._updateShadowPCFKernel=function(e){function t(e){for(var t=0;t<e.length;t++)e[t].receiveShadow&&(e[t].material.set("pcfKernel",r),e[t].material&&e[t].material.define("fragment","PCF_KERNEL_SIZE",r.length/2))}var r=this._pcfKernels[e%this._pcfKernels.length];t(this.scene.getRenderList(this.camera).opaque),t(this.scene.getRenderList(this.camera).transparent)},nt.prototype.dispose=function(e){this._compositor.dispose(e),this._temporalSS.dispose(e),this._shadowMapPass&&this._shadowMapPass.dispose(e)},nt.prototype.setPostEffect=function(e,t){var r=this._compositor;e=e||{},this._enablePostEffect=!!e.enable;var n=e.bloom||{},i=e.edge||{},a=e.depthOfField||{},o=e.screenSpaceAmbientOcclusion||{},s=e.screenSpaceReflection||{},u=e.FXAA||{},l=e.colorCorrection||{};n.enable?r.enableBloom():r.disableBloom(),a.enable?r.enableDOF():r.disableDOF(),s.enable?r.enableSSR():r.disableSSR(),l.enable?r.enableColorCorrection():r.disableColorCorrection(),i.enable?r.enableEdge():r.disableEdge(),u.enable?r.enableFXAA():r.disableFXAA(),this._enableDOF=a.enable,this._enableSSAO=o.enable,this._enableSSAO?r.enableSSAO():r.disableSSAO(),r.setBloomIntensity(n.intensity),r.setEdgeColor(i.color),r.setColorLookupTexture(l.lookupTexture,t),r.setExposure(l.exposure),["radius","quality","intensity"].forEach(function(e){r.setSSAOParameter(e,o[e])}),["quality","maxRoughness","physical"].forEach(function(e){r.setSSRParameter(e,s[e])}),["quality","focalDistance","focalRange","blurRadius","fstop"].forEach(function(e){r.setDOFParameter(e,a[e])}),["brightness","contrast","saturation"].forEach(function(e){r.setColorCorrection(e,l[e])})},nt.prototype.isDOFEnabled=function(){return this._enablePostEffect&&this._enableDOF},nt.prototype.setDOFFocusOnPoint=function(e){if(this._enablePostEffect){if(e>this.camera.far||e<this.camera.near)return;return this._compositor.setDOFParameter("focalDistance",e),!0}},nt.prototype.setTemporalSuperSampling=function(e){e=e||{},this._enableTemporalSS=e.enable},nt.prototype.isLinearSpace=function(){return this._enablePostEffect},nt.prototype.setRootNode=function(e){if(this.rootNode!==e){for(var t=this.rootNode.children(),r=0;r<t.length;r++)e.add(t[r]);e!==this.scene&&this.scene.add(e),this.rootNode=e}},nt.prototype.add=function(e){this.rootNode.add(e)},nt.prototype.remove=function(e){this.rootNode.remove(e)},nt.prototype.removeAll=function(e){this.rootNode.removeAll(e)};var ka=Yr.extend({shadowBias:.001,shadowSlopeScale:2,shadowCascade:1,cascadeSplitLogFactor:.2},{type:"DIRECTIONAL_LIGHT",uniformTemplates:{directionalLightDirection:{type:"3f",value:function(e){return e.__dir=e.__dir||new Ot,e.__dir.copy(e.worldTransform.z).normalize().negate().array}},directionalLightColor:{type:"3f",value:function(e){var t=e.color,r=e.intensity;return[t[0]*r,t[1]*r,t[2]*r]}}},clone:function(){var e=Yr.prototype.clone.call(this);return e.shadowBias=this.shadowBias,e.shadowSlopeScale=this.shadowSlopeScale,e}}),Ha=Yr.extend({castShadow:!1},{type:"AMBIENT_LIGHT",uniformTemplates:{ambientLightColor:{type:"3f",value:function(e){var t=e.color,r=e.intensity;return[t[0]*r,t[1]*r,t[2]*r]}}}});it.prototype={constructor:it,setScene:function(e){this._scene=e,this._skybox&&this._skybox.attachScene(this._scene)},initLight:function(e){this._lightRoot=e,this.mainLight=new ka({shadowBias:.005}),this.secondaryLight=new ka({shadowBias:.005}),this.tertiaryLight=new ka({shadowBias:.005}),this.ambientLight=new Ha},dispose:function(e){this._lightRoot&&(this._lightRoot.remove(this.mainLight),this._lightRoot.remove(this.secondaryLight),this._lightRoot.remove(this.tertiaryLight),this._lightRoot.remove(this.ambientLight)),this._currentCubemapLights&&(this._lightRoot.remove(this._currentCubemapLights.diffuse),this._currentCubemapLights.specular&&(this._lightRoot.remove(this._currentCubemapLights.specular),this._currentCubemapLights.specular.cubemap.dispose(e)))},updateMainLight:function(e,t){this._updateDirectionalLight(this.mainLight,e,t)},updateSecondaryLight:function(e,t){this._updateDirectionalLight(this.secondaryLight,e,t)},updateTertiaryLight:function(e,t){this._updateDirectionalLight(this.tertiaryLight,e,t)},_updateDirectionalLight:function(e,t,r){t=t||{},null!=t.intensity&&(e.intensity=t.intensity,this._lightRoot[t.intensity?"add":"remove"](e)),null!=t.color&&(e.color=Da.parseColor(t.color).slice(0,3));var n=Da.firstNotNull(t.alpha,45),i=Da.firstNotNull(t.beta,45);e.position.setArray(Da.directionFromAlphaBeta(n,i)),e.lookAt(Ot.ZERO);var a={low:512,medium:1024,high:2048,ultra:4096}[t.quality]||1024;e.castShadow=Da.firstNotNull(t.shadow,!0),e.shadowResolution=a},updateAmbientLight:function(e,t){e=e||{},null!=e.intensity&&(this.ambientLight.intensity=e.intensity,this._lightRoot[e.intensity?"add":"remove"](this.ambientLight)),null!=e.color&&(this.ambientLight.color=Da.parseColor(e.color).slice(0,3))},updateAmbientCubemapLight:function(e,t){e=e||{};var r=t.getRenderer(),n=e.texture,i=this;if("texture"in e&&(!this._currentCubemapLights||n!==this._currentCubemapLights.textureUrl))if(this._currentCubemapLights&&(this._lightRoot.remove(this._currentCubemapLights.diffuse),this._currentCubemapLights.specular&&(this._lightRoot.remove(this._currentCubemapLights.specular),this._currentCubemapLights.specular.cubemap.dispose(r.gl))),n){var a=Da.createAmbientCubemap(e,t,function(){
a.specular&&i._skybox instanceof da&&i._skybox.setEnvironmentMap(a.specular.cubemap),t.refresh()});a.diffuse&&this._lightRoot.add(a.diffuse),a.specular&&this._lightRoot.add(a.specular),this._currentCubemapLights=a,this._currentCubemapLights.textureUrl=n}else this._currentCubemapLights&&(this._lightRoot.remove(this._currentCubemapLights.diffuse),this._lightRoot.remove(this._currentCubemapLights.specular),this._currentCubemapLights=null);this._currentCubemapLights&&(null!=e.specularIntensity&&this._currentCubemapLights.specular&&(this._currentCubemapLights.specular.intensity=e.specularIntensity),null!=e.diffuseIntensity&&this._currentCubemapLights.diffuse&&(this._currentCubemapLights.diffuse.intensity=e.diffuseIntensity))},updateSkybox:function(e,t,r){var n=r.getRenderer(),i=this;if(e&&"none"!==e)if("auto"===e)if(this._currentCubemapLights){var a=function(){return i._skybox instanceof da||(i._skybox&&i._skybox.dispose(n),i._skybox=new da),i._skybox}();if(this._currentCubemapLights.specular){var o=this._currentCubemapLights.specular.cubemap;a.setEnvironmentMap(o)}this._scene&&a.attachScene(this._scene),a.material.set("lod",2)}else this._skybox&&this._skybox.detachScene();else{var s=function(){return i._skybox instanceof Mi||(i._skybox&&i._skybox.dispose(n),i._skybox=new Mi),i._skybox}(),u=Da.loadTexture(e,r,{flipY:!1},function(){r.refresh()});s.setEnvironmentMap(u),s.attachScene(this._scene)}else this._skybox&&this._skybox.detachScene(this._scene),this._skybox=null;if(this._skybox)if("auto"===e||e.match&&e.match(/.hdr$/))this._skybox.material.undefine("fragment","SRGB_DECODE");else{var l=t?"define":"undefine";this._skybox.material[l]("fragment","SRGB_DECODE")}}};var za={devicePixelRatio:null,preZ:!1,picking:!1,shadow:!0,environment:"",ground:{show:!1,grid:!1},mainLight:{shadow:!0,shadowQuality:"medium",intensity:.8,color:"#fff",alpha:45,beta:45},secondaryLight:{shadow:!0,shadowQuality:"medium",intensity:0,color:"#fff",alpha:60,beta:-50},tertiaryLight:{shadow:!0,shadowQuality:"medium",intensity:0,color:"#fff",alpha:89,beta:0},ambientLight:{intensity:.3,color:"#fff"},ambientCubemapLight:{texture:"",exposure:3,diffuseIntensity:.5,specularIntensity:.5},postEffect:{enable:!1,bloom:{enable:!1,intensity:.1},depthOfField:{enable:!1,focalDistance:5,focalRange:1,blurRadius:5,fstop:2.8,quality:"medium"},screenSpaceAmbientOcculusion:{enable:!1,physical:!1,radius:.5,quality:"medium",intensity:1},screenSpaceReflection:{enable:!1,quality:"medium",maxRoughness:.8},colorCorrection:{enable:!0,exposure:0,brightness:0,contrast:1,saturation:1,lookupTexture:""},FXAA:{enable:!1}}},Ga={"[object Function]":1,"[object RegExp]":1,"[object Date]":1,"[object Error]":1,"[object CanvasGradient]":1,"[object CanvasPattern]":1,"[object Image]":1,"[object Canvas]":1},Va={"[object Int8Array]":1,"[object Uint8Array]":1,"[object Uint8ClampedArray]":1,"[object Int16Array]":1,"[object Uint16Array]":1,"[object Int32Array]":1,"[object Uint32Array]":1,"[object Float32Array]":1,"[object Float64Array]":1},Wa=Object.prototype.toString,ja="__ec_primitive__",Xa=Pt.vec3,qa=function(){this._track=[]};qa.prototype={constructor:qa,recognize:function(e,t,r){return this._doTrack(e,t,r),this._recognize(e)},clear:function(){return this._track.length=0,this},_doTrack:function(e,t,r){var n=e.targetTouches;if(n){for(var i={points:[],touches:[],target:t,event:e},a=0,o=n.length;a<o;a++){var s=n[a];i.points.push([s.clientX,s.clientY]),i.touches.push(s)}this._track.push(i)}},_recognize:function(e){for(var t in Ka)if(Ka.hasOwnProperty(t)){var r=Ka[t](this._track,e);if(r)return r}}};var Ka={pinch:function(e,t){var r=e.length;if(r){var n=(e[r-1]||{}).points,i=(e[r-2]||{}).points||n;if(i&&i.length>1&&n&&n.length>1){var a=pt(n)/pt(i);!isFinite(a)&&(a=1),t.pinchScale=a;var o=mt(n);return t.pinchX=o[0],t.pinchY=o[1],{type:"pinch",target:e[0].target,event:t}}}}},Ya=At.extend(function(){return{timeline:null,domElement:null,target:null,_center:new Ot,minDistance:.1,maxDistance:1e3,minAlpha:-90,maxAlpha:90,minBeta:-1/0,maxBeta:1/0,autoRotateAfterStill:0,autoRotateDirection:"cw",autoRotateSpeed:60,_mode:"rotate",damping:.8,rotateSensitivity:1,zoomSensitivity:1,panSensitivity:1,_needsUpdate:!1,_rotating:!1,_phi:0,_theta:0,_mouseX:0,_mouseY:0,_rotateVelocity:new lr,_panVelocity:new lr,_distance:20,_zoomSpeed:0,_stillTimeout:0,_animators:[],_gestureMgr:new qa}},function(){this._mouseDownHandler=this._mouseDownHandler.bind(this),this._mouseWheelHandler=this._mouseWheelHandler.bind(this),this._mouseMoveHandler=this._mouseMoveHandler.bind(this),this._mouseUpHandler=this._mouseUpHandler.bind(this),this._pinchHandler=this._pinchHandler.bind(this),this.update=this.update.bind(this),this.init()},{init:function(){var e=this.domElement;e.addEventListener("touchstart",this._mouseDownHandler),e.addEventListener("mousedown",this._mouseDownHandler),e.addEventListener("mousewheel",this._mouseWheelHandler),this.timeline&&this.timeline.on("frame",this.update)},dispose:function(){var e=this.domElement;e.removeEventListener("touchstart",this._mouseDownHandler),e.removeEventListener("touchmove",this._mouseMoveHandler),e.removeEventListener("touchend",this._mouseUpHandler),e.removeEventListener("mousedown",this._mouseDownHandler),e.removeEventListener("mousemove",this._mouseMoveHandler),e.removeEventListener("mouseup",this._mouseUpHandler),e.removeEventListener("mousewheel",this._mouseWheelHandler),e.removeEventListener("mouseout",this._mouseUpHandler),this.timeline&&this.timeline.off("frame",this.update),this.stopAllAnimation()},getDistance:function(){return this._distance},setDistance:function(e){this._distance=e,this._needsUpdate=!0},getAlpha:function(){return this._theta/Math.PI*180},getBeta:function(){return-this._phi/Math.PI*180},getCenter:function(){return this._center.toArray()},setAlpha:function(e){e=Math.max(Math.min(this.maxAlpha,e),this.minAlpha),this._theta=e/180*Math.PI,this._needsUpdate=!0},setBeta:function(e){e=Math.max(Math.min(this.maxBeta,e),this.minBeta),this._phi=-e/180*Math.PI,this._needsUpdate=!0},setCenter:function(e){this._center.setArray(e)},setOption:function(e){e=e||{},["autoRotate","autoRotateAfterStill","autoRotateDirection","autoRotateSpeed","damping","minDistance","maxDistance","minAlpha","maxAlpha","minBeta","maxBeta","rotateSensitivity","zoomSensitivity","panSensitivity"].forEach(function(t){null!=e[t]&&(this[t]=e[t])},this),null!=e.distance&&this.setDistance(e.distance),null!=e.alpha&&this.setAlpha(e.alpha),null!=e.beta&&this.setBeta(e.beta),e.center&&this.setCenter(e.center)},animateTo:function(e){var t=this,r={},n={},i=this.timeline;if(i)return null!=e.distance&&(r.distance=this.getDistance(),n.distance=e.distance),null!=e.alpha&&(r.alpha=this.getAlpha(),n.alpha=e.alpha),null!=e.beta&&(r.beta=this.getBeta(),n.beta=e.beta),null!=e.center&&(r.center=this.getCenter(),n.center=e.center),this._addAnimator(i.animate(r).when(e.duration||1e3,n).during(function(){null!=r.alpha&&t.setAlpha(r.alpha),null!=r.beta&&t.setBeta(r.beta),null!=r.distance&&t.setDistance(r.distance),null!=r.center&&t.setCenter(r.center),t._needsUpdate=!0}).done(e.done)).start(e.easing||"linear")},stopAllAnimation:function(){for(var e=0;e<this._animators.length;e++)this._animators[e].stop();this._animators.length=0},_isAnimating:function(){return this._animators.length>0},update:function(e){if(e=e||16,this._rotating){var t=("cw"===this.autoRotateDirection?1:-1)*this.autoRotateSpeed/180*Math.PI;this._phi-=t*e/1e3,this._needsUpdate=!0}else this._rotateVelocity.len()>0&&(this._needsUpdate=!0);(Math.abs(this._zoomSpeed)>.01||this._panVelocity.len()>0)&&(this._needsUpdate=!0),this._needsUpdate&&(this._updateDistance(Math.min(e,50)),this._updatePan(Math.min(e,50)),this._updateRotate(Math.min(e,50)),this._updateTransform(),this.target.update(),this.trigger("update"),this._needsUpdate=!1)},_updateRotate:function(e){var t=this._rotateVelocity;this._phi=t.y*e/20+this._phi,this._theta=t.x*e/20+this._theta,this.setAlpha(this.getAlpha()),this.setBeta(this.getBeta()),this._vectorDamping(t,this.damping),t.x=t.y=0},_updateDistance:function(e){this._setDistance(this._distance+this._zoomSpeed*e/20),this._zoomSpeed*=this.damping},_setDistance:function(e){this._distance=Math.max(Math.min(e,this.maxDistance),this.minDistance)},_updatePan:function(e){var t=this._panVelocity,r=this._distance,n=this.target,i=n.worldTransform.y,a=n.worldTransform.x;this._center.scaleAndAdd(a,-t.x*r/200).scaleAndAdd(i,-t.y*r/200),this._vectorDamping(t,0),t.x=t.y=0},_updateTransform:function(){var e=this.target,t=new Ot,r=this._theta+Math.PI/2,n=this._phi+Math.PI/2,i=Math.sin(r);t.x=i*Math.cos(n),t.y=-Math.cos(r),t.z=i*Math.sin(n),e.position.copy(this._center).scaleAndAdd(t,this._distance),e.rotation.identity().rotateY(-this._phi).rotateX(-this._theta)},_startCountingStill:function(){clearTimeout(this._stillTimeout);var e=this.autoRotateAfterStill,t=this;!isNaN(e)&&e>0&&(this._stillTimeout=setTimeout(function(){t._rotating=!0},1e3*e))},_vectorDamping:function(e,t){var r=e.len();r*=t,r<1e-4&&(r=0),e.normalize().scale(r)},decomposeTransform:function(){if(this.target){this.target.updateWorldTransform();var e=this.target.worldTransform.z,t=Math.asin(e.y),r=Math.atan2(e.x,e.z);this._theta=t,this._phi=-r,this.setBeta(this.getBeta()),this.setAlpha(this.getAlpha()),this._setDistance(this.target.position.dist(this._center))}},_mouseDownHandler:function(e){if(!this._isAnimating()){var t=e.clientX,r=e.clientY;if(e.targetTouches){var n=e.targetTouches[0];t=n.clientX,r=n.clientY,this._mode="rotate",this._processGesture(e,"start")}var i=this.domElement;i.addEventListener("touchmove",this._mouseMoveHandler),i.addEventListener("touchend",this._mouseUpHandler),i.addEventListener("mousemove",this._mouseMoveHandler),i.addEventListener("mouseup",this._mouseUpHandler),i.addEventListener("mouseout",this._mouseUpHandler),0===e.button?this._mode="rotate":1===e.button?this._mode="pan":this._mode=null,this._rotateVelocity.set(0,0),this._rotating=!1,this.autoRotate&&this._startCountingStill(),this._mouseX=t,this._mouseY=r}},_mouseMoveHandler:function(e){if(!this._isAnimating()){var t,r=e.clientX,n=e.clientY;if(e.targetTouches){var i=e.targetTouches[0];r=i.clientX,n=i.clientY,t=this._processGesture(e,"change")}var a=_t(this.panSensitivity),o=_t(this.rotateSensitivity);t||("rotate"===this._mode?(this._rotateVelocity.y+=(r-this._mouseX)/this.domElement.clientWidth*2*o[0],this._rotateVelocity.x+=(n-this._mouseY)/this.domElement.clientHeight*2*o[1]):"pan"===this._mode&&(this._panVelocity.x+=(r-this._mouseX)/this.domElement.clientWidth*a[0]*400,this._panVelocity.y+=(-n+this._mouseY)/this.domElement.clientHeight*a[1]*400)),this._mouseX=r,this._mouseY=n,e.preventDefault()}},_mouseWheelHandler:function(e){if(!this._isAnimating()){var t=e.wheelDelta||-e.detail;0!==t&&this._zoomHandler(e,t>0?-1:1)}},_pinchHandler:function(e){this._isAnimating()||this._zoomHandler(e,e.pinchScale>1?-.4:.4)},_zoomHandler:function(e,t){var r=Math.max(Math.min(this._distance-this.minDistance,this.maxDistance-this._distance));this._zoomSpeed=t*Math.max(r/40*this.zoomSensitivity,.2),this._rotating=!1,this.autoRotate&&"rotate"===this._mode&&this._startCountingStill(),e.preventDefault()},_mouseUpHandler:function(e){var t=this.domElement;t.removeEventListener("touchmove",this._mouseMoveHandler),t.removeEventListener("touchend",this._mouseUpHandler),t.removeEventListener("mousemove",this._mouseMoveHandler),t.removeEventListener("mouseup",this._mouseUpHandler),t.removeEventListener("mouseout",this._mouseUpHandler),this._processGesture(e,"end")},_addAnimator:function(e){var t=this._animators;return t.push(e),e.done(function(){var r=t.indexOf(e);r>=0&&t.splice(r,1)}),e},_processGesture:function(e,t){var r=this._gestureMgr;"start"===t&&r.clear();var n=r.recognize(e,null,this.domElement);if("end"===t&&r.clear(),n){var i=n.type;e.gestureEvent=i,this._pinchHandler(n.event)}return n}});Object.defineProperty(Ya.prototype,"autoRotate",{get:function(){return this._autoRotate},set:function(e){this._autoRotate=e,this._rotating=e}}),Object.defineProperty(Ya.prototype,"target",{get:function(){return this._target},set:function(e){e&&e.target&&this.setCenter(e.target.toArray()),this._target=e,this.decomposeTransform()}});var Za=Pt.vec4,Ja=function(e,t,r,n){e=e||0,t=t||0,r=r||0,n=n||0,this.array=Za.fromValues(e,t,r,n),this._dirty=!0};Ja.prototype={constructor:Ja,add:function(e){return Za.add(this.array,this.array,e.array),this._dirty=!0,this},set:function(e,t,r,n){return this.array[0]=e,this.array[1]=t,this.array[2]=r,this.array[3]=n,this._dirty=!0,this},setArray:function(e){return this.array[0]=e[0],this.array[1]=e[1],this.array[2]=e[2],this.array[3]=e[3],this._dirty=!0,this},clone:function(){return new Ja(this.x,this.y,this.z,this.w)},copy:function(e){return Za.copy(this.array,e.array),this._dirty=!0,this},dist:function(e){return Za.dist(this.array,e.array)},distance:function(e){return Za.distance(this.array,e.array)},div:function(e){return Za.div(this.array,this.array,e.array),this._dirty=!0,this},divide:function(e){return Za.divide(this.array,this.array,e.array),this._dirty=!0,this},dot:function(e){return Za.dot(this.array,e.array)},len:function(){return Za.len(this.array)},length:function(){return Za.length(this.array)},lerp:function(e,t,r){return Za.lerp(this.array,e.array,t.array,r),this._dirty=!0,this},min:function(e){return Za.min(this.array,this.array,e.array),this._dirty=!0,this},max:function(e){return Za.max(this.array,this.array,e.array),this._dirty=!0,this},mul:function(e){return Za.mul(this.array,this.array,e.array),this._dirty=!0,this},multiply:function(e){return Za.multiply(this.array,this.array,e.array),this._dirty=!0,this},negate:function(){return Za.negate(this.array,this.array),this._dirty=!0,this},normalize:function(){return Za.normalize(this.array,this.array),this._dirty=!0,this},random:function(e){return Za.random(this.array,e),this._dirty=!0,this},scale:function(e){return Za.scale(this.array,this.array,e),this._dirty=!0,this},scaleAndAdd:function(e,t){return Za.scaleAndAdd(this.array,this.array,e.array,t),this._dirty=!0,this},sqrDist:function(e){return Za.sqrDist(this.array,e.array)},squaredDistance:function(e){return Za.squaredDistance(this.array,e.array)},sqrLen:function(){return Za.sqrLen(this.array)},squaredLength:function(){return Za.squaredLength(this.array)},sub:function(e){return Za.sub(this.array,this.array,e.array),this._dirty=!0,this},subtract:function(e){return Za.subtract(this.array,this.array,e.array),this._dirty=!0,this},transformMat4:function(e){return Za.transformMat4(this.array,this.array,e.array),this._dirty=!0,this},transformQuat:function(e){return Za.transformQuat(this.array,this.array,e.array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this.array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this.array)}};var Qa=Object.defineProperty;if(Qa){var $a=Ja.prototype;Qa($a,"x",{get:function(){return this.array[0]},set:function(e){this.array[0]=e,this._dirty=!0}}),Qa($a,"y",{get:function(){return this.array[1]},set:function(e){this.array[1]=e,this._dirty=!0}}),Qa($a,"z",{get:function(){return this.array[2]},set:function(e){this.array[2]=e,this._dirty=!0}}),Qa($a,"w",{get:function(){return this.array[3]},set:function(e){this.array[3]=e,this._dirty=!0}})}Ja.add=function(e,t,r){return Za.add(e.array,t.array,r.array),e._dirty=!0,e},Ja.set=function(e,t,r,n,i){Za.set(e.array,t,r,n,i),e._dirty=!0},Ja.copy=function(e,t){return Za.copy(e.array,t.array),e._dirty=!0,e},Ja.dist=function(e,t){return Za.distance(e.array,t.array)},Ja.distance=Ja.dist,Ja.div=function(e,t,r){return Za.divide(e.array,t.array,r.array),e._dirty=!0,e},Ja.divide=Ja.div,Ja.dot=function(e,t){return Za.dot(e.array,t.array)},Ja.len=function(e){return Za.length(e.array)},Ja.lerp=function(e,t,r,n){return Za.lerp(e.array,t.array,r.array,n),e._dirty=!0,e},Ja.min=function(e,t,r){return Za.min(e.array,t.array,r.array),e._dirty=!0,e},Ja.max=function(e,t,r){return Za.max(e.array,t.array,r.array),e._dirty=!0,e},Ja.mul=function(e,t,r){return Za.multiply(e.array,t.array,r.array),e._dirty=!0,e},Ja.multiply=Ja.mul,Ja.negate=function(e,t){return Za.negate(e.array,t.array),e._dirty=!0,e},Ja.normalize=function(e,t){return Za.normalize(e.array,t.array),e._dirty=!0,e},Ja.random=function(e,t){return Za.random(e.array,t),e._dirty=!0,e},Ja.scale=function(e,t,r){return Za.scale(e.array,t.array,r),e._dirty=!0,e},Ja.scaleAndAdd=function(e,t,r,n){return Za.scaleAndAdd(e.array,t.array,r.array,n),e._dirty=!0,e},Ja.sqrDist=function(e,t){return Za.sqrDist(e.array,t.array)},Ja.squaredDistance=Ja.sqrDist,Ja.sqrLen=function(e){return Za.sqrLen(e.array)},Ja.squaredLength=Ja.sqrLen,Ja.sub=function(e,t,r){return Za.subtract(e.array,t.array,r.array),e._dirty=!0,e},Ja.subtract=Ja.sub,Ja.transformMat4=function(e,t,r){return Za.transformMat4(e.array,t.array,r.array),e._dirty=!0,e},Ja.transformQuat=function(e,t,r){return Za.transformQuat(e.array,t.array,r.array),e._dirty=!0,e};var eo=At.extend(function(){return{dom:null,renderer:null,camera:null,_boundingBox:new Vt,_hotspotRoot:null,_hotspots:[]}},function(){if(!this.dom||!this.renderer||!this.camera)throw new Error("Tip manager needs `root`,  `camera`, `renderer`");var e=this._hotspotRoot=document.createElement("div");e.style.cssText="position:absolute;top:0;left:0;right:0;bottom:0;overflow:hidden;",this.dom.appendChild(e)},{setBoundingBox:function(e,t){this._boundingBox.min.setArray(e),this._boundingBox.max.setArray(t)},add:function(e,t){if("string"==typeof t){var r=document.createElement("div");r.innerHTML=t,t=r}return t.classList.add("qmv-annotation"),t.style.position="absolute",this._hotspotRoot.appendChild(t),this._hotspots.push({position:e,dom:t}),t},remove:function(e){for(var t=-1,r=0;r<this._hotspots.length;r++)if(this._hotspots[r].dom===e){t=r;break}t>=0&&(this._hotspots.splice(t,1),this._hotspotRoot.removeChild(e))},update:function(){var e=new Ja,t=new Vt;this._hotspots.forEach(function(r){var n=r.position;e.set(n[0],n[1],n[2],1),e.transformMat4(this.camera.viewMatrix);var i=e.z;e.transformMat4(this.camera.projectionMatrix),e.scale(1/e.w);var a=.5*(e.x+1)*this.renderer.getWidth(),o=.5*(e.y+1)*this.renderer.getHeight();r.dom.style.left=a+"px",r.dom.style.top=this.renderer.getHeight()-o+"px";null==r.farAlpha||r.farAlpha,null==r.nearAlpha||r.nearAlpha;t.copy(this._boundingBox),t.applyTransform(this.camera.viewMatrix);t.max.z,t.min.z,t.max.z;r.dom.style.opacity=1,r.onupdate&&r.onupdate(a,o)},this)}});L.import("@export qmv.ground.vertex\n@import clay.lambert.vertex\n@end\n\n\n@export qmv.ground.fragment\n\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\n\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\nuniform float gridSize: 5;\nuniform float gridSize2: 1;\nuniform vec4 gridColor: [0, 0, 0, 1];\nuniform vec4 gridColor2: [0.3, 0.3, 0.3, 1];\n\nuniform bool showGrid: true;\n\nuniform float glossiness: 0.7;\n\n#ifdef SSAOMAP_ENABLED\nuniform sampler2D ssaoMap;\nuniform vec4 viewport : VIEWPORT;\n#endif\n\n#ifdef AMBIENT_LIGHT_COUNT\n@import clay.header.ambient_light\n#endif\n#ifdef AMBIENT_SH_LIGHT_COUNT\n@import clay.header.ambient_sh_light\n#endif\n#ifdef DIRECTIONAL_LIGHT_COUNT\n@import clay.header.directional_light\n#endif\n\n@import clay.plugin.compute_shadow_map\n\nvoid main()\n{\n gl_FragColor = color;\n\n if (showGrid) {\n float wx = v_WorldPosition.x;\n float wz = v_WorldPosition.z;\n float x0 = abs(fract(wx / gridSize - 0.5) - 0.5) / fwidth(wx) * gridSize / 2.0;\n float z0 = abs(fract(wz / gridSize - 0.5) - 0.5) / fwidth(wz) * gridSize / 2.0;\n\n float x1 = abs(fract(wx / gridSize2 - 0.5) - 0.5) / fwidth(wx) * gridSize2;\n float z1 = abs(fract(wz / gridSize2 - 0.5) - 0.5) / fwidth(wz) * gridSize2;\n\n float v0 = 1.0 - clamp(min(x0, z0), 0.0, 1.0);\n float v1 = 1.0 - clamp(min(x1, z1), 0.0, 1.0);\n if (v0 > 0.1) {\n gl_FragColor = mix(gl_FragColor, gridColor, v0);\n }\n else {\n gl_FragColor = mix(gl_FragColor, gridColor2, v1);\n }\n }\n\n vec3 diffuseColor = vec3(0.0, 0.0, 0.0);\n\n#ifdef AMBIENT_LIGHT_COUNT\n for(int _idx_ = 0; _idx_ < AMBIENT_LIGHT_COUNT; _idx_++)\n {\n diffuseColor += ambientLightColor[_idx_];\n }\n#endif\n#ifdef AMBIENT_SH_LIGHT_COUNT\n for(int _idx_ = 0; _idx_ < AMBIENT_SH_LIGHT_COUNT; _idx_++)\n {{\n diffuseColor += calcAmbientSHLight(_idx_, v_Normal) * ambientSHLightColor[_idx_];\n }}\n#endif\n\n#ifdef DIRECTIONAL_LIGHT_COUNT\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n float shadowContribsDir[DIRECTIONAL_LIGHT_COUNT];\n if(shadowEnabled)\n {\n computeShadowOfDirectionalLights(v_WorldPosition, shadowContribsDir);\n }\n#endif\n for(int i = 0; i < DIRECTIONAL_LIGHT_COUNT; i++)\n {\n vec3 lightDirection = -directionalLightDirection[i];\n vec3 lightColor = directionalLightColor[i];\n\n float ndl = dot(v_Normal, normalize(lightDirection));\n\n float shadowContrib = 1.0;\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n if( shadowEnabled )\n {\n shadowContrib = shadowContribsDir[i];\n }\n#endif\n\n diffuseColor += lightColor * clamp(ndl, 0.0, 1.0) * shadowContrib;\n }\n#endif\n\n#ifdef SSAOMAP_ENABLED\n diffuseColor *= texture2D(ssaoMap, (gl_FragCoord.xy - viewport.xy) / viewport.zw).r;\n#endif\n\n gl_FragColor.rgb *= diffuseColor;\n\n gl_FragColor.a *= 1.0 - clamp(length(v_WorldPosition.xz) / 30.0, 0.0, 1.0);\n\n}\n\n@end");var to=["diffuseMap","normalMap","emissiveMap","metalnessMap","roughnessMap","specularMap","glossinessMap"];vt.prototype.init=function(e,t){t=t||{},this.root=e,this._timeline=new li;var r=new kr({devicePixelRatio:t.devicePixelRatio||window.devicePixelRatio});e.appendChild(r.canvas),r.canvas.style.cssText="position:absolute;left:0;top:0",this._renderer=r,this._renderMain=new nt(r,t.shadow,"perspective"),this._renderMain.afterRenderScene=function(e,t,r){this.trigger("renderscene",e,t,r)}.bind(this),this._renderMain.afterRenderAll=function(e,t,r){this.trigger("afterrender",e,t,r)}.bind(this),this._renderMain.preZ=t.preZ||!1;var n=this._cameraControl=new Ya({renderer:r,timeline:this._timeline,domElement:e});n.target=this._renderMain.camera,n.init(),this._hotspotManager=new eo({dom:e,renderer:r,camera:this._renderMain.camera}),this._skeletons=[],this._clips=[],this._takes=[],this._materialsMap={},this._sceneHelper=new it(this._renderMain.scene),this._sceneHelper.initLight(this._renderMain.scene),this.resize(),t.postEffect&&this.setPostEffect(t.postEffect),t.mainLight&&this.setMainLight(t.mainLight),t.secondaryLight&&this.setSecondaryLight(t.secondaryLight),t.tertiaryLight&&this.setTertiaryLight(t.tertiaryLight),t.ambientCubemapLight&&this.setAmbientCubemapLight(t.ambientCubemapLight),t.ambientLight&&this.setAmbientLight(t.ambientLight),t.environment&&this.setEnvironment(t.environment),this._createGround(),t.ground&&this.setGround(t.ground),this.setCameraControl({distance:20,minDisntance:2,maxDistance:100,center:[0,0,0]}),this._enablePicking=t.picking||!1,this._initHandlers(),n.on("update",function(){this.trigger("updatecamera",{center:n.getCenter(),alpha:n.getAlpha(),beta:n.getBeta(),distance:n.getDistance()}),this.refresh()},this)},vt.prototype._createGround=function(){var e=new Mn({isGround:!0,material:new sr({shader:new L({vertex:L.source("qmv.ground.vertex"),fragment:L.source("qmv.ground.fragment")}),transparent:!0}),castShadow:!1,geometry:new _i,renderOrder:-10});e.material.set("color",[1,1,1,1]),e.scale.set(40,40,1),e.rotation.rotateX(-Math.PI/2),this._groundMesh=e,this._renderMain.scene.add(e)},vt.prototype._addModel=function(e,t,r,n){this.removeModel(),this._renderMain.scene.add(e),this._skeletons=r.slice(),this._modelNode=e,this._setAnimationClips(n),t&&t.length&&(this._nodes=t);var i={};e.traverse(function(e){if(e.material){var t=e.material;i[t.name]=i[t.name]||[],i[t.name].push(t)}},this),this._materialsMap=i,this._updateMaterialsSRGB(),this._stopAccumulating()},vt.prototype._removeAnimationClips=function(){this._clips.forEach(function(e){this._timeline.removeClip(e)},this),this._clips=[],this._takes=[]},vt.prototype._setAnimationClips=function(e){function t(){r.refresh()}var r=this;e.forEach(function(e){e.tracks.forEach(function(e){e.target||(e.target=this._nodes[e.targetNodeIndex])},this),e.onframe=t,this._timeline.addClip(e),this._takes.push({name:e.name,range:[0,e.life],clip:e})},this),this._clips=e.slice()},vt.prototype._initHandlers=function(){this._picking=new gi({renderer:this._renderer,scene:this._renderMain.scene,camera:this._renderMain.camera}),this._clickHandler=this._clickHandler.bind(this),this._mouseDownHandler=this._mouseDownHandler.bind(this),this.root.addEventListener("mousedown",this._mouseDownHandler),this.root.addEventListener("click",this._clickHandler)},vt.prototype._mouseDownHandler=function(e){this._startX=e.clientX,this._startY=e.clientY},vt.prototype._clickHandler=function(e){if(this._enablePicking||this._renderMain.isDOFEnabled()){var t=e.clientX-this._startX,r=e.clientY-this._startY;if(!(Math.sqrt(t*t+r*r)>=5)){var n=this._picking.pick(e.clientX,e.clientY,!0);n&&!n.target.isGround?(this._renderMain.setDOFFocusOnPoint(n.distance),this.trigger("doffocus",n),this._selectResult=n,this.trigger("select",n),this.refresh()):(this._selectResult&&this.trigger("unselect",this._selectResult),this._selectResult=null)}}},vt.prototype.enablePicking=function(){this._enablePicking=!0},vt.prototype.disablePicking=function(){this._enablePicking=!1},vt.prototype.setModelUpAxis=function(e){var t=this._modelNode;t&&(t.position.set(0,0,0),t.scale.set(1,1,1),t.rotation.identity(),"z"===e.toLowerCase()&&t.rotation.identity().rotateX(-Math.PI/2),this.autoFitModel())},vt.prototype.setTextureFlipY=function(e){if(this._modelNode){for(var t in this._materialsMap)for(var r=0;r<this._materialsMap[t].length;r++)for(var n=this._materialsMap[t][r],i=0;i<to.length;i++){var a=n.get(to[i]);a&&(a.flipY=e,a.dirty())}this.refresh()}},vt.prototype.resize=function(){var e=this._renderer;e.resize(this.root.clientWidth,this.root.clientHeight),this._renderMain.setViewport(0,0,e.getWidth(),e.getHeight(),e.getDevicePixelRatio()),this.refresh()},vt.prototype.autoFitModel=function(e){if(e=e||10,this._modelNode){this.setPose(10),this._modelNode.update(),this._skeletons.forEach(function(e){e.update()});var t=dt(this._modelNode),r=new Ot;r.copy(t.max).sub(t.min);var n=new Ot;n.copy(t.max).add(t.min).scale(.5);var i=e/Math.max(r.x,r.y,r.z)||1;this._modelNode.scale.set(i,i,i),this._modelNode.position.copy(n).scale(-i),this._modelNode.update(),this._hotspotManager.setBoundingBox(t.min.array,t.max.array),this._modelNode.traverse(function(e){e.isSkinnedMesh()&&e.geometry.boundingBox.applyTransform(this._modelNode.worldTransform)},this),this._groundMesh.position.y=-r.y*i/2,this.refresh()}},vt.prototype.loadModel=function(e,t){if(t=t||{},!e)throw new Error("URL of model is not provided");var r=t.shader||"standard",n=null;t.files&&(n=function(e){if(e.match(/^data:(.*?)base64,/))return e;e=e.replace(/[\\\/]+/g,"/");var r=e.substr(e.lastIndexOf("/")+1);return t.files[r]?t.files[r]:r||""});var i={rootNode:new Kr,shader:"clay."+r,textureRootPath:t.textureRootPath,bufferRootPath:t.bufferRootPath,crossOrigin:"Anonymous",includeTexture:null==t.includeTexture||t.includeTexture,textureFlipY:t.textureFlipY,textureConvertToPOT:!0};n&&(i.resolveTexturePath=i.resolveBinaryPath=n);var a=new ai(i);"string"==typeof e?a.load(e):e instanceof ArrayBuffer?a.parseBinary(e):a.parse(e,t.buffers),t.upAxis&&"z"===t.upAxis.toLowerCase()&&a.rootNode.rotation.rotateX(-Math.PI/2);var o=new di,s=0,u=0,l=0;return a.success(function(e){e.rootNode.traverse(function(e){l++,e.geometry&&(u+=e.geometry.triangleCount,s+=e.geometry.vertexCount)}),this._preprocessModel(e.rootNode,t),this._addModel(e.rootNode,e.nodes,e.skeletons,e.clips),this.autoFitModel();var r={triangleCount:u,vertexCount:s,nodeCount:l,meshCount:Object.keys(e.meshes).length,materialCount:Object.keys(e.materials).length,textureCount:Object.keys(e.textures).length};o.trigger("loadmodel",r);var n=[];bt.each(e.textures,function(e){e.isRenderable()||n.push(e)}),(new pi).allSettled(n).success(function(){this._convertBumpToNormal(),o.trigger("ready"),this.refresh()},this),this.refresh()},this),a.error(function(){o.trigger("error")}),this._textureFlipY=t.textureFlipY,this._shaderName=r,o},vt.prototype._convertBumpToNormal=function(){for(var e in this._materialsMap)for(var t=0;t<this._materialsMap[e].length;t++){var r=this._materialsMap[e][t],n=r.get("normalMap");if(n&&ki.isHeightImage(n.image)){var i=ki.heightToNormal(n.image);i.srcImage=n.image,n.image=i,n.dirty()}}},vt.prototype.removeModel=function(){var e=this._modelNode;e&&(this._renderer.disposeNode(e),this._renderMain.scene.remove(e),this._modelNode=null,this.refresh()),this._removeAnimationClips(),this._materialsMap={},this._nodes=[],this._skeletons=[]},vt.prototype.getScene=function(){return this._renderMain.scene},vt.prototype.getModelRoot=function(){return this._modelNode},vt.prototype._preprocessModel=function(e,t){var r=t.alphaCutoff,n=t.doubleSided,i=[];e.traverse(function(e){e.skeleton&&i.push(e)}),i.forEach(function(e){var t=fi.splitByJoints(e,15,!0);t!==e&&t.eachChild(function(e){e.originalMeshName=t.name})},this),e.traverse(function(e){e.geometry&&(t.regenerateNormal&&e.geometry.generateVertexNormals(),e.geometry.updateBoundingBox(),null!=n&&(e.culling=!n)),e.material&&(e.material.define("fragment","DIFFUSEMAP_ALPHA_ALPHA"),e.material.define("fragment","ALPHA_TEST"),null!=n&&e.material[n?"define":"undefine"]("fragment","DOUBLE_SIDED"),e.material.precision="mediump",null!=r&&e.material.set("alphaCutoff",r),e.material.transparent&&(e.castShadow=!1))})},vt.prototype.loadAnimation=function(e){var t=new ai({rootNode:new Kr,crossOrigin:"Anonymous"});return t.load(e),t.success(function(e){this._removeAnimationClips(),this._setAnimationClips(e.clips)},this),t},vt.prototype.pauseAnimation=function(){this._clips.forEach(function(e){e.pause()})},vt.prototype.stopAnimation=function(){this._clips.forEach(function(e){this._timeline.removeClip(e)},this)},vt.prototype.resumeAnimation=function(){this._clips.forEach(function(e){e.resume()})},vt.prototype.setCameraControl=function(e){this._cameraControl.setOption(e),this.refresh()},vt.prototype.setMainLight=function(e){this._sceneHelper.updateMainLight(e,this),this.refresh()},vt.prototype.setSecondaryLight=function(e){this._sceneHelper.updateSecondaryLight(e,this),this.refresh()},vt.prototype.setTertiaryLight=function(e){this._sceneHelper.updateTertiaryLight(e,this),this.refresh()},vt.prototype.setAmbientLight=function(e){this._sceneHelper.updateAmbientLight(e,this),this.refresh()},vt.prototype.setAmbientCubemapLight=function(e){this._sceneHelper.updateAmbientCubemapLight(e,this),this.refresh()},vt.prototype.setEnvironment=function(e){this._sceneHelper.updateSkybox(e,this._renderMain.isLinearSpace(),this)},vt.prototype.setMaterial=function(e,t){function r(e){return e&&"none"!==e}function n(e){if(e in t)if(r(t[e])){var n="environmentMap"===e;u="normalMap"===e||"parallaxOcclusionMap"===e,Da.loadTexture(t[e],o,{flipY:!n&&s,anisotropic:n?1:8},function(t){if("normalMap"===e&&ki.isHeightImage(t.image)){var r=ki.heightToNormal(t.image);r.srcImage=t.image,t.image=r}else if("environmentMap"===e){var n=Math.round(t.width/4),s=new Ti({width:n,height:n});ki.panoramaToCubeMap(i,t,s),t=s}a.forEach(function(r){r.set(e,t)}),o.refresh()})}else a.forEach(function(t){t.set(e,null)})}var i=this._renderer;t=t||{},e instanceof Array||(e=[e]);var a=[];e.forEach(function(e){this._materialsMap[e]&&(a=a.concat(this._materialsMap[e]))},this);var o=this,s=this._textureFlipY;if(!a||!a.length)return void console.warn("Material %s not exits",e.join(", "));var u=!1;["diffuseMap","normalMap","parallaxOcclusionMap","emissiveMap","environmentMap"].forEach(function(e){n(e)},this),a[0].isDefined("fragment","USE_METALNESS")?["metalnessMap","roughnessMap"].forEach(function(e){n(e)},this):["specularMap","glossinessMap"].forEach(function(e){n(e)},this),u&&this._modelNode.traverse(function(t){
t.material&&t.material.name===e&&(t.geometry.attributes.tangent.value||t.geometry.generateTangents())}),a.forEach(function(e){null!=t.transparent&&(e.transparent=!!t.transparent,e.depthMask=!t.transparent),["color","emission","specularColor"].forEach(function(r){null!=t[r]&&e.set(r,Da.parseColor(t[r]))}),["alpha","alphaCutoff","metalness","roughness","glossiness","emissionIntensity","uvRepeat","parallaxOcclusionScale"].forEach(function(r){null!=t[r]&&e.set(r,t[r])})},this),this.refresh()},vt.prototype.getMaterial=function(e){function t(e){var t=n.get(e);if(!t)return"";for(var r=t.image;r.srcImage;)r=r.srcImage;return r&&r.src||""}var r=this._materialsMap[e];if(!r)return void console.warn("Material %s not exits",e);var n=r[0],i={name:e,transparent:n.transparent};return["color","emission"].forEach(function(e){i[e]=Da.stringifyColor(n.get(e),"hex")}),["alpha","alphaCutoff","emissionIntensity","uvRepeat","parallaxOcclusionScale"].forEach(function(e){i[e]=n.get(e)}),["diffuseMap","normalMap","parallaxOcclusionMap","emissiveMap"].forEach(function(e){i[e]=t(e)}),n.isDefined("fragment","USE_METALNESS")?(["metalness","roughness"].forEach(function(e){i[e]=n.get(e)}),["metalnessMap","roughnessMap"].forEach(function(e){i[e]=t(e)}),i.type="pbrMetallicRoughness"):(i.specularColor=Da.stringifyColor(n.get("specularColor"),"hex"),i.glossiness=n.get("glossiness"),["specularMap","glossinessMap"].forEach(function(e){i[e]=t(e)}),i.type="pbrSpecularGlossiness"),i},vt.prototype.setGround=function(e){"show"in e&&(this._groundMesh.invisible=!e.show),"grid"in e&&this._groundMesh.material.set("showGrid",e.grid),this.refresh()},vt.prototype.getMaterialsNames=function(){return Object.keys(this._materialsMap)},vt.prototype.setPostEffect=function(e){this._renderMain.setPostEffect(e),this._updateMaterialsSRGB(),this.refresh()},vt.prototype.start=function(){if(this._disposed)return void console.warn("Viewer already disposed");this._timeline.start(),this._timeline.on("frame",this._loop,this)},vt.prototype.stop=function(){this._timeline.stop(),this._timeline.off("frame",this._loop)},vt.prototype.addHotspot=function(e,t){return this._hotspotManager.add(e,t)},vt.prototype.setPose=function(e){this._clips.forEach(function(t){t.setTime(e)}),this.refresh()},vt.prototype.getAnimationDuration=function(){var e=0;return this._clips.forEach(function(t){e=Math.max(t.life,e)}),e},vt.prototype.refresh=function(){this._needsRefresh=!0},vt.prototype.getRenderer=function(){return this._renderer},vt.prototype._updateMaterialsSRGB=function(){var e=this._renderMain.isLinearSpace();for(var t in this._materialsMap)for(var r=this._materialsMap[t],n=0;n<r.length;n++)r[n][e?"define":"undefine"]("fragment","SRGB_DECODE")},vt.prototype._loop=function(e){this._disposed||this._needsRefresh&&(this._needsRefresh=!1,this._renderMain.prepareRender(),this._renderMain.render(),this._startAccumulating(),this._hotspotManager.update())};var ro=1;return vt.prototype._stopAccumulating=function(){this._accumulatingId=0,clearTimeout(this._accumulatingTimeout)},vt.prototype._startAccumulating=function(e){function t(i){if(r._accumulatingId&&i===r._accumulatingId&&!r._disposed){r._renderMain.isAccumulateFinished()&&n||(r._renderMain.render(!0),e?t(i):requestAnimationFrame(function(){t(i)}))}}var r=this;this._stopAccumulating();var n=r._renderMain.needsAccumulate();n&&(this._accumulatingId=ro++,e?t(r._accumulatingId):this._accumulatingTimeout=setTimeout(function(){t(r._accumulatingId)},50))},vt.prototype.dispose=function(){this._disposed=!0,this._renderer.disposeScene(this._renderMain.scene),this._renderMain.dispose(this._renderer),this._sceneHelper.dispose(this._renderer),this._renderer.dispose(),this._cameraControl.dispose(),this.root.removeEventListener("mousedown",this._mouseDownHandler),this.root.removeEventListener("click",this._clickHandler),this.root.innerHTML="",this.off("select"),this.off("doffocus"),this.off("unselect"),this.off("afterrender"),this.off("updatecamera"),this.stop()},bt.extend(vt.prototype,yt),vt.version="0.2.1",vt});
